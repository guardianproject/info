<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Research on Guardian Project</title>
    <link>https://guardianproject.github.io/info/categories/research/</link>
    <description>Recent content in Research on Guardian Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 29 Jun 2017 08:13:04 -0400</lastBuildDate>
    
        <atom:link href="https://guardianproject.github.io/info/categories/research/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Repomaker Usability Trainers Worldwide, June 2017</title>
      <link>https://guardianproject.github.io/info/2017/06/29/repomaker-usability-trainers-worldwide-june-2017/</link>
      <pubDate>Thu, 29 Jun 2017 08:13:04 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/29/repomaker-usability-trainers-worldwide-june-2017/</guid>
      <description>

&lt;h1 id=&#34;repomaker-usability-trainers-worldwide-study-p&#34;&gt;Repomaker Usability, Trainers Worldwide Study&lt;/p&gt;&lt;/h1&gt;

&lt;p&gt;Prepared by Carrie Winfrey and Tiffany Robertson, Okthanks, in partnership with F-Droid and Guardian Project&lt;/p&gt;

&lt;div id=&#34;attachment_13844&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/okt-gp.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13844&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-300x72.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;72&#34; class=&#34;size-medium wp-image-13844&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-300x72.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-768x184.png 768w, https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-1024x246.png 1024w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13844&#34; class=&#34;wp-caption-text&#34;&gt;
    OK Thanks – Guardian Project
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;For more information, contact ca&amp;#x72;&amp;#x72;&amp;#x69;e@o&amp;#x6b;&amp;#x74;han&amp;#x6b;&amp;#x73;.co&amp;#x6d;.&lt;/p&gt;

&lt;h1 id=&#34;purpose&#34;&gt;Purpose&lt;/h1&gt;

&lt;p&gt;The purpose of this study was to understand the following things.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are users able to complete basic tasks including, creating a repo, adding apps from other repos, removing apps, editing app details, and creating a second repo?&lt;/li&gt;
&lt;li&gt;Do participants understand how to get the apps from a repo installed on an Android phone?&lt;/li&gt;
&lt;li&gt;Word choice—Do people understand the word repo?&lt;/li&gt;
&lt;li&gt;Is repomaker a useful tool to participants?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;methodology&#34;&gt;Methodology&lt;/h1&gt;

&lt;p&gt;The study was hosted via video calls with potential users within our target audience. It was focused on the trainer use case. The narrative below describes the target use case.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Narrative.&lt;/strong&gt; You live or teach people in a location with poor internet quality. Your wifi and data connection are not reliable, and rarely can you use Google Play to get apps and app updates on your phone. This makes it difficult to do your job. As an instructor, your job is to train journalists how to stay safe while using their phones. You teach them ways to keep their communications and media private.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The study consisted of 3 parts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Usability study.&lt;/strong&gt; Participants were asked to use Repomaker to complete tasks as we prompted them to do so. After completing the tasks, participants were asked to rate its level of difficulty.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;task-list&#34;&gt;Task List:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Login to the app. Create a repo and add three apps that are useful for the journalists you train.&lt;/li&gt;
&lt;li&gt;Add the Twitter app.&lt;/li&gt;
&lt;li&gt;Add the Courier app from the Guardian Project’s repo.&lt;/li&gt;
&lt;li&gt;Add a description to the Courier app.&lt;/li&gt;
&lt;li&gt;Remove an app from your repo.&lt;/li&gt;
&lt;li&gt;Create a second repo. You don’t need to add any apps.&lt;/li&gt;
&lt;li&gt;Reopen your first repo.&lt;/li&gt;
&lt;li&gt;Share your first repo with your journalists.&lt;/li&gt;
&lt;li&gt;Open the page you just shared.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Talk through how your journalists would add this repo to their android phone.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Debrief.&lt;/strong&gt; The following questions were discussed. &lt;ol type=&#34;a&#34;&gt;
&lt;li&gt;
Would the individuals you train feel comfortable downloading F-Droid in order to get access to the apps in a repo? (Note: F-droid cannot be downloaded from the Google Play store. It can be downloaded directly from the fdroid.org website or received over bluetooth from someone in the same room. Also, downloading F-Droid requires you to enable unknown sources on your phone.)
&lt;/li&gt;
&lt;li&gt;
Please tell me how Repomaker would be useful for you?
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Survey.&lt;/strong&gt; Users were asked to complete the survey immediately after the video call:&lt;a href=&#34;https://goo.gl/forms/Acq4zYB3KOtQPxBa2&#34;&gt;https://goo.gl/forms/Acq4zYB3KOtQPxBa2&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;what-was-tested-link-to-youtube-video-https-youtu-be-do9bxqsex4g-p&#34;&gt;What was tested: &lt;a href=&#34;https://youtu.be/do9bxqSeX4g&#34;&gt;Link to youtube video&lt;/a&gt;. &lt;/p&gt;&lt;/h4&gt;

&lt;h1 id=&#34;participants&#34;&gt;Participants&lt;/h1&gt;

&lt;p&gt;9 people participated in the study from countries including Guyana, India, Pakistan, United States and Zimbabwe. 50% of have experience training. View Demographic stats&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Participants were thanked with a $20 gift card to Amazon or Google Play.&lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;main-takeaways&#34;&gt;Main Takeaways&lt;/h1&gt;

&lt;p&gt;In general, people are excited about this tool. A majority of the participants feel that the interface is straight-forward and easy to use. 8 of 9 participants felt that Repomaker is a useful tool and would use it. It is most useful for distributing apps in cases where there is no internet connection. See notable survey results &lt;a href=&#34;#heading=h.paz3gb4hmvya&#34;&gt;Biggest Challenge&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Users need a core understanding of F-Droid and how it works&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The majority of participants felt that they would need to understand F-Droid first before using Repomaker. More info in task 10&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;

&lt;h4 id=&#34;suggested-improvements&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;We need to talk about F-Droid in a way that is familiar to non-technical users.

&lt;ul&gt;
&lt;li&gt;For example: F-Droid is an independent, community-sourced app store. You can customize it by adding repos, collections of apps shared by sources you trust.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Make a strong brand connection between Repomaker and F-Droid. Users need to understand that Repomaker is part of F-Droid.&lt;/li&gt;
&lt;li&gt;Provide step-by-step instructions for installing F-Droid and installing apps from a repo on an Android phone.&lt;/li&gt;
&lt;li&gt;Consider the touchpoints for a first time user—

&lt;ul&gt;
&lt;li&gt;Goes to the F-Droid website&lt;/li&gt;
&lt;li&gt;Views Repomaker page (on the F-Droid website)&lt;/li&gt;
&lt;li&gt;Launches Repomaker&lt;/li&gt;
&lt;li&gt;Opens in a new tab to Login/Signup view.&lt;/li&gt;
&lt;li&gt;Select Sign Up. Enter info. Action button says “Create my first repo”&lt;/li&gt;
&lt;li&gt;New repo view&lt;/li&gt;
&lt;li&gt;Single repo empty view
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;p&#34;&gt;&lt;/p&gt;&lt;/h2&gt;

&lt;h2 id=&#34;2-repo-is-an-abstract-concept&#34;&gt;2. Repo is an abstract concept&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Most participants understood this after they started using the app. Link to survey result&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Though, upon first use, many participants tapped the ‘Add’ button instead of ‘Add from repos’ because they were unsure what ‘Add from repos’ meant. More info in task 1&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;

&lt;h4 id=&#34;suggested-improvements-1&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use the wording “Browse gallery” instead of “Add from repos”.&lt;/li&gt;
&lt;li&gt;Indicate how much stuff is there (2,000 apps, …)&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Use less words in the single repo empty state view. **TICKET #120&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide blurbs about what a repo and and what they can be used for.&lt;/ul&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-participants-had-questions-and-concerns-about-editing&#34;&gt;3. Participants had questions and concerns about editing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Many participants were surprised they could edit apps from other people and commented that they wouldn’t have known they could do it if we hadn’t asked them to do so.&lt;/li&gt;
&lt;li&gt;One participant was unsure if the editing function worked like a Wiki and would update everywhere, or if it would only appear in her repo.&lt;/li&gt;
&lt;li&gt;One participant commented that liked that she could add her own translations.&lt;/li&gt;
&lt;li&gt;Some participants expressed their concern about the security of this feature.&lt;/li&gt;
&lt;li&gt;UI for editing is confusing. Description box takes a long time to load and requires scrolling to see.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#heading=h.om0y9gk1w74z&#34;&gt;More info in task 4&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;suggested-improvements-2&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Address questions and concerns in a FAQ page&lt;/li&gt;
&lt;li&gt;Show bar on editing page, when editing a file from another repo. Ticket ..&lt;/li&gt;
&lt;li&gt;Allow the name and developer to be entered only when the first version of a file is added. Do not allow this to be changed afterward.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add hints to summary and description field. **TICKET #103&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide ‘save’ buttons under text sections rather than one ‘done’ button for the entire page.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Offer translation option within Repomaker **TICKET #58&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If it comes from a remote repository AND there is text in the field, then make it read-only.&lt;/li&gt;
&lt;li&gt;Hook into FAQ about why you can edit things.&lt;/ul&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-people-have-concerns-about-the-security-of-repomaker&#34;&gt;4. People have concerns about the security of Repomaker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Some participants shared concern about people being able to masquerade an app with the editing feature.&lt;/li&gt;
&lt;li&gt;One participant was unsure how public the repo was when she was creating it, and was hesitant about how she named it.&lt;/li&gt;
&lt;li&gt;One participant commented that she didn’t want to be responsible for sharing non-secure apps.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;suggested-improvements-3&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Allow the name and developer to be entered only when the first version of a file is added. Do not allow this to be changed afterward.&lt;/li&gt;
&lt;li&gt;Provide clear information when a repo is created about who has access to the repo.&lt;/li&gt;
&lt;li&gt;Provide a clear ‘publish’ step, so that users know when I repo is made visible to others.&lt;/li&gt;
&lt;li&gt;Address concerns in a FAQ.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-ui-for-search-and-filters-in-the-other-repo-browse-view-is-unclear&#34;&gt;5. UI for search and filters in the ‘Other Repo/Browse’ view is unclear&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It’s unclear that you’re searching within a category if you have one selected.&lt;/li&gt;
&lt;li&gt;Most participants commented that they wanted a clear way to go back from this view. Some would tap back in the browser and changes wouldn’t be saved.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#heading=h.iximbencraon&#34;&gt;More info in task 2&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;suggested-improvements-4&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Redesign how search and filters work together in the UI **TICKET #119&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add apps immediately once selected. Offer the option to remove rather than being able to ‘uncheck’.&lt;/li&gt;
&lt;li&gt;Count apps when added.&lt;/ul&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;****&lt;/p&gt; &lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;page-break-pagebreak&#34;&gt;PAGE_BREAK: PageBreak&lt;/h1&gt;

&lt;h1 id=&#34;usability-metrics&#34;&gt;Usability Metrics&lt;/h1&gt;

&lt;p&gt;Usability metrics refers to participant performance when completing the assigned tasks. This is includes completion success rates, error rates, time to task completion and subjective evaluations/interviews. &lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Critical Errors&lt;/strong&gt;: Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal; help from the test facilitator or others is to be marked as a critical error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Non-critical Errors&lt;/strong&gt;: Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No Problem&lt;/strong&gt;: A qualitative analysis of users ability to complete the task with seemingly ‘no problems’. However, this does not mean that non-critical errors were &lt;em&gt;not&lt;/em&gt; made while completing the task. &lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Level of Difficulty:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The participants were asked to rate the level of difficulty per task as they completed them.&lt;/p&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null2.png&#34; width=&#34;624&#34; height=&#34;393&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
&lt;/p&gt;
                            

&lt;ul&gt;
&lt;li&gt;Task 1: Create a repo and add 3 apps.

&lt;ul&gt;
&lt;li&gt;Users becoming familiar with interface also many believed once they hit ‘add’ and saw the blue button their app had been added or saved to their repo.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 3: Add the Courier app from the Guardian Project’s repo.

&lt;ul&gt;
&lt;li&gt;Rated lowest level of difficulty because users have become familiar with the interface.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 5: Remove an app.

&lt;ul&gt;
&lt;li&gt;Rated highest level of difficulty because users felt there were too many steps involved and most expected to be able to remove an app from the repos view.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 6: Create a second repo.&lt;/li&gt;
&lt;li&gt;Task 8: Share your first repo with the journalist you train.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Average Critical Error Rate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal. Help from the test facilitator or others is to be marked as a critical error. &lt;/p&gt;&lt;/p&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null3.png&#34; width=&#34;624&#34; height=&#34;390&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;p style=&#34;text-align:center;&#34;&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Task 1: One participant unable to complete the task without help from the facilitator. &lt;ul&gt;
          &lt;li&gt;
            Participant thought she could add anything from her applications folder on her computer. 
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 3: One participant unable to compete the task without her from the facilitator. &lt;ul&gt;
          &lt;li&gt;
            The Courier app was already in their repo and they didn’t see the error so when clicking the ‘done’ button they were not brought back to their repo.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 4: Two participants unable to complete the task. &lt;ul&gt;
          &lt;li&gt;
            Added the description to the summary field only (instead of the correct text box).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 5: One participant unable to complete the task. &lt;ul&gt;
          &lt;li&gt;
            Opened and closed app index and app details twice.
          &lt;/li&gt;
          &lt;li&gt;
            Couldn’t figure it out from the repo view and didn’t choose ‘edit’ in the app details view because they weren’t making edits to the app just the repo.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 8: One person was unable to complete the task. &lt;ul&gt;
          &lt;li&gt;
            They tried to get the repo added to their phone first, but was technically unable to do so because of storage limitations.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
                                
    &lt;p&gt;
      &lt;b&gt;&lt;/b&gt;
    &lt;/p&gt;
                                

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
  &amp;lt;b&amp;gt;Average Non-critical Error Rate:&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step. 
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p style=&#34;text-align:center;&#34;&gt;
    &lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null4.png&#34; width=&#34;612&#34; height=&#34;354&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
  &lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Task 1 &amp;amp; 2: Participants learning the interface and multiple steps required to complete the task.

&lt;ul&gt;
&lt;li&gt;Unfamiliar with the word repo.&lt;/li&gt;
&lt;li&gt;Were distracted by the ‘add’ button on repo page.&lt;/li&gt;
&lt;li&gt;Issues with adding from other repos-See details in tasks 1 &amp;amp; 2.&lt;/li&gt;
&lt;li&gt;Blue check didn’t conform to their expectations.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 5: Too many steps involved. Many thought this action would be found within the repo view.&lt;/li&gt;
&lt;li&gt;Task 8: Participants tapped the ‘copy link’ button and after seeing the blue check thought they were finished, but not confident in what just happened. Afterwards, copying and pasting the link in a new tab.&lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;page-break-pagebreak-1&#34;&gt;PAGE_BREAK: PageBreak&lt;/h1&gt;

&lt;h1 id=&#34;task-specific-findings-p&#34;&gt;Task Specific Findings&lt;/p&gt;&lt;/h1&gt;

&lt;h2 id=&#34;task-1-login-to-the-app-create-a-repo-and-add-three-apps-that-are-useful-for-the-journalists-you-train&#34;&gt;Task 1: Login to the app. Create a repo and add three apps that are useful for the journalists you train.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Difficulty&lt;/strong&gt;: 1.83&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No problem&lt;/strong&gt; – &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (44%)&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image.png&#34; width=&#34;693&#34; height=&#34;381&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;i&gt;“I wouldn’t actually put the country name, because I’m not sure how public this is.” (Participant 9)&lt;/i&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;i&gt;&lt;/i&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;i&gt;“I don’t want to be responsible for sending out non-secure apps.” &lt;/i&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  (Participant 5)
&lt;/p&gt;
                            

&lt;h4 id=&#34;observations&#34;&gt;Observations:&lt;/h4&gt;

&lt;p&gt;Apps Index View – Before Apps are Added&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clicked ‘add’ first – &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (44%)&lt;/li&gt;
&lt;li&gt;Thought the ‘+’ in the nav bar was to add apps – &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (22%)&lt;/li&gt;
&lt;li&gt;Unclear that this was only for Android apps; Was confused about which apps could be added; thought she could add things from her applications folder on her computer – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)&lt;/li&gt;
&lt;li&gt;Confused about adding .apk files – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)&lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add from Repos View&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thought when they tapped ‘add’ it would add the app, but it didn’t until they tapped done&lt;/li&gt;
&lt;li&gt;The problem was that people went to the next page or changed the filter and their selections were cleared- &lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (33%)&lt;/li&gt;
&lt;li&gt;Users noticed that some apps showed up multiple times – &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (22%)&lt;/li&gt;
&lt;li&gt;Some left the page without hitting done (ie. used the back button in the browser) – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;participant-feedback&#34;&gt;Participant Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Wanted to sign up using a google account – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)&lt;/li&gt;
&lt;li&gt;Participants glad to see the apps they wanted are available&lt;/li&gt;
&lt;li&gt;Be specific about what file types can be added&lt;/li&gt;
&lt;li&gt;&lt;em&gt;“Can I add my own files?” (Participant 9)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Create buttons appears to ‘lag’ – &lt;sup&gt;7&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; or (77%)&lt;/li&gt;
&lt;li&gt;How do I ensure my repo is private?&lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-2-add-the-twitter-app&#34;&gt;Task 2: Add the Twitter app.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Difficulty&lt;/strong&gt;: 1.55&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No problem&lt;/strong&gt; – &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (44%)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image1.png&#34; width=&#34;702&#34; height=&#34;356&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“I don’t know what ‘other repos’ means.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;(Participant 9)&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        #### Observations:

                        Apps Index View – After (task 2)

                          * Big shiny add button was distracting; thought they would click there to add more apps – 2/9 (22%)
                          * Were confused or didn’t like that the initial action cards merged – 4/9 (44%)

                        #### Participant Feedback:

                          * ‘Add from repos’ button needs to be more visual and bigger
                          * Thought the explore icon looked like an eyeball

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;“I wasn’t sure how to get back to the page I was on.” &amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;(22% of Participants)&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;
                        &amp;lt;/p&amp;gt;

                        Add from Repos View

                          * Need better categories (ex: ‘internet’ category is a little abstract – includes browser’s, privacy twitter and facebook) A social media category would be more relevant __– 2/9 (22%)
                          * It’s not immediately clear that categories filter – 2/9 (22%) 
                              * Participant chose a category filter, then searched. The app didn’t show up, because it was searching within the category.
                          * Search was not easy to find- 1/9 (11%) 

                        #### Participant Feedback:

                          * “Categories aren’t specifically clear.” (Participant 1)
                          * _“I’m used to finding search on the right side.” (Participant 7)_

                        #### Bugs:

                          * Bug filed for adding an app that is already in your repo #108 &amp;lt;/p&amp;gt; 

                        ## 

                        ## PAGE_BREAK: PageBreak

                        ## Task 3: Add the Courier app from the Guardian Project’s repo.

                          * **Average Difficulty**: 1.22
                          * **Number of Participants with Critical Errors**: 1
                          * **No problem** – 8/9 (88%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image2.png&#34; width=&#34;714&#34; height=&#34;340&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        #### Observations:

                          * Participants familiar enough with interface to easily complete task

                        #### Participant Feedback:

                          * One participant made 7 redundant taps on the ‘done’ button during this task. They assumed the page was stalling or the internet connection was unreliable. When in fact, they already had the app in their repo and didn’t see the error/warning message at the top of the page. Wasn’t able to get out of this view unless they reloaded the page or unchecked the blue check mark. &amp;lt;/p&amp;gt; 

                        ## 

                        ## PAGE_BREAK: PageBreak

                        ## Task 4: Add a description to the Courier app.

                          * **Average Difficulty**: 1.5
                          * **Number of Participants with Critical Errors**: 2
                          * **No problem**– 5/9 (55%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image3.png&#34; width=&#34;692&#34; height=&#34;348&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“It seems really strange to be able to edit someone else’s app. I’m really concerned about the security feature of publishing repos. People putting out virtually similar apps, but changing just slightly. Because I can edit almost everything except for the icon. I can upload my own app file but still use their icon. Suggest ways to have warnings about masquerading.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;(Participant 1) &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“Does it work like a wiki when I make changes, or does it only change it in my repo?” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;(Participant 5)&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        #### Observations:

                          * Added description to the summary field – 3/9 (33%)
                          * Commented that they wouldn’t have known they could edit an app, unless we asked them to do it – 3/9 (33%)
                          * Description view takes too long to load – 2/9 (22%)
                          * No indication in the description text box that this is where you add a description – 2/9 (22%)
                          * Want a ‘save’ button with the description box – 2/9 (22%)
                          * Want a back button on this page (wants it to say ‘back to repo’) – 2/9 (22%)

                        __

                        #### Participant Feedback:

                          * If you tap back in the browser, your changes are not saved.
                          * Attach save buttons to sections that are edited, rather than having 1 ‘done’ button
                          * Talk about editing in the FAQ or overview of the app
                          * Simplify edit view&amp;lt;/p&amp;gt; 

                        ## Task 5: Remove an app from your repo.

                          * **Average Difficulty**: 2.16
                          * **Number of Participants with Critical Errors**: 1
                          * **No problem** – 4/9 (44%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image4.png&#34; width=&#34;713&#34; height=&#34;328&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“Edit makes me think that I would edit something within it, rather than removing it.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          (Participant 3)
                        &amp;lt;/p&amp;gt;

                        #### Observations

                          * Expected to be able to remove apps from the main apps index view – 7/9 (77%) 
                              * Most people searched main page, but remembered that they had seen something in the edit view previously.
                              * _I’m not making any changes to the app._ 
                              * _Wasn’t immediately apparent_ 
                              * _Not difficult, just requires a lot of clicks_
                              * I would expect to hover over or long press an app and get the option to remove
                              * I want a ‘remove app’ button on the app page
                          * Likes confirmation to remove the app – 1/9 (11%)&amp;lt;/p&amp;gt; 

                        ## Task 6: Create a second repo. You don’t need to add any apps.

                          * **Average Difficulty**: 1.72
                          * **Number of Participants with Critical Errors**: 0
                          * **No problem**– 6/9 (66%)

                        ####&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/image5.png&amp;quot; width=&amp;quot;740&amp;quot; height=&amp;quot;333&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt; 

                        #### Observations:

                          * Not completely clear, but figured it out – 3/9 (33%)
                          * Trying to find empty state of My Repo view – 2/9 (22%)
                          * Many had tapped + by mistake already (thought it was to add apps)- 2/9 (22%)
                          * Wanted to tap on the name of the repo or near it – 1/9 (11%)

                        Participant Feedback:

                          * Would help to have the option in the My Repos home view
                          * Hover label for new repo (near +)
                          * “Add button says it all.” (Participant 4)
                          * Would like a visual notification that the first repo was saved

                        ## 

                        ## Task 7: Reopen your first repo.

                          * **Average Difficulty**: 1.44
                          * **Number of Participants with Critical Errors**: 0
                          * **No problem** – 8/9 (88%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image6.png&#34; width=&#34;709&#34; height=&#34;324&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“Home conformed to my expectations.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          (Paricipant 5)
                        &amp;lt;/p&amp;gt;

                        #### Observations:

                          * Had figured out how to do it in a previous task – 1/9 (11%)
                          * Tapped back in browser – 1/9 (11%)

                        #### Bug:

                          * Bug with duplicate repos appearing in home screen 1/9 (11%)&amp;lt;/p&amp;gt; 

                        ## 

                        ## Task 8: Share your first repo with your journalists.

                          * **Average Difficulty**: 1.72
                          * **Number of Participants with Critical Errors**: 1
                          * **No problem**– 3/9 (33%)&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/image7.png&amp;quot; width=&amp;quot;716&amp;quot; height=&amp;quot;305&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt;

                        #### 

                        #### Observations:

                          * Copy and pasted the link in a new tab (without prompting) – 4/9 (44%)
                          * Went to share right away – most everyone
                          * Participants tapped ‘copy link,’ saw a blue check and did nothing else – 2/9 (22%)
                          * Used Facebook – 1/9 (11%) 
                          * Used Twitter – 1/9 (11%)
                          * Opened the public link right away. Was going to add it to F-Droid then share with people from there 1/9 (11%)
                          * Not clear how to publish the repo – 1/9 (11%)

                        #### Participant Feedback:

                          * Wants to make sure the link is secure
                          * Don’t want to make it public (Password protection, unlisted?)
                          * Check doesn’t go away after copying link
                          * _“Sending a QR or link doesn’t do anything.” (Participant 1)_
                          * “What does the blue check mean?” (22% of Participants)
                          * Would be nice to be able to email from this page, maybe linkedin
                          * Like the QR code, because very familiar using these
                          * Steps aren’t extremely clear
                          * Likes that it shows how many apps are in your repo
                          * Step by step — this is how you share it with journalists (3 step process)
                          * Having the QR code and link on the same page is helpful
                          * Would like to see a reminder about F-Droid on the share screen
                          * Need to have a clear understanding about F-Droid and how it works

                        ## 

                        ## Task 9: Open the page you just shared.

                          * **Average Difficulty**: 1
                          * **Number of Participants with Critical Errors**: 0
                          * **No problem**– 9/9 (100%)&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/image8.png&amp;quot; width=&amp;quot;704&amp;quot; height=&amp;quot;320&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt;

                        #### Observations:

                          * Everyone highlighted link, copied and pasted it in a new tab to view &amp;lt;/p&amp;gt; 

                        ## 

                        ## PAGE_BREAK: PageBreak

                        ## Task 10: Talk through how your journalists would add this repo to their android phone.

                        #### Main Takeaways:&amp;lt;/p&amp;gt; 

                          1. **The majority of participants felt that they needed a core understanding of F-Droid first**

                        __

                        _“Most people wouldn’t have a problem installing F-Droid. The biggest challenge is knowing how F-Droid works.” (Participant 3)_

                        __

                        _“The concept of a repo is very abstract – the hardest part would be understanding what it is.” (Participant 6)_

                        __

                          * First need to understand F-Droid in order to install a repo
                          * Understood that you need F-Droid first, but believe you would need to spend time explaining FDroid to someone before setting up a repo
                          * Relationship between F-Droid and repomaker is unclear
                          * Might be a challenge if F-Droid is not already adopted into their workflow
                          * People need to be comfortable and familiar with F-Droid first in trainings
                          * If they are educated about F-Droid and info comes from a trusted source, they will be likely to use it
                          * How do I get it if I only have one device

                          1. **Step-by-step instructions needed (beginning with F-Droid installation)**

                        __

                        “Most of the journalists I work with are lazy. They would need step by step instructions.” (Participant 8)&amp;lt;/p&amp;gt; 

                          * Step-by- step instructions would help
                          * If I share it on Facebook, they will have it on their phone. 
                          * Provide info up front that you need F-Droid for it to work
                          * QR code scanner in F-Droid would be helpful. Participant didn’t have a QR code scanner or room to download it
                          * The Pakistani testers liked QR code option for sharing
                          * Wants to make sure the link is secure &amp;lt;/p&amp;gt; 

                        # 

                        # PAGE_BREAK: PageBreak

                        # Is it Useful?

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          8 out of 9 participants agreed Repomaker is a useful tool and would utilize it
                        &amp;lt;/p&amp;gt;

                        ##### YES 

                          * Yes! Participant does multiple trainings in rural areas with students who couldn’t download apps prior to trainings, making talking about the specific apps during the actual trainings too abstract. 
                          * Repomaker is a great idea! Very, very useful! 
                          * See this being a very useful tool for trainings. Easily send a link to trainees prior to the training/conference ask them to install FDroid and download this repo with all the materials needed for our training. 
                          * In a context where people don’t have Google Play, F-Droid makes a lot of sense. 
                          * Yes, because when teaching labs (at university) we must download a few network simulators and apps, but because of the proxies network (restrictions on the internet, sites or apps being blocked) we aren’t able to use wifi in this way, making it difficult or impossible to get the needed materials for lab. Therefore, we could utilize Repomaker in these instances (Nearby tool or bluetooth)
                          * Some people would find it very useful! 
                          * Very useful to host trainings, give people a landing page with a customized repo!
                          * If there is some prior education about FDroid and Repomaker and this education/introduction comes from a trusted source, believes many people would not hesitate to use the tool.
                          * Participant is really struggling with the problem of unreliable internet connectivity, so they are very interested in this app specifically for training purposes and the ability to share repos with people whenever needed.

                        ##### NO OR MAYBE

                          * Not sure, I’m not an Android user. 
                          * How does this make my use case easier? 
                          * Want to know more about F-Droid

                        ##### COUNTRY-SPECIFIC POINTS

                        #### Pakistan

                          * In Pakistan everyone uses Android.
                          * In Pakistan mobile data is expensive and not all areas have good coverage, however, about 70-90% of people have mobile phones with airdrop being a very familiar sharing tool. 
                          * In big cities within Pakistan people are very familiar and comfortable using QR scanners and codes, however, within the smaller, rural areas people are skeptical. 
                          * Access to mobile phones ubiquitous, so mobile platforms really useful.

                        #### Sri Lanka

                          * In Sri Lanka, physical and device checks (army checkpoints) are very common. The guards will check your phone apps and photos, but people would be storing these repos in F-Droid, so apps wouldn’t appear on their home screen. 
                          * F-Droid doesn’t look attractive, so it won’t attract officials attention. 
                          * The galaxy y doesn’t have very much capacity. Storage space is an issue.
                          * If there’s patchy network, people use bluetooth, to save data, because data is money and also to save data.
                          * Most people are using phones that are given by organizations—like World Vision. Some organizations feel that it can be used as a personal device, so they block things so they won’t use data (ex: some block facebook or IMO apps). Sometimes they come with their own apps (like World Nation); blocking other apps. 

                        #### Zimbabwe

                          * Challenge of internet very real in Zimbabwe. Repomaker is very practical and useful. Being able to store apps all in one location. 
                              * Too many people using Google Play at once.

                        #### Participant Feedback:

                          * Could offer a FAQ’s section
                          * On home screen have a few quick questions and answers regarding Repomaker– _What’s a repo? What would I use repomaker for? Learn more here.&amp;lt;/li&amp;gt; 

                              * Additional verification step?
                              * How much will it cost to run the apps? 
                              * How much data will repomaker require?
                              * What about storage? Will repos be able to store on external storage devices?&amp;lt;/ul&amp;gt; &amp;lt;/p&amp;gt; 

                            # 

                            # PAGE_BREAK: PageBreak

                            # Survey Results&amp;lt;/p&amp;gt; 

                            ## Follow-Up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null5.png&#34; width=&#34;624&#34; height=&#34;316&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null6.png&#34; width=&#34;624&#34; height=&#34;357&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null7.png&#34; width=&#34;624&#34; height=&#34;356&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null8.png&#34; width=&#34;624&#34; height=&#34;404&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null9.png&#34; width=&#34;624&#34; height=&#34;312&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null10.png&#34; width=&#34;624&#34; height=&#34;410&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null11.png&#34; width=&#34;624&#34; height=&#34;404&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null12.png&#34; width=&#34;624&#34; height=&#34;310&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ## 

                            ## PAGE_BREAK: PageBreak

                            ## App Distribution&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null13.png&#34; width=&#34;624&#34; height=&#34;309&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null14.png&#34; width=&#34;624&#34; height=&#34;469&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null15.png&#34; width=&#34;624&#34; height=&#34;300&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            #### Notable: How many app?

                            From our responses, a majority of trainers share 2-5 apps during trainings.&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null16.png&#34; width=&#34;624&#34; height=&#34;345&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null17.png&#34; width=&#34;624&#34; height=&#34;330&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ####&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/null18.png&amp;quot; width=&amp;quot;624&amp;quot; height=&amp;quot;340&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt; 

                            #### Notable: Biggest challenge?

                            _**The biggest challenge this set of trainers face is that ‘Participants can’t connect to the internet during a training (75%).&amp;lt;/i&amp;gt;**&amp;lt;/p&amp;gt; 

                            _**Second to that (50%), ‘Participants can’t connect to the internet before the training’ and ‘Sharing an app requires unknown sources to be turned on in the phone settings’.&amp;lt;/i&amp;gt;**&amp;lt;/p&amp;gt; 

                            _**&amp;lt;/i&amp;gt;**&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null19.png&#34; width=&#34;624&#34; height=&#34;313&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ## 

                            ## PAGE_BREAK: PageBreak

                            ## Basic Info&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null20.png&#34; width=&#34;624&#34; height=&#34;304&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null21.png&#34; width=&#34;624&#34; height=&#34;294&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null22.png&#34; width=&#34;624&#34; height=&#34;313&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null23.png&#34; width=&#34;624&#34; height=&#34;352&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null24.png&#34; width=&#34;624&#34; height=&#34;317&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null25.png&#34; width=&#34;624&#34; height=&#34;325&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null26.png&#34; width=&#34;613&#34; height=&#34;329&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null27.png&#34; width=&#34;624&#34; height=&#34;422&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ## 

                            ## PAGE_BREAK: PageBreak

                            ## Would you do it again?&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/null28.png&amp;quot; width=&amp;quot;624&amp;quot; height=&amp;quot;324&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt;

                            ###&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/null29.png&amp;quot; width=&amp;quot;624&amp;quot; height=&amp;quot;278&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt; PAGE_BREAK: PageBreak

                            # Possible FQA’s&amp;lt;/p&amp;gt; 

                            How much data will repomaker require?

                            How much data is required to install F-Droid?

                            How much storage needed?

                            Will repos be able to store on external storage devices?

                            What is F-Droid?

                            What is a repo?

                            What files can I add to my repo?

                            Can apps be downloaded directly from the public repo view?

                            Why do I need F-droid?

                            Can I edit any app?

                            Can others edit my apps?

                            Can others edit my personal repo?

                            How can I customize to a specific training?

                            How public is my repo? Who has access to my repo?

                            How secure is my repo?

                            How do I verify the apps I’m adding to my repo?

                            How do I know apps are coming from the original source?

                            How do I guard against malware?

                            If there are two of the same app, how do I know which one to trust?

                            Can other people masquerade my apps?

                            Is it safe to enable unknown sources?

                            How do I install apps from my repo?

                            Is this a secure tool? Is it safe to use?

                            How much storage will Repomaker and F-Droid need?

                            Can the apps from my repo be downloaded onto an external storage device?&amp;lt;/p&amp;gt; 

                            **How to use F-Droid Repos**

                            – how to add one / how to get a repo on your phone

                            – how to get a repo from the desktop computer to your phone

                            – how to share a repo link

                            – how to share a repo from F-Droid when there’s no internet; how to share one offline / how to share apps with peers when there’s no internet.

                            – how to remove one

                            – how do I update files and apps I add?
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Tracking usage without tracking people</title>
      <link>https://guardianproject.github.io/info/2017/06/08/tracking-usage-without-tracking-people/</link>
      <pubDate>Thu, 08 Jun 2017 10:58:53 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/08/tracking-usage-without-tracking-people/</guid>
      <description>&lt;p&gt;One thing that has become very clear over the past years is that there is a lot of value in data about people. Of course, the most well known examples these days are advertising and spy agencies, but tracking data is useful for many more things. For example, when trying to build software that is intuitive and easy to use, having real data about how people are using the software can make a massive difference when developers and designers are working on improving their software. Even in the case of advertisers, they mostly do not care exactly who you are, they want to know what you are interested in so that they can more effectively promote things to you.&lt;/p&gt;

&lt;p&gt;From the beginning Guardian Project has focused on privacy, and worked to practice what we preach in our own software. For example, we have entirely disabled Apache web logs on our website for the past couple of years, so that we would not even have access to that rich data. We felt that we could not even store that data without fear of violating people’s privacy, let alone working with it.&lt;/p&gt;

&lt;p&gt;Things have changed in the past few years, and there are now a number of well tested techniques for tracking how people are using software without actually tracking who they are. It is now possible to keep some usage data while feeling safe that no one who might get that data could use it to identify individuals. One good example of this is the &lt;a href=&#34;https://metrics.torproject.org/&#34; target=&#34;_blank&#34;&gt;Tor Project’s tracking data&lt;/a&gt;. They provide a wide variety of tracking data to follow how Tor is being used, and how well the Tor network is operating.&lt;/p&gt;

&lt;p&gt;So we believe that it is now possible to responsibly track usage without violating anyone’s privacy. One piece of work along these lines is the new &lt;a href=&#34;https://github.com/cleaninsights/cleaninsights-android-sdk&#34; target=&#34;_blank&#34;&gt;Clean Insights Android SDK&lt;/a&gt;. Nathan is leading the development of that effort. And this blog post announces another new development that we are starting: tracking usage data from F-Droid app repositories.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry-300x133.png&#34; alt=&#34;tracking by country&#34; width=&#34;300&#34; height=&#34;133&#34; class=&#34;aligncenter size-medium wp-image-13632&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry-300x133.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/bycountry.png 747w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To start with, the Apache web logs for this site will be configured to store, but only information that is not fine-grained enough to identify people:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;only the date is stored, not the time or time zone&lt;/li&gt;
&lt;li&gt;Referer, IP Addresses, User Agent are never stored&lt;/li&gt;
&lt;li&gt;country is stored by looking up the IP Address in the &lt;em&gt;geoip&lt;/em&gt; database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Normally, a log entries look like:&lt;/p&gt;

&lt;pre&gt;189.4.73.81 testy.at.or.at - [08/Jun/2017:13:55:46 +0200] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;F-Droid&#34;
119.29.81.134 199.119.112.126 - [08/Jun/2017:14:46:48 -0400] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;http://testy.at.or.at/fdroid/repo/index-v1.jar&#34; &#34;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)&#34;
&lt;/pre&gt;

&lt;p&gt;This stripped version looks like:&lt;/p&gt;

&lt;pre&gt;0.0.0.0 - - [08/Jun/2017:00:00:00 +0000] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;-&#34; AT
0.0.0.0 - - [08/Jun/2017:00:00:00 +0000] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;-&#34; ZH
&lt;/pre&gt;

&lt;p&gt;Since the raw data is processed by the webserver, the extra information will be discarded and never written to disk. Only the sanitized usage tracking information is ever stored. This is based on Tor Project’s &lt;a href=&#34;https://gitweb.torproject.org/webstats.git/tree/src/sanitize.py&#34; target=&#34;_blank&#34;&gt;web tracking&lt;/a&gt;. It is possible to do this with &lt;em&gt;Apache&lt;/em&gt;, &lt;em&gt;lighttpd&lt;/em&gt;, &lt;em&gt;nginx&lt;/em&gt;, and probably other webservers. For &lt;em&gt;Apache&lt;/em&gt;, &lt;a href=&#34;https://github.com/maxmind/geoip-api-mod_geoip2/blob/master/INSTALL.md#configuration&#34;&gt;&lt;i&gt;mod_geoip&lt;/i&gt;&lt;/a&gt; needs to be installed, then only a single line is needed to configure this private logging mode:&lt;/p&gt;

&lt;pre&gt;LogFormat &#34;0.0.0.0 - %u %{[%d/%b/%Y:00:00:00 %z]}t \&#34;%r\&#34; %&gt;s %b \&#34;%{Referer}i\&#34; \&#34;-\&#34; %{GEOIP_COUNTRY_CODE}e&#34; privacy+geo
CustomLog ${APACHE_LOG_DIR}/access.log privacy+geo
&lt;/pre&gt;

&lt;p&gt;Now, we hope that we can work towards providing value from tracking data, without violating anyone’s privacy. Indeed, we are still prioritizing privacy over any value derived from tracking data. So anyone else who also wants to go follow this route needs to be fully aware that any tracking must be very carefully done, since it can easily result in inadvertent leaks. Do not take this as a stamp of approval on any tracking activity!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fdroidserver UX Testing Report</title>
      <link>https://guardianproject.github.io/info/2017/06/01/fdroidserver-ux-testing-report/</link>
      <pubDate>Thu, 01 Jun 2017 04:36:14 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/01/fdroidserver-ux-testing-report/</guid>
      <description>

&lt;p&gt;We ran user tests of &lt;a href=&#34;https://gitlab.com/fdroid/fdroidserver&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;fdroidserver&lt;/em&gt;&lt;/a&gt;, the tools for developers to create and manage F-Droid repositories of apps and media. This test was set up to gather usability feedback about the tools themselves and the related documentation. These tests were put together and run by Seamus Tuohy/Prudent Innovation.&lt;/p&gt;

&lt;h1 id=&#34;methodology&#34;&gt;Methodology&lt;/h1&gt;

&lt;p&gt;Participants completed a pretest demographic/background information questionnaire. The facilitator then explained that the amount of time taken to complete the test task will be measured and that exploratory behavior within the app should take place after the tasks are completed. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The participant was then provided a laptop with a browser window open to the F-Droid documentation. The facilitator let the participant know that if they felt they need anything external that they could ask the facilitator for that. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;At the start of each task, the participant was provided the task, and shown the resources that were available for them to use on a USB stick provided by the facilitator. The participant was then instructed to read the task description from the printed copy and begin the task. Time-on-task measurement began when the participant started the task. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The facilitator instructed the participant to ‘think aloud’ so that they could capture their otherwise internal thoughts about interactions with the F-Droid server software. The facilitator observed and entered participant behavior, participant comments, and system actions into their record of the event. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;After each task, the participant spoke with the facilitator about the task. After all task scenarios were attempted, the participant completed a post-test satisfaction questionnaire.&lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-completion-p&#34;&gt;Task Completion&lt;/p&gt;&lt;/h1&gt;

&lt;p&gt;Each participant was asked to complete six specific tasks. At the start of each task, the participant was read the task, and shown the resources that are available for them to use. The participant was then instructed to read the task description from the printed copy and begin the task. &lt;/p&gt;&lt;/p&gt;

&lt;h2 id=&#34;tasks&#34;&gt;Tasks&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Set Up an F-Droid application repository with the applications on this USB Drive.&lt;/li&gt;
&lt;li&gt;Connect to that repository using the F-Droid client.&lt;/li&gt;
&lt;li&gt;Group the applications under your repositories name in the F-Droid interface.&lt;/li&gt;
&lt;li&gt;Download the barcode scanner application using the F-Droid client.&lt;/li&gt;
&lt;li&gt;Update your F-Droid repository with an update to the barcode scanner app.&lt;/li&gt;
&lt;li&gt;Download the update using the phone.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tasks are marked as “complete” after the participant says they have completed the task or after the test facilitator has enough evidence that the task has been completed. Tasks are marked as “uncompleted” after the participant says they cannot complete the task and requests assistance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://annoyingtechnicaldetails.files.wordpress.com/2017/06/null2.png&#34; width=&#34;574&#34; height=&#34;353&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-completion-time&#34;&gt;Task Completion Time&lt;/h1&gt;

&lt;p&gt;Test time will begin after the participant says they have understood the task and will begin. Testing time will end after the participant says they have completed the task or after the test facilitator has enough evidence that the task has been completed. In the case of a critical error, test time will stop after the participant says they cannot complete the task and request assistance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null3.png&#34; width=&#34;577&#34; height=&#34;356&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;usability-metrics&#34;&gt;Usability Metrics&lt;/h2&gt;

&lt;p&gt;Usability metrics refers to participant performance when completing the assigned tasks. This is includes completion success rates, error rates, time to task completion and subjective evaluations/interviews. &lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Critical Errors&lt;/strong&gt;: Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal; help from the test facilitator or others is to be marked as a critical error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Non-critical Errors&lt;/strong&gt;: Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exploratory Behavior&lt;/strong&gt;: Errors that are off task from the main task attempting to be completed will be marked as exploratory behavior.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null4.png&#34; width=&#34;600&#34; height=&#34;370&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It should be noted that many of the errors that were encountered in tasks two, four, and six were the result of configuration decisions and non-critical errors in tasks one and five. More information about why this is the case can be found in the “Task Specific Findings.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null5.png&#34; width=&#34;600&#34; height=&#34;370&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-specific-findings-p&#34;&gt;Task Specific Findings&lt;/p&gt;&lt;/h1&gt;

&lt;h2 id=&#34;task-1-set-up-an-f-droid-application-repository-with-the-applications-on-this-usb-drive&#34;&gt;Task 1: Set Up an F-Droid application repository with the applications on this USB Drive.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 53 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;docs-needed-for-configuring-the-remote-server&#34;&gt;Docs needed for configuring the remote server&lt;/h3&gt;

&lt;p&gt;The participants were provided a remote server that was pre-configured to host F-Droid applications. The research team did this because setting up a web-server to host an F-Droid repository seemed out of scope, and it would increase the length of the UX session to an unacceptable length.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;During this activity the participants were consistently confused by the documentation related to setting up the F-Droid host server (even though the server was pre-configured for them.) Documentation around file permissions on the remote server were especially troublesome.FOOTNOTE: Footnote&lt;/p&gt;

&lt;h4 id=&#34;feedback&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant was confused about where the documentation begins to start deploying the server.&lt;/li&gt;
&lt;li&gt;The participant stated that there is not enough information on how to configure the remote server.&lt;/li&gt;
&lt;li&gt;It is missing in the documentation that before doing “fdroid server update” the permissions of the files to be served can be changed locally since they are transmitted to the remote server with the same local permissions.&lt;/li&gt;
&lt;li&gt;In the documentation, the information about the file permissions and configuration of the server at Fdroid level is missing. The documentation should say what permissions contain the generated files, (or what permissions they should contain).&lt;/li&gt;
&lt;li&gt;It is missing in the documentation that before doing “fdroid server update” the permissions of the files to be served can be changed locally since they are transmitted to the remote server with the same local permissions.&lt;/li&gt;
&lt;li&gt;The participant did not use the command fdroid server update to push the apps to the remote server, instead of that, he used the command SCP to send the data of manually.&lt;/li&gt;
&lt;li&gt;The participant was confused about the location of the files hosted on the web server. Doubt resolved after reviewing the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;confusing-ordering-of-documentation&#34;&gt;Confusing ordering of documentation&lt;/h3&gt;

&lt;p&gt;The participants felt that the documentation was confusingly ordered. While a few noted that the individual pieces of documentation were correct, and even clear once a participant is familiar with themFOOTNOTE: Footnote, the overall organization and ordering of documentation made it made it difficult to use.&lt;/p&gt;

&lt;h4 id=&#34;feedback-1&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;There were many doubts regarding the order of the steps, there was also a sensation of ordered list of steps when in practice the information were related to different activities (eg. Local Demo and Real World setup)&lt;/li&gt;
&lt;li&gt;The documentation is not understandable, not in terms of language but in the way of explaining, it should be more detailed. It feels difficult to understand for entry level people.&lt;/li&gt;
&lt;li&gt;The way information is presented and how it is structured seems to be disconcerting and overloaded.&lt;/li&gt;
&lt;li&gt;In outlines, poorly structured, getting started should have the section “set repo” and “install”, should not make emphasis on FAQs.&lt;/li&gt;
&lt;li&gt;The participant considers that documentation is confusing as to the step by step, he ends up diverting from the task received.&lt;/li&gt;
&lt;li&gt;The participant said that the content of the list in the overview section is not detailed in subsequent sections in the Setup an Fdroid App Repo page.&lt;/li&gt;
&lt;li&gt;It seems more logical for him if in the main page of the documentation are placed first the tutorials and in the end the FAQs.&lt;/li&gt;
&lt;li&gt;The participant had to use the Ctrl + F function several times to find keywords in the index file of the documentation. It seemed unclear and messy to him.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;metadata&#34;&gt;MetaData&lt;/h3&gt;

&lt;p&gt;All but one of the participants left their app and repository metadata empty during this task. There is a possibility that this is because it was not explicitly stated in the tasks requirements, because it is not clearly marked in the instructions, or because the overall difficulty of the other components of this task distracted them from this component of the task.&lt;/p&gt;

&lt;h4 id=&#34;feedback-2&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant did not complete the repository or application metadata.&lt;/li&gt;
&lt;li&gt;The metadata of the apps and the server was not configured, however the server was running with the given applications.&lt;/li&gt;
&lt;li&gt;The participant did not place the metadata of applications or repository.&lt;/li&gt;
&lt;li&gt;The participant generated the skeleton metadata and did not update the information.&lt;/li&gt;
&lt;li&gt;The participant modifies the metadata files in the visual environment of the local machine (Nautilus and Gedit) because it was more comfortable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;docs-to-help-address-errors&#34;&gt;Docs to help address errors&lt;/h3&gt;

&lt;p&gt;When participants did encounter errors there was little assistance to be found in the existing documentation. The current documentation assumes success. Participants who encountered errors desired that the documentation also included guidance about what could have gone wrong when they encounter errors.&lt;/p&gt;

&lt;h4 id=&#34;feedback-3&#34;&gt;Feedback&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant felt frustrated because he did not find a place in the documentation where he could consult errors.In many times, he wanted to use Google to help with the debug process but would not find relevant information there either. The participant wanted a section in the documentation showing how to validate the steps of the process and again a section with common problems in the implementation and configuration.&lt;/li&gt;
&lt;li&gt;Documentation should have a guide of error messages which can be received, e.g. those related to the metadata.&lt;/li&gt;
&lt;li&gt;The participant says that it could be useful a section in the documentation for Troubleshooting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;android-dependencies&#34;&gt;Android Dependencies&lt;/h3&gt;

&lt;p&gt;Multiple participants were unclear about what android related dependencies were required and how to obtain them.&lt;/p&gt;

&lt;h4 id=&#34;feedback-4&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant seeks for information on how to download Android Studio&lt;/li&gt;
&lt;li&gt;The participant was confused about the need to install the dependencies related to Android in order to complete the task. After reviewing the documentation, the participant decided not to install these dependencies.&lt;/li&gt;
&lt;li&gt;Documentation should be more evident regarding to dependency management. e.g. If the binary installation includes Android dependencies.&lt;/li&gt;
&lt;li&gt;The participant doubts whether to do the setup to create app builds, and if the installation of the corresponding dependencies is covered with the installation itself of Fdroid server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-2-connect-to-that-repository-using-the-f-droid-client&#34;&gt;Task 2: Connect to that repository using the F-Droid client.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 13 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 2&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;https-defaults-on-repository-address&#34;&gt;HTTPS Defaults on Repository Address&lt;/h3&gt;

&lt;p&gt;Even though the developers thought the client was relatively easy to use some encountered issues related to the assumptions that F-Droid makes around the security of a repository. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;When adding a new repository to the client application if the participant leaves the protocol blank (e.g. no HTTP or HTTPS) the client defaults to using HTTPS. If the server does not support HTTPS the repository will fail to set up. A repository that does not support HTTPS is clearly undesirable. But, even so, F-Droid’s implicit assumption, without accompanying documentation and/or errors to alert the developer and participant, caused issues for participants.&lt;/p&gt;

&lt;h4 id=&#34;feedback-5&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The error the participant was experiencing was that the client by default adds the HTTPS protocol to URLs that don’t explicitly state HTTP(s), and the server used for the task did not support HTTPS.&lt;/li&gt;
&lt;li&gt;It should have had documentation on how to input the URL of the repository to be properly recognized.&lt;/li&gt;
&lt;li&gt;The participant received errors when setting the repository address incorrectly with HTTPS as was suggested by default on the client application on the android phone. Then the participant noticed the situation and changed the address to HTTP.&lt;/li&gt;
&lt;li&gt;The client is intuitive to use.&lt;/li&gt;
&lt;li&gt;The solution to the issue presented does not seem complex to the participant but is not documented and is liable to make mistakes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;interconnected-documentation-needed&#34;&gt;Interconnected Documentation Needed&lt;/h3&gt;

&lt;p&gt;When switching from building a repository to using the repository the participants had to search for client documentation in other parts of the F-Droid website and online. Multiple participants suggested that client documentation related to the use of the F-Droid server being set up should be more easily accessed from the server setup documentation. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;It should be noted that the participants were using a development build of the new documentation, and, as such it was not directly linked to the F-Droid website where the client documentation is available.&lt;/p&gt;

&lt;h4 id=&#34;feedback-6&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;In the documentation, there was no information about how setup the client’s app.&lt;/li&gt;
&lt;li&gt;The client documentation should be accessible in the server-setup documentation. For example, including how to install and setup the client.&lt;/li&gt;
&lt;li&gt;The participant claimed the task was completed, however the connection was not successful because he wrongly placed the URL repository in the Android client (root@1xx.1xx.1xx.1xx:/var/www/html /). The participant was then assisted to move on to the next activity.He explains that in the client FAQ does not appear how to fill the URL of new repositories in the client&lt;/li&gt;
&lt;li&gt;Very confused about how to get started.&lt;/li&gt;
&lt;li&gt;Within the app was easy to complete the task, since it is an intuitive application. It becomes necessary to have a step-by-step list of how to set the repositories in the client, especially the URLs.&lt;/li&gt;
&lt;li&gt;A link to home of fdroid.org could be placed in the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-3-group-the-applications-under-your-repositories-name-in-the-f-droid-interface&#34;&gt;Task 3: Group the applications under your repositories name in the F-Droid interface.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 1 Minute&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;metadata-1&#34;&gt;MetaData&lt;/h3&gt;

&lt;p&gt;Participants had quick success and no critical errors during this task. But, the participants achieved this by circumventing the aim of the test. Instead of appropriately setting the metadata of their app, and searching for it within the Client, they disabled all other repositories to make it so that only their apps showed in the client. This rapid and common adoption of this specific method of circumventing the need to set, and use, metadata is specifically troubling.&lt;/p&gt;

&lt;h4 id=&#34;feedback-7&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant felt confused about what was expected in the task. However, he thought that disabling other repositories on the client list could be enough.&lt;/li&gt;
&lt;li&gt;There should be an option to disable all repositories included in the software.&lt;/li&gt;
&lt;li&gt;At the beginning, it was confusing to understand which switches had to be disabled and which ones to enabled in order to see the applications of the own repository. It was simple a few seconds later but it should be specified in the documentation.&lt;/li&gt;
&lt;li&gt;There should be in the documentation an instructive manual on the use of the client to manage repositories.&lt;/li&gt;
&lt;li&gt;The participant found very easy to disable other repositories in order to see only the applications of the server used&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-4-download-the-barcode-scanner-application-using-the-f-droid-client&#34;&gt;Task 4: Download the barcode scanner application using the F-Droid client.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 15 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The issues that the participants faced in this task were actually related to earlier tasks with “critical issues” that were undetectable until this point. Without the file permission issues, described below, downloading apps was seen as a very easy task. This highlights the overall feeling by the developer participants that the client is generally easy and intuitive to use.&lt;/p&gt;&lt;/p&gt;

&lt;h3 id=&#34;server-permissions&#34;&gt;Server Permissions&lt;/h3&gt;

&lt;p&gt;The participants encountered multiple difficult to diagnose issues related to file permissions on the remote server. These issues only appear once a participant is attempting to download an application from a F-Droid repository. As such, permission issues can easily slip past a repo maker who merely updates their repository and checks to ensure that it can be connected to.&lt;/p&gt;

&lt;h4 id=&#34;feedback-8&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant received in the Android client the error “Unsuccessful Non-critical error download”, understood at the time as a permissions error on the (min 1) remote server, which he modified directly at the time by accessing through SSH before re-testing the download.&lt;/li&gt;
&lt;li&gt;Extremely comfortable and fast if the operation of permissions on the Subjective remote server is known. The participant works with this permissions evaluation management every day and says that’s why it became so easy, but perhaps for another person without such familiarity on web servers could be more complicated.&lt;/li&gt;
&lt;li&gt;“It’s easy once you know how to configure file permissions.”&lt;/li&gt;
&lt;li&gt;The participant did not locate any documentation about remote server configuration, especially related to file permissions on the web server. The participant suggests that for many people this would be necessary.&lt;/li&gt;
&lt;li&gt;In the documentation, the information about the file permissions and configuration of the server at Fdroid level is missing. The documentation should say what permissions contain the generated files, (or what permissions they should contain).&lt;/li&gt;
&lt;li&gt;The participant understood how to resolve the permissions problem on the remote server and corrected it by placing 775 permissions on the remote server’s files. However other actions meant that the activity could not be completed successfully.&lt;/li&gt;
&lt;li&gt;The client displayed the error “Connection refused”, the participant concluded that it was due to a problem of permissions on the remote server, however decided to address it by modifying the nginx configuration file, resulting in the inability to read and download files from the remote server.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-5-update-the-f-droid-repository-with-an-update-to-the-barcode-scanner-app&#34;&gt;Task 5: Update the F-Droid repository with an update to the barcode scanner app.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 9 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;updating-the-server&#34;&gt;Updating the Server&lt;/h3&gt;

&lt;p&gt;Some participants had continued difficulty working with the server during updates. While some of this was related to difficulty differentiating tasks that should be conducted on the client vs. those that should be conducted on the server when reading the documentation, others were related to the behavior of the software.&lt;/p&gt;

&lt;h4 id=&#34;feedback-9&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The upgrade process is better documented compared to other parts of the documentation, but still could be more detailed.&lt;/li&gt;
&lt;li&gt;The terminal was giving an error on the local machine when running the update command saying “CRITICAL: Failed to get repo pubkey!”, later the participant discovered that the update was pushed anyway to the server saying that the task was completed.&lt;/li&gt;
&lt;li&gt;The participant felt confused about which commands must be executed in the local machine and which commands in the remote evaluation server. The participant says that if he needs to configure an exclusively local instance he would not know how to do it. The participant says that it could be useful a section in the documentation for Troubleshooting&lt;/li&gt;
&lt;li&gt;The participant does not know exactly where to place the update files.&lt;/li&gt;
&lt;li&gt;The participant is not clear whether it is necessary to run the command fdroid update and then fdroid server update, or just by running fdroid server update would both of the commands run automatically.&lt;/li&gt;
&lt;li&gt;The participant cannot read the update from the client and doubts whether to run a command on the remote server as part of the update process, then he solves by doing update of the local repository before pushing the remote server.&lt;/li&gt;
&lt;li&gt;The participant was not clear if Fdroid update, actually updates the remote server, then after running it he was able to access via SSH to the remote server in order to check if the updated application was present, when seeing that it was not updated, the participant understood that he also had to run Fdroid server update&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;documentation-is-intuitive-once-understood&#34;&gt;Documentation is Intuitive Once Understood&lt;/h3&gt;

&lt;p&gt;Once participants got comfortable with the documentation, server setup, and/or updating process they felt that it was relatively easy to use.&lt;/p&gt;

&lt;h4 id=&#34;feedback-10&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Very well designed software to handle the updates, it ends up being very easy to use.&lt;/li&gt;
&lt;li&gt;The task was easy once you understand the file structure in the repository.&lt;/li&gt;
&lt;li&gt;The task was very pleasant to complete at the software level.&lt;/li&gt;
&lt;li&gt;Documentation is clear but yet confusing at first reading.&lt;/li&gt;
&lt;li&gt;The upgrade process is better documented compared to other parts of the documentation, but still could be more detailed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-6-download-the-update-using-the-phone&#34;&gt;Task 6: Download the update using the phone.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 7 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;permissions-cont&#34;&gt;Permissions Cont.&lt;/h3&gt;

&lt;p&gt;Permissions issues that went unaddressed in task 5 caused issues during the, otherwise very easy task, of downloading updates to an application.&lt;/p&gt;

&lt;h4 id=&#34;feedback-11&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Once understood the issue of file permissions on the remote server, is easy to address the download of the update.&lt;/li&gt;
&lt;li&gt;It’s easy once you know how to configure file permissions.&lt;/li&gt;
&lt;li&gt;Replaying of the same issue of permissions and the error “Download unsuccessful”, then resolved by knowing how permissions are handled on the remote server.&lt;/li&gt;
&lt;li&gt;It is missing in the documentation that before doing “fdroid server update” the permissions of the files to be served can be changed locally since they are transmitted to the remote server with the same local permissions.&lt;/li&gt;
&lt;li&gt;Very pleasant on the Android client side, but it should be documented the type of permissions that the files on the remote server should contain.&lt;/li&gt;
&lt;li&gt;The update is loaded in the remote repo but it does not show on the&lt;/li&gt;
&lt;li&gt;Fdroid client, then the participant suspects it is because of the file permissions. After 12 minutes the participant says that he does not know how to fix the issue and stopped the task. The participant suspects before notifying the failure in the task completion that the issue could be related to some commands and files created as root that creating conflicts with the tasks triggered by the server update command.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;miscellaneous-feedback-and-requests&#34;&gt;Miscellaneous Feedback and Requests&lt;/h2&gt;

&lt;h3 id=&#34;complexity-of-language-in-the-documentation&#34;&gt;Complexity of Language in the Documentation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One participant used Google Translator for a better understanding of some terms within the documentation. This participant was also the only participant who speaks English as their primary language. All other participants speak Spanish as their primary language.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;documentation-requests&#34;&gt;Documentation requests&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One participant wanted example configuration files in the Gitlab repository of F-Droid-server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;more-explicit-documentation&#34;&gt;More explicit documentation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The documentation must specify that a set of files has been created when fdroid init runs&lt;/li&gt;
&lt;li&gt;It should have specified that commands with Fdroid should be executed in the main directory of the repository (e.g. ~/fdroid) and not in other directories within it (e.g. ~/fdroid /repo).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>F-Droid User Testing, Round 2</title>
      <link>https://guardianproject.github.io/info/2017/05/01/f-droid-user-testing-round-2/</link>
      <pubDate>Mon, 01 May 2017 04:51:24 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/05/01/f-droid-user-testing-round-2/</guid>
      <description>

&lt;p&gt;#&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null14.png&#34; width=&#34;624&#34; height=&#34;164&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;by Hailey Still and Carrie Winfrey&lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;****&lt;/h1&gt;

&lt;p&gt;Here we outline the User Testing process and plan for the &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt; app store for Android. The key aims of F-Droid are to provide users with a) a comprehensive catalogue of open-source apps, as well as b) provide users with the the ability to transfer any app from their phone to someone in close physical proximity. With this User Test, we are hoping to gain insights into where the product design is successful and what aspects need to be further improved. Main goals are obtaining a baseline user performance and identifying potential design concerns regarding ease of use. An additional goal is to promote F-Droid as an alternative to the Google Play app store.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The usability test objectives are to determine usability problem areas within the user interface and content areas. Key focus points include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App navigation: failure to locate functions, excessive clicks to complete a task or failure to complete task&lt;/li&gt;
&lt;li&gt;Presentation errors: selection errors due to labeling ambiguities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The usability test also aims to gain a deeper understanding of our users, what needs they are hoping to meet by using F-Droid, and a basic user-satisfaction level. Our participants for this round of testing will represent a range of ages, backgrounds and technological literacy levels. All tests will be performed with guidance and support of a test facilitator.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;methodology&#34;&gt;Methodology&lt;/h2&gt;

&lt;p&gt;Users will be tested with the assistance of screen and audio recordings, which are to be analyzed post-test. A pre-test questionnaire will record basic demographic data and a post-test survey will gather insight on overall usability experience. The test will include a standard task completion portion as well as a desirability card sorting (to capture qualitative data on user experience).&lt;/p&gt;

&lt;p&gt;Participants will be asked to fill out a demographic and background information survey. The facilitator will explain that the amount of time taken to complete the task will be measured and that they should remain focused on the task. The participant will read the task description, ask any questions they may have and begin the task. Measurement begins when the participant begins the task.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Participants will be encouraged to think aloud. The facilitator will minimally assist the participants during task completion. The facilitator will observe and enter user behavior, comments, and actions.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;After all task scenarios are attempted, the participant will complete the post-test desirability card activity and survey. This activity will comprise of asking participants to choose 5 cards they feel reflect their overall experience and elaborate on their choices. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usability Tasks:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The tasks were randomly administered, with the exception of the “Last Task” which was always administered last.&lt;/p&gt;

&lt;p&gt;TASK A. Search for an app that you would like to download. Install the app you have selected.&lt;/p&gt;

&lt;p&gt;TASK B. There is an app that needs to be updated. Find the app and install the update.&lt;/p&gt;

&lt;p&gt;TASK C. Find a game app that looks interesting to you. Install the app.&lt;/p&gt;

&lt;p&gt;TASK D. Search for a crossword puzzle app within the games category.&lt;/p&gt;

&lt;p&gt;TASK E. If you had no internet, how would you download an app?&lt;/p&gt;

&lt;p&gt;TASK F. Your friend emails you a link to a collection of their favorite apps. Open gmail and click on the link they have sent you. Add the collection of apps that your friend emailed to you to F-Droid. Locate an app called Habitica from the collection you just downloaded.&lt;/p&gt;

&lt;p&gt;LAST TASK. Add the collection of apps displayed on the computer to F-Droid.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desirability Cards:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null15.png&#34; width=&#34;624&#34; height=&#34;213&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Metrics&lt;/p&gt;

&lt;p&gt;Tests hosted in two locations, Vienna, Austria and Lubbock, Texas. These charts represent the combined metrics for all tests at both locations.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level of Difficulty:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The participants were asked to rate the level of difficulty per task as they completed them.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null16.png&#34; width=&#34;624&#34; height=&#34;457&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Critical Error Rate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal. Help from the test facilitator or others is to be marked as a critical error. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null17.png&#34; width=&#34;624&#34; height=&#34;420&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Non-critical Error Rate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Non-critical errors do not include exploratory behavior. Exploratory behavior includes errors that are&lt;/p&gt;

&lt;p&gt;off task from the main task attempting to be completed.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null18.png&#34; width=&#34;624&#34; height=&#34;440&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desirability Toolkit Responses&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Vienna:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null19.png&#34; width=&#34;624&#34; height=&#34;194&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lubbock:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null20.png&#34; width=&#34;624&#34; height=&#34;160&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;detailed-testing-reports&#34;&gt;Detailed Testing Reports&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1Y7AV3N8cmqm7yMPFuK6_qbyO86IXYoAJuTuhwCHmnK4/?ts=5905d383#heading=h.sz9pxldla478&#34; target=&#34;_blank&#34;&gt;Detailed Report from Vienna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1Wavy1Kce7WAmrM277e6QV6ziTvM05uMCsvGSdzi-Uzg&#34; target=&#34;_blank&#34;&gt;Detailed Report from Lubbock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/forms/d/1wbAoganpj9KpE00qQj0uOAPETkV9xodV4ubA2UZxbn8/#responses&#34; target=&#34;_blank&#34;&gt;Demographic Survey Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/forms/d/1jflue3U1mV-ht55gfkdHPYvOjVernCmdbUdXn26DikU#responses&#34; target=&#34;_blank&#34;&gt;Follow-up Survey Results&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>F-Droid Lubbock Report – What We Want to Know</title>
      <link>https://guardianproject.github.io/info/2017/04/17/f-droid-lubbock-report-what-we-want-to-know/</link>
      <pubDate>Mon, 17 Apr 2017 08:07:47 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/04/17/f-droid-lubbock-report-what-we-want-to-know/</guid>
      <description>

&lt;hr /&gt;

&lt;h1 id=&#34;f-droid-lbk-usability-study-report-what-we-want-to-know-p&#34;&gt;F-Droid LBK Usability Study Report – What We Want to Know&lt;/p&gt;&lt;/h1&gt;

&lt;p&gt;Prepared by Carrie Winfrey&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Preliminary Version – April 17, 2017&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;When planning this user test, the team outlined features and flows within the app on which we wanted feedback. From there, we created tasks for participants to complete that would access these areas, and produce insights related to our inquires.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;This document is organized by the tasks participants completed. Initial inquiry questions are outlined under each task, followed by the feedback and observations gained from the test. Last, within each section, I’ve listed suggestions for improvement related to the task.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;In the Lubbock sessions, 11 people participated in this focused usability study. More information on participant demographics, test methodology, metrics, and follow-up activities and insights will be provided soon.&lt;/p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-a-search-for-an-app-that-you-would-like-to-download-install-the-app-you-have-selected&#34;&gt;TASK A – Search for an app that you would like to download. Install the app you have selected.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 1.9&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“App won’t install. Found the game easily, though.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to locate the search button?

&lt;ul&gt;
&lt;li&gt;Yes. Most users found the search button right away.&lt;/li&gt;
&lt;li&gt;Some (3 out of 10) browsed through the latest or category view to find an app instead of using search.&lt;/li&gt;
&lt;li&gt;One participant said he never saw the search button.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Are they able to effectively use search?

&lt;ul&gt;
&lt;li&gt;Yes.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Are they able to find what they’re looking for?

&lt;ul&gt;
&lt;li&gt;Not always. Searching for mainstream apps like Gmail, ESPN, Facebook and Twitter returns no relevant results.&lt;/li&gt;
&lt;li&gt;“It took about 10 tries to find an app I searched for. It might be difficult for users to find the app they have an interest in.”&lt;/li&gt;
&lt;li&gt;One participant searched for recipes, but misspelled it, so no relevant results were displayed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other insights:&lt;/li&gt;
&lt;li&gt;Many users expressed that it was difficult to know if and app had installed.

&lt;ul&gt;
&lt;li&gt;“I found it difficult to figure out if the apps had installed. No notification?”&lt;/li&gt;
&lt;li&gt;Some participants searched on the home screen of the phone, then in the apps on their phone to see if the app had installed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4 participants were unable to install apps all together due to a bug in the app version being tested.&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Location of search&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Though most people didn’t have trouble locating search, a majority are most familiar with finding it at the top of the screen.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Search results&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Display more relevant search results. Ex: If someone searches for Gmail and we don’t have it, offer alternative email apps.&lt;/li&gt;
&lt;li&gt;Use suggestive results to help users avoid spelling errors and to make the action of searching quicker.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feedback once installed&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Provide better feedback once an app is installed for views within the app (installed from list view, app details and updates views).&lt;/li&gt;
&lt;li&gt;Show a system notification when an app is installed.&lt;/li&gt;
&lt;li&gt;Give the option to add installed apps to the home screen of the phone.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fix bugs&lt;/strong&gt; Fix bugs with installing apps.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-b-there-is-an-app-that-needs-to-be-updated-find-the-app-and-install-the-update&#34;&gt;TASK B – There is an app that needs to be updated. Find the app and install the update.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 2.3&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“The update icon at the bottom with red number notifications was easy to find.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“It took me multiple attempts to update the applications.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Is it clear where to go to find updates?

&lt;ul&gt;
&lt;li&gt;Yes. Every participant easily located the updates tab.&lt;/li&gt;
&lt;li&gt;“It was very easy to spot apps that need updating.”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Can users successfully update an app?

&lt;ul&gt;
&lt;li&gt;No.&lt;/li&gt;
&lt;li&gt;The difference in word choice on app details than in updates view confused multiple users.

&lt;ul&gt;
&lt;li&gt;“The update icon at the bottom with red number notifications was easy to find. Once I clicked on the specific app to update it gave the option to uninstall or upgrade. I wasn’t sure if upgrade was the same as update or not – it sounded like something I’d have to pay for.”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Every participant that tried to update an app from the updates view had problems.

&lt;ul&gt;
&lt;li&gt;“Took me multiple attempts to update the applications. Not positive the update occurred. There was no indication of completion.”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It was unclear if an app had successfully updated. Participants were not confident that they had updated the app.&lt;/li&gt;
&lt;li&gt;We need to provide better feedback once an update is complete and successful.&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Word Choice&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Change ‘upgrade’ to updates in app details.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feedback&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Provide better feedback once an update is complete and successful within the updates view.&lt;/li&gt;
&lt;li&gt;Give a system notification when an update is successful.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fix bugs&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;I’ve shared a screen record that reveals the problems.&lt;/li&gt;
&lt;li&gt;For some users, the red badge indicator didn’t change after they updated the app. This behavior needs to be tested internally.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PAGE_BREAK: PageBreak&lt;/p&gt;

&lt;h1 id=&#34;task-c-find-a-game-app-that-looks-interesting-to-you-install-the-app&#34;&gt;TASK C – Find a game app that looks interesting to you. Install the app.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 1.7&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How do users browse when looking for a specific kind of app, like a game? Do they search, look in categories, browse, etc.

&lt;ul&gt;
&lt;li&gt;Most participants looked through the games category. Some browsed latest. Some used search.&lt;/li&gt;
&lt;li&gt;Many people found the categories view appealing, and spent more time there than on the latest view, when looking for apps. One participant compared it to the iTunes Store, but commented that it was even easier.&lt;/ul&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;task-d-search-for-a-crossword-puzzle-app-within-the-games-category&#34;&gt;TASK D – Search for a crossword puzzle app within the games category.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 1.1&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to effectively search within categories?

&lt;ul&gt;
&lt;li&gt;We saw a variety of behaviors with this task. But, overall, people were able to do this without problems.

&lt;ul&gt;
&lt;li&gt;4 participants searched in within categories&lt;/li&gt;
&lt;li&gt;2 participants searched from search&lt;/li&gt;
&lt;li&gt;2 participants browsed in horizontal view of the category&lt;/li&gt;
&lt;li&gt;2 participants opened category and scrolled down to find &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easier use of chip&lt;/strong&gt; Once you clear a chip, there’s no easy way to get it back if you want to search within that category.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-e-if-you-had-no-internet-how-would-you-download-an-app&#34;&gt;TASK E – If you had no internet, how would you download an app?&lt;/h1&gt;

&lt;p&gt;Average difficulty: 3.1&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 7 of 10 that attempted the task were unable to identify the nearby feature as the place to download apps without internet.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Nearby didn’t give me the idea of downloading while offline.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to discover how to download apps offline?

&lt;ul&gt;
&lt;li&gt;A few. But not the majority.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is it clear that you use they nearby feature to do this?

&lt;ul&gt;
&lt;li&gt;No.&lt;/li&gt;
&lt;li&gt;70% of participants never identified the nearby feature as the means for doing this.&lt;/li&gt;
&lt;li&gt;“Nearby didn’t give me the idea of downloading while offline.”&lt;/li&gt;
&lt;li&gt;30% successfully identified nearby. Though, most after looking several other places?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;What other behaviors are observed?

&lt;ul&gt;
&lt;li&gt;Turning WiFi off to see if the interface changed&lt;/li&gt;
&lt;li&gt;Going into airplane mode&lt;/li&gt;
&lt;li&gt;Downloading an airplane mode app&lt;/li&gt;
&lt;li&gt;Opening settings and looking in WiFi options&lt;/li&gt;
&lt;li&gt;Searching google.&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Additional Observations&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;People did not make the connection between ‘nearby’ and downloading apps offline.&lt;/li&gt;
&lt;li&gt;Not one participant read the text on the Nearby view when they initially tapped on it.&lt;/li&gt;
&lt;li&gt;Multiple people compared nearby to Air Drop on iOS&lt;/li&gt;
&lt;li&gt;“It’s going to airdrop a virus to your phone.”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Word choice&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Reconsider the word choice.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Offline mode&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The experience of the app should be obviously different when there’s no internet connection.&lt;/li&gt;
&lt;li&gt;Guide users toward the nearby feature if there’s no connection.&lt;/li&gt;
&lt;li&gt;Consider providing info in settings&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;More engaging visuals&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;If we want people to pay attention to the Nearby view, it needs to be more engaging.&lt;/li&gt;
&lt;li&gt;If we keep the language about offline, consider using iconography that communicates that.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-f-your-friend-emails-you-a-link-to-a-collection-of-their-favorite-apps-open-gmail-and-click-on-the-link-they-have-sent-you-add-the-collection-of-apps-that-your-friend-emailed-to-you-to-f-droid-locate-an-app-called-habitica-from-the-collection-you-just-downloaded&#34;&gt;TASK F – Your friend emails you a link to a collection of their favorite apps. Open gmail and click on the link they have sent you. Add the collection of apps that your friend emailed to you to F-Droid. Locate an app called Habitica from the collection you just downloaded.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 2.2&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: Every participant was able to add add the repo. 4 of 11 participants were unable to locate the Habitica app that was added from the repo.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;“I was able to find the link the email and accept the apps, but have no idea where to find the collection from my friend in F-Droid.”&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to add a repo from a link opened on mobile?

&lt;ul&gt;
&lt;li&gt;Yes. No one had problems with this.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is the webpage for adding a repo clear?

&lt;ul&gt;
&lt;li&gt;Yes.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Are users able to find the apps from a repo they have added?

&lt;ul&gt;
&lt;li&gt;No. Participants were very confused.&lt;/li&gt;
&lt;li&gt;100% participants didn’t know if they had added the repo successfully after completing the steps.&lt;/li&gt;
&lt;li&gt;“I was able to find the link in the email and accept the apps, but I have no idea where to find the collection from my friend in F-Droid.”&lt;/li&gt;
&lt;li&gt;Some were able to find one app by searching for it.&lt;/li&gt;
&lt;li&gt;Average non-critical errors for finding the app—2

&lt;ul&gt;
&lt;li&gt;5 users were able to locate the app; most after multiple attempts&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Average critical errors for finding the app—3.73

&lt;ul&gt;
&lt;li&gt;3 users were unable to locate the app added from the repo&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other places people looked

&lt;ul&gt;
&lt;li&gt;In categories thinking the latest apps added would be shown first&lt;/li&gt;
&lt;li&gt;In the latest view&lt;/li&gt;
&lt;li&gt;In settings &amp;gt; Manage installed apps&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do users understand that the apps added from a repo are only made available to them, and not auto-downloaded and installed?

&lt;ul&gt;
&lt;li&gt;Not really. It was hard to know for sure since the users never saw a list of those apps on the phone once they added the repo.&lt;/li&gt;
&lt;li&gt;It seemed that some participants were surprised to see that they still had to download the app Habitica after finding it via search.&lt;/li&gt;
&lt;li&gt;Many participants assumed the apps from a repo would download.&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feedback&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Currently, there’s no indication of completion.&lt;/li&gt;
&lt;li&gt;The experience of adding an app cannot end after they tap add. People are way too confused. Also, currently after tapping add, the app returns to the screen they were previously on within the app, which could be anything.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make apps accessible&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The user needs to immediately be able to see the apps they just added to their phone. Note: it should be clear that these are made available, but not downloaded automatically.&lt;/li&gt;
&lt;li&gt;The user needs to be able to access the apps within a repo later on.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Handle delay&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Is there a delay in the repo updating? We noticed that some people tried to search for an app that was within a repo they added, but even then, it didn’t show up.&lt;/li&gt;
&lt;li&gt;Update only the repo that was added instead of all. Not sure what the current behavior is.&lt;/p&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-g-last-task-add-the-collection-of-apps-displayed-on-the-computer-to-f-droid&#34;&gt;TASK G (Last Task) – Add the collection of apps displayed on the computer to F-Droid.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 2.6&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;“I followed the steps on the computer but wasn’t sure where the code from the QR scanner went. I added a new repository and there was a link already in it so I just clicked add, but have no idea what it did.”&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to add a repo from a collection they view on desktop?

&lt;ul&gt;
&lt;li&gt;Yes. Surprisingly, the majority of participants did not have trouble scanned the QR code and adding the repo.&lt;/li&gt;
&lt;li&gt;Same confusions as mentioned above about knowing if it worked and locating the repo.&lt;/li&gt;
&lt;li&gt;“I don’t know if it worked. How do I know if it worked?”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is the word choice clear?

&lt;ul&gt;
&lt;li&gt;Somewhat. It didn’t trip people up from completing the task.&lt;/li&gt;
&lt;li&gt;Multiple people commented that the word repository didn’t resonate with them. They preferred the word Collections.&lt;/ul&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fix bugs&lt;/strong&gt; F-Droid crashed a lot after people scanned the code, opened F-Droid and tapped add. I think this was due to the phone being in landscape then portrait mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrate QR code scanner&lt;/strong&gt; within the add repo view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Word choice&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;additional-observations&#34;&gt;Additional Observations&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Concerns of Malware&lt;/strong&gt; While most participants were not keen on security and the potential risk of downloading apps from a source other than Google Play, one participant was keenly aware. He made multiple comments about how the app is an open door for malware.

&lt;ul&gt;
&lt;li&gt;**We need to address the security risks, and what F-Droid does to mitigate those risks. We need to be open and transparent in our communications to build trust.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tablet&lt;/strong&gt; Optimize the latest view for tablet. Show more grid tiles horizontally (i.e. display 3 instead of 2 in portrait mode) and increase font size.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;more-information-coming-soon&#34;&gt;More information coming soon!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Methodology (Note: All tasks were completed in different orders by the participants with the exception of Task G, which was always completed last.)&lt;/li&gt;
&lt;li&gt;Participant demographic&lt;/li&gt;
&lt;li&gt;Desirability toolkit&lt;/li&gt;
&lt;li&gt;Follow-up survey results&lt;/li&gt;
&lt;li&gt;Usability metrics &amp;amp; stats&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Imagining the challenges of developers in repressive environments</title>
      <link>https://guardianproject.github.io/info/2017/01/26/imagining-the-challenges-of-developers-in-repressive-environments/</link>
      <pubDate>Thu, 26 Jan 2017 09:56:59 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/01/26/imagining-the-challenges-of-developers-in-repressive-environments/</guid>
      <description>

&lt;p&gt;The Guardian Project team spends a lot of time thinking about users. In our work we focus on easy-to-use applications for users in high-risk scenarios. Because of this we are very focused on security. In our current work with the FDroid community to make it a secure, streamlined, and verifiable app distribution channel for high-risk environments we have started to become &lt;a href=&#34;https://guardianproject.info/2015/02/24/phishing-for-developers/&#34;&gt;more aware&lt;/a&gt; of the challenges and risks facing software developers who build software in high-risk environments.&lt;/p&gt;

&lt;p&gt;There are a wealth of resources available on how to support and collaborate with high-risk users. Unsurprisingly, we could not find any guidance on how to support and collaborate with developers in repressive environments, let alone developers who are put at high-risk because of the software they develop. So, we have started conducting “user research” with developers from a range of repressive environments.&lt;/p&gt;

&lt;p&gt;We started our user research by conducting surveys and interviews with Internet Freedom donors, developers, and CSOs about the challenges of being a, or working with, software developers in places where the internet is heavily monitored and filtered. We did this for two reasons. First, we want to make sure that the output produced is valuable to our target audience. Second, we wanted to see how this community viewed the challenges that these developers face. We are a little over ¾ done with our interviews and decided to share some initial thoughts from our interviews alongside that initial survey research.&lt;/p&gt;

&lt;h3 id=&#34;how-to-read-the-survey-results&#34;&gt;How to read the survey results&lt;/h3&gt;

&lt;p&gt;Each of the plots below shows how survey respondents ranked the level of challenge or negative impact specific factors had on the different phases of the development life-cycle. The survey split these rankings into categories that included the design (&lt;strong&gt;Des&lt;/strong&gt;) and development (&lt;strong&gt;Dev&lt;/strong&gt;) of software; deploying (&lt;strong&gt;Dep&lt;/strong&gt;) and maintaining (&lt;strong&gt;Maint&lt;/strong&gt;) software; and general threats (&lt;strong&gt;Thrt&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Participants were also asked to provide some basic information about their relationship to developers in repressive environments. We did this to explore the ways that experience might impact how some groups evaluate the challenges faced by developers in repressive environments. Using their answers we split the results into six groups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At Risk&lt;/strong&gt;: The type of of software development they, or those they interact with, could put either of them at risk.&lt;br /&gt;
&lt;strong&gt;Censor/Surv&lt;/strong&gt;: They are based in a place where the internet is heavily monitored filtered.&lt;br /&gt;
&lt;strong&gt;Not Censor/Surv&lt;/strong&gt;: They are not based in a place where the internet is heavily monitored filtered.&lt;br /&gt;
&lt;strong&gt;Collab&lt;/strong&gt;: They collaborate, support, or work with developers who are based in a place where the internet is heavily monitored or filtered.&lt;br /&gt;
&lt;strong&gt;Dev&lt;/strong&gt;: They develop Software&lt;br /&gt;
&lt;strong&gt;All&lt;/strong&gt;: Everyone who was surveyed.&lt;/p&gt;

&lt;p&gt;The initial survey was not designed to create accurate comparisons between groups who were surveyed and the data visualizations do not reflect the number of participants who declined to answer specific questions. It is also important to note that we asked participants to fill out the survey based upon the regions that they work in. Because of the possible identifying nature of participants responses we did not ask them to identify what regions those were. This had led to a wide variation in many of the responses.&lt;/p&gt;

&lt;h3 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h3&gt;

&lt;p&gt;Infrastructure plays a critical role in technological development. Software development, distribution, and use require an interconnected world of infrastructure. Only a small portion of this infrastructure is controlled and maintained by the developer. They also rely on a range of public and private infrastructure to provides power, connectivity, and financial support.&lt;/p&gt;

&lt;p&gt;To explore these topics we first asked about the challenge that barriers to Internet access played in the design (&lt;strong&gt;Des&lt;/strong&gt;) and development (&lt;strong&gt;Dev&lt;/strong&gt;) of software for developers in high-risk environments. Generally, respondents thought that it was a greater challenge for developers to design software for these environments than to conduct development in these environments.&lt;/p&gt;

&lt;div id=&#34;attachment_13476&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13476&#34; class=&#34;wp-image-13476 size-full&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/bandwidth-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/bandwidth-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13476&#34; class=&#34;wp-caption-text&#34;&gt;
    Internet/data bandwidth, connectivity, and/or cost
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;In our interviews we have heard that barriers to internet access can make it difficult to learn how to develop software and to easily get the libraries, documentation, and support that make developing software easier. It is not a universal challenge. Access varies widely depending upon the developer’s region. When it is a barrier it is often one of the largest barriers that is faced. We were happy to find that the challenges of designing software for users in areas with barriers to Internet access is one area where there is &lt;a href=&#34;https://developers.google.com/billions/&#34;&gt;existing guidance&lt;/a&gt; for developers in these regions.&lt;/p&gt;

&lt;p&gt;We also asked how a developer’s own infrastructure led to challenges when developing (&lt;strong&gt;Dev&lt;/strong&gt;), deploying (&lt;strong&gt;Dep&lt;/strong&gt;), and maintaining (&lt;strong&gt;Maint&lt;/strong&gt;) software.&lt;/p&gt;

&lt;div id=&#34;attachment_13477&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13477&#34; class=&#34;size-full wp-image-13477&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/dev_infra-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/dev_infra-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13477&#34; class=&#34;wp-caption-text&#34;&gt;
    Developer Infrastructure (e.g Hosting, setup, security, software)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;This topic, like barriers to internet access, had widely varying responses in the Interviews depending on the region the developer was based in. Unlike internet access, where technology was the root of the challenges the responses to these questions showed that legal challenges were the root of hosting challenges. In regions where international sanctions were in place this was a greater concern in the everyday experience of developers. Data localization was another more recent legal concern that was brought up in the interviews.&lt;/p&gt;

&lt;p&gt;Financial infrastructure and other economic challenges can impact various stages of the software lifecycle. Even FOSS developers need to make a living. To look at financial infrastructure we asked if access to payment systems was a challenge when designing (&lt;strong&gt;Des&lt;/strong&gt;) and developing (&lt;strong&gt;Dev&lt;/strong&gt;) software. We also asked about general challenges to monetizing and earning revenue when maintaining software and supporting users (&lt;strong&gt;Maint&lt;/strong&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_13478&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13478&#34; class=&#34;size-full wp-image-13478&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/money-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/money-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13478&#34; class=&#34;wp-caption-text&#34;&gt;
    Economics (payment, monetizing, &amp; earning revenue)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;As with many of the other questions payment and monetization challenges vary widely by region. Interviewers from areas with economic sanctions spoke of monetization as a greater challenge than any other group of interviewees. Because economic challenges vary so widely, we will hold off on discussing them in more depth until we are done with our analysis.&lt;/p&gt;

&lt;h3 id=&#34;localization&#34;&gt;Localization&lt;/h3&gt;

&lt;p&gt;Many developers face challenges far before they have to worry about their infrastructure. Not only are a majority of programming languages in English, many of the textbooks used to teach software development are in English as well. We asked our survey participants if localized software libraries, platforms, or developer documentation were a challenge for developers in high-risk environments when they were designing (&lt;strong&gt;Des&lt;/strong&gt;), developing (&lt;strong&gt;Dev&lt;/strong&gt;), and deploying (&lt;strong&gt;Dep&lt;/strong&gt;) software.&lt;/p&gt;

&lt;div id=&#34;attachment_13479&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13479&#34; class=&#34;size-full wp-image-13479&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/localization-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/localization-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13479&#34; class=&#34;wp-caption-text&#34;&gt;
    Localization of software libraries, platforms, or developer documentation
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Access to localized content was seen as a primary concern in almost every interview we have had with developers. In multiple interviews basic English language skills were even described as a requirement for any software development. Even developers with basic technical English skills spoke about the challenges of finding the appropriate tools and libraries because the descriptive documentation was difficult to skim. The lack of multi-language books, blog-posts, and forums also impedes access to best-practices and developer guidance.&lt;/p&gt;

&lt;h3 id=&#34;targeted-attacks&#34;&gt;Targeted Attacks&lt;/h3&gt;

&lt;p&gt;Attacks that focus on compromising the user through counterfeit software pirated by a user are not new. But, increased secondary and local markets for apps increase the possible otherwise legitimate locations where a malicious counterfeits of apps can be uploaded. We asked questions about impact of possible malicious counterfeit versions of their software being produced on how developers their design (&lt;strong&gt;Des&lt;/strong&gt;) and deploy (&lt;strong&gt;Dep&lt;/strong&gt;) their software. Targeted attacks against developers can be used to compromise their otherwise legitimate software to to deliver malicious content. We also asked about the challenges related to possible backdoors in the software or developer tools they used (&lt;strong&gt;Thrt&lt;/strong&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_13480&#34; style=&#34;width: 967px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13480&#34; class=&#34;size-full wp-image-13480&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png&#34; alt=&#34;&#34; width=&#34;957&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png 957w, https://guardianproject.info/wp-content/uploads/2016/12/malicious-300x89.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/malicious-768x229.png 768w&#34; sizes=&#34;(max-width: 957px) 100vw, 957px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13480&#34; class=&#34;wp-caption-text&#34;&gt;
    Malicious &amp; Counterfeit Software
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Only a couple of the developers we interviewed expressed concern about malicious counterfeit versions of their applications.&lt;/p&gt;

&lt;p&gt;While targeted attacks were acknowledged by some interviewees, most described the insertion of backdoors as less likely than targeted threats that aimed at stopping the developer from continuing development. The initial survey asked about the challenge of developer account shutdown and/or seizures during development (&lt;strong&gt;Dev&lt;/strong&gt;) and take-down requests (&lt;strong&gt;Thrt&lt;/strong&gt;) because of content restrictions, defamation laws, copyright claims, etc.&lt;/p&gt;

&lt;div id=&#34;attachment_13481&#34; style=&#34;width: 967px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13481&#34; class=&#34;size-full wp-image-13481&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png&#34; alt=&#34;&#34; width=&#34;957&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png 957w, https://guardianproject.info/wp-content/uploads/2016/12/takedown-300x89.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/takedown-768x229.png 768w&#34; sizes=&#34;(max-width: 957px) 100vw, 957px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13481&#34; class=&#34;wp-caption-text&#34;&gt;
    Account shutdown and/or seizures during development or software take-down requests
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The in-platform censorship we surveyed for was seen as far less a challenge in the interviews. Interviewees were far more concerned about the possibility of real-world legal censorship or harassment. When asked how developers addressed their perceived threats many of the interviewees noted that developers go beyond technological measures to protect themselves. Many also rely heavily on the strategic use of pseudonyms and other operational security measures.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;With our interviews nearly complete it is interesting to look back at, what seemed like, wide disagreement at the time of the survey as an indicator of how important local context is to the challenges and threats faced by developers in repressive societies. Over the next couple of months we will be building user personas that synthesize and codify our findings. We hope these personas will help other individuals and organizations working on internet freedom issues to think about how they can structure their projects to support and collaborate with developers in repressive environments in safe and productive ways.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HOWTO: get all your Debian packages via Tor Onion Services</title>
      <link>https://guardianproject.github.io/info/2016/07/31/howto-get-all-your-debian-packages-via-tor-onion-services/</link>
      <pubDate>Sun, 31 Jul 2016 17:28:57 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2016/07/31/howto-get-all-your-debian-packages-via-tor-onion-services/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-300x199.png&#34; alt=&#34;leakage&#34; width=&#34;300&#34; height=&#34;199&#34; class=&#34;alignright size-medium wp-image-12699&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-300x199.png 300w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-100x66.png 100w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-150x99.png 150w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-200x132.png 200w, https://guardianproject.info/wp-content/uploads/2014/10/leakage.png 410w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Following up on &lt;a href=&#34;https://guardianproject.info/2014/10/16/reducing-metadata-leakage-from-software-updates/&#34; target=&#34;_blank&#34;&gt;some privacy leaks that we looked into a while back&lt;/a&gt;, there are now official Debian &lt;a href=&#34;https://onion.debian.org&#34; target=&#34;_blank&#34;&gt;Tor Onion Services&lt;/a&gt; for getting software packages and security updates, thanks to the Debian Sys Admin team. This is important for high risk use cases like TAILS covers, but also it is useful to make it more difficult to do some kinds of targeted attacks against high-security servers. The default Debian and Ubuntu package servers use plain HTTP with unencrypted connections. That means anyone with access to the network streams could both monitor and fingerprint traffic. When an request for a security update is spotted, an attacker knows that machine is vulnerable to an exploit, and could reliably exploit it before the security update is applied.&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&#34;https://labs.riseup.net/code/issues/8143&#34; target=&#34;_blank&#34;&gt;HTTPS to get security updates&lt;/a&gt; improves this situation a lot, but by measuring the size of data transfers, it is still possible to &lt;a href=&#34;http://www0.cs.ucl.ac.uk/staff/G.Danezis/papers/TLSanon.pdf&#34; target=&#34;_blank&#34;&gt;track which files are being downloaded&lt;/a&gt;. A Tor Onion Service provides end-to-end encryption like the HTTPS connection. It also mixes up the traffic with lots of other traffic, so its not easy to see what traffic goes together. That makes it a lot harder for a network observer to tell when a security update is being downloaded. Additionally, using a Tor Onion Service forces the traffic over Tor, so that the Debian mirror server cannot see which server is requesting the updates. That helps prevent targeted attacks.&lt;/p&gt;

&lt;p&gt;There are other benefits as well, besides just for the person running the high security server in this example, especially if all of the traffic is coming over Tor. When updates are delivered over Tor, then that means the Debian mirror operators have less to worry about because they are handling less metadata that might have privacy concerns. It means that when law enforcement requests logs from the mirror operators, the mirror operators can more easily hand over anything they have since the mirror operator knows that there is not private information in the logs. Reducing the legal risks and privacy concerns makes it easier to run mirrors, and that helps internet services work better.&lt;/p&gt;

&lt;p&gt;One disadvantage of this approach as it now stands is that your server will get updates from the same mirror every time. There is only a single Tor Onion Service for the main archive. An alternate approach using the combination of Tor and &lt;a href=&#34;http://httpredir.debian.org/&#34;&gt;http://httpredir.debian.org/&lt;/a&gt; as the package source means that your server will get updates from a different mirror each time Tor changes its exit node (I believe that’s every 10 minutes or so).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How can you set up your Debian machine to get updates over Tor?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11-300x173.jpg&#34; alt=&#34;debian and tor&#34; width=&#34;300&#34; height=&#34;173&#34; class=&#34;alignright size-medium wp-image-13395&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11-300x173.jpg 300w, https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11-768x444.jpg 768w, https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11.jpg 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Right now, the best way to set up a Debian machine to force traffic over Tor is to use &lt;a href=&#34;https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxy&#34; target=&#34;_blank&#34;&gt;transparent proxying&lt;/a&gt; via &lt;em&gt;iptables&lt;/em&gt; rules. If you have that setup, then you can add the onion addresses as Debian apt sources as if they are any other HTTP Debian mirror. Another option is to install &lt;em&gt;apt-transport-tor&lt;/em&gt; like TAILS does, then you can use &lt;a href=&#34;http://people.skolelinux.org/pere/blog/Always_download_Debian_packages_using_Tor___the_simple_recipe.html&#34; target=&#34;_blank&#34;&gt;special syntax to add the Tor Onion Services&lt;/a&gt;. And another way is to install an HTTP proxy like &lt;em&gt;privoxy&lt;/em&gt; and enable apt HTTP proxy support as &lt;a href=&#34;https://guardianproject.info/2014/10/16/reducing-metadata-leakage-from-software-updates/&#34; target=&#34;_blank&#34;&gt;I described before&lt;/a&gt;. The &lt;em&gt;apt-transport-tor&lt;/em&gt; and &lt;em&gt;privoxy&lt;/em&gt; approaches both have the downside of having to trust an added piece of software, whereas the transparent proxy technique uses what is already present in the Linux kernel. I’ve been using the &lt;em&gt;privoxy&lt;/em&gt; method since that is what I got working in 2014 and it has been working reliably on multiple servers since then. Also, I need &lt;em&gt;privoxy&lt;/em&gt; installed for another application anyway.&lt;/p&gt;

&lt;p&gt;Here’s how to set up the apt sources to get packages and updates via Tor Onion Services without delaying security updates. First, remove &lt;em&gt;/etc/apt/sources.list&lt;/em&gt; and &lt;em&gt;/etc/apt/sources.list.d/*.list&lt;/em&gt; to start with a clean slate. Next add &lt;em&gt;/etc/apt/sources.list.d/00.vwakviie2ienjx6t.onion.list&lt;/em&gt; to get the main Debian repositories:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://vwakviie2ienjx6t.onion/debian/ jessie main
deb-src http://vwakviie2ienjx6t.onion/debian/ jessie main

# aka volatile
deb http://vwakviie2ienjx6t.onion/debian/ jessie-updates main
deb-src http://vwakviie2ienjx6t.onion/debian/ jessie-updates main

deb http://vwakviie2ienjx6t.onion/debian jessie-backports main
deb-src http://vwakviie2ienjx6t.onion/debian/ jessie-backports main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next add the new Tor Onion Service for the security update repository at &lt;em&gt;/etc/apt/sources.list.d/00.sgvtcaew4bxjd7ln.onion.list&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://sgvtcaew4bxjd7ln.onion/ jessie/updates main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then last, include the normal HTTP security.debian.org archive to ensure that your server gets the latest security updates, even if the &lt;a href=&#34;https://onion.debian.org/&#34; target=&#34;_blank&#34;&gt;Onion Service mirror&lt;/a&gt; is behind or there is some other issue related to Tor. This goes in &lt;em&gt;/etc/apt/sources.list.d/99.security.debian.org.list&lt;/em&gt; to ensure that it is always the last repository that is tried, and apt loads files from /etc/apt/source.list.d/ in alphabetical order, so it’ll always try to get the security updates from the Onion Service before falling back to the HTTP source as a last resort.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://security.debian.org/ jessie/updates main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also run an unofficial mirror of the security updates on &lt;a href=&#34;http://dju2peblv7upfz3q.onion/debian&#34;&gt;http://dju2peblv7upfz3q.onion/debian&lt;/a&gt; if you want to add another backup, i.e. &lt;em&gt;/etc/apt/sources.list.d/00.dju2peblv7upfz3q.onion.list&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://dju2peblv7upfz3q.onion/debian-security/ jessie/updates main
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to Migrate Your Android App’s Signing Key</title>
      <link>https://guardianproject.github.io/info/2015/12/29/how-to-migrate-your-android-apps-signing-key/</link>
      <pubDate>Tue, 29 Dec 2015 12:03:54 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/12/29/how-to-migrate-your-android-apps-signing-key/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;It is time to update to a stronger signing key for your Android app! The old default RSA 1024-bit key is weak and officially deprecated.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;what&#34;&gt;What?&lt;/h2&gt;

&lt;p&gt;The Android OS requires that every application installed be signed by a digital key. The purpose behind this signature is to identify the author of the application, allow this author and this author alone to make updates to the app, as well as provide a mechanism to establish inter-application trust. The Android security model defines an app by two things: the package name (aka &lt;a href=&#34;https://developer.android.com/reference/android/content/Context.html#getPackageName%28%29&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;packageName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/applicationid-vs-packagename&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ApplicationID&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://developer.android.com/guide/topics/manifest/manifest-element.html#package&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;package&lt;/code&gt;&lt;/a&gt;) and the signing key. If either of those are different, then Android considers it a different app. When the package name and signing key of one APK match an installed app, then the APK is considered an update and Android will replace the installed app with the APK. If the APK is signed by a different key, then Android will prevent installing and updating.&lt;/p&gt;

&lt;p&gt;First thing is to see what the current signing key is. Check any app’s signing key using our free utility app &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.checkey&#34; target=&#34;_blank&#34;&gt;Checkey&lt;/a&gt;:&lt;/p&gt;

&lt;div id=&#34;attachment_13170&#34; style=&#34;width: 790px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/12/checkey-1.png&#34; rel=&#34;attachment wp-att-13170&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13170&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-1024x576.png&#34; alt=&#34;Lookout needs to generate a new key!&#34; width=&#34;780&#34; height=&#34;439&#34; class=&#34;size-large wp-image-13170&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-1024x576.png 1024w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-300x169.png 300w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-768x432.png 768w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-350x197.png 350w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-860x484.png 860w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1.png 1280w&#34; sizes=&#34;(max-width: 780px) 100vw, 780px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13170&#34; class=&#34;wp-caption-text&#34;&gt;
    Lookout needs to generate a new key!
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The official Android docs have tons of useful information about what the signing keys are good for, how to generate them, and how to use them. Unfortunately, it doesn’t provide any instructions for migrating, and for many years, 1024-bit RSA was the default. But first, why would you want or need to migrate?&lt;/p&gt;

&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Depending on when you created your signing key, you might have a particularly weak key. The primary danger of a weak key is that an adversary could break your key in order to generate fake APK signatures. Then those malicious APKs can be installed as updates to your app. There are other nefarious purposes depending on how you use the signing key in your apps. Or if you are unfortunate enough to have suffered a loss of your private key material, then it is definitely time for a new signing key.&lt;/p&gt;

&lt;p&gt;According to our friends at the &lt;a href=&#34;https://androidobservatory.org/stats&#34; title=&#34;Android Observatory&#34;&gt;Android Observatory&lt;/a&gt;, over 64% of Android apps in their data store use 1024-bit signing keys (RSA or DSA).&lt;/p&gt;

&lt;div id=&#34;visualization&#34; style=&#34;width: 600px; height: 400px;&#34;&gt;
&lt;/div&gt;

&lt;p&gt;There are several good reasons to migrate off of 1024-bit RSA keys, even though there is no &lt;em&gt;public&lt;/em&gt; proof of a 1024 prime factorization required to generate any 1024-bit key at will. The evidence has been mounting for a decade.&lt;/p&gt;

&lt;p&gt;NIST’s &lt;a href=&#34;http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57_part1_rev3_general.pdf&#34;&gt;official guidelines&lt;/a&gt; (PDF, page 64 and 67) deprecated 1024-bit RSA keys at the end of 2013. This deprecation by NIST isn’t an indication that 1024-bit RSA is compromised, instead it is a preemptive move to stay ahead of attacks. Confidence in NIST might be shaken in light of &lt;a href=&#34;http://blog.cryptographyengineering.com/2013/09/on-nsa.html&#34;&gt;recent revelations&lt;/a&gt;, but in this case increasing the RSA key size is unlikely to trigger any secret NSA backdoors. If anything, the deprecation year could have been extended slightly to allow the NSA a window where they had the capacity to factor 1024-bit keys and everyone was still using them. So, it’s time to move on.&lt;/p&gt;

&lt;p&gt;For an example, a decade ago the cost of building special purpose hardware capable of breaking a single 1024-bit RSA key in one year was estimated at $10 million (&lt;a href=&#34;http://tau.ac.il/~tromer/papers/cbtwirl.pdf&#34;&gt;Adi Shamir, Eran Tromer, On the cost of factoring RSA-1024&lt;/a&gt;, 2003). Presumably the techniques have improved by orders of magnatude, and the hardware value depreciated. It is conceivable the cost has fallen enough to be affordable not only by nation-state actors, but by large criminal enterprises too.&lt;/p&gt;

&lt;p&gt;For a comprehensive talk on the state of the art (as of December 2012) when it comes to breaking 1024-bit RSA, check out the 29C3 talk &lt;a href=&#34;http://events.ccc.de/congress/2012/Fahrplan/events/5275.en.html&#34; title=&#34;FactHacks: RSA factorization in the real world&#34;&gt;FactHacks: RSA factorization in the real world&lt;/a&gt; with the cryptographers Daniel J. Bernstein, Nadia Heninger, and Tanja Lange (&lt;a href=&#34;http://events.ccc.de/congress/2012/wiki/Documentation#Recordings&#34; title=&#34;29C3 Recordings&#34;&gt;watch recording&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;

&lt;p&gt;Migrating to a strong key for an Android app is, unfortunately, not so simple. If you are publishing a &lt;em&gt;new&lt;/em&gt; app to the app store, then simply generate a new strong signing key and you’re done. Congratulations! However, there exists no easy way to update your signing key for an existing application, because an installed application can only take updates from an APK signed with &lt;em&gt;the same&lt;/em&gt; key.&lt;/p&gt;

&lt;p&gt;Here we outline a basic method with which you can use to fake an update to your signing key. This is not as user friendly as we would like. Some of the hard facts of performing this process is that for most app stores including Google Play, you will lose ratings and reviews since the app will show up with a new package name, and the app store will treat it like an entirely new app. Also, the user will have to manually uninstall the original app once they finish the procedure. Here is a rough outline of the process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;generate the new signing key, &lt;em&gt;RSA 4096&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Update the first app, &lt;em&gt;App1&lt;/em&gt;, with a mechanism for exporting private data, using &lt;a href=&#34;https://github.com/guardianproject/TrustedIntents&#34; target=&#34;_blank&#34;&gt;TrustedIntents&lt;/a&gt; with a signature pin of the new key, &lt;em&gt;RSA 4096&lt;/em&gt;, which &lt;a href=&#34;https://guardianproject.info/2014/07/30/introducing-trustedintents-for-android/&#34; target=&#34;_blank&#34;&gt;Checkey will generate for you&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a new version of the app with a different package name, &lt;em&gt;App2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;sign &lt;em&gt;App2&lt;/em&gt; with new key, &lt;em&gt;RSA 4096&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add method to &lt;em&gt;App2&lt;/em&gt; for receiving user data from &lt;em&gt;App1&lt;/em&gt;, including a signature pin of the old signing key, &lt;em&gt;RSA 1024&lt;/em&gt;, for use with TrustedIntents&lt;/li&gt;
&lt;li&gt;Publish &lt;em&gt;App2&lt;/em&gt; to the app stores&lt;/li&gt;
&lt;li&gt;From &lt;em&gt;App1&lt;/em&gt;, prompt user to install &lt;em&gt;App2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;runs and imports data from &lt;em&gt;App1&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;App2&lt;/em&gt; prompts user to uninstall &lt;em&gt;App1&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;, there will be some easier tools for handling this. The F-Droid system is already used to multiple signing keys per app since F-Droid uses its own signing key for many of the apps it releases, and that F-Droid signing key is different from the signing key that the original developer used in their Google Play uploads. F-Droid will likely be able to support APKs with the same package name but with multiple signing keys.&lt;/p&gt;

&lt;h3 id=&#34;a-note-on-compatibility&#34;&gt;A Note on Compatibility&lt;/h3&gt;

&lt;p&gt;There is security vs compatibility trade off a few might be interested in. Pre-4.3, Android did not support any signature algorithms except SHA1. With Android &amp;gt;= 4.3, SHA256 support was fixed, and SHA384, SHA512, and ECDSA were added (&lt;a href=&#34;https://code.google.com/p/android/issues/detail?id=38321&#34;&gt;source&lt;/a&gt;). There are still android 2.3.3 (&lt;code&gt;android-10&lt;/code&gt;) devices being sold, so anyone interested in backwards compatibility will have to heed this.&lt;/p&gt;

&lt;p&gt;Also, the larger the keysize and hashsize used, the longer it takes to install and update the application. So extremely large values might be unsuitable for slower hardware. The following probably doesn’t buy you a tremendous amount of additional security but cranks the paranoia to 11. It does so at the cost of compatibility and performance.&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
Gen with:&amp;lt;br /&amp;gt;
  keytool -genkey -v -keystore test.keystore -alias testkey -keyalg RSA -keysize 4096 -sigalg SHA512withRSA -dname &amp;quot;cn=Test,ou=Test,c=CA&amp;quot; -validity 10000&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Sign with:&amp;lt;br /&amp;gt;
  jarsigner -verbose -sigalg SHA512withRSA -digestalg SHA512 -keystore test.keystore test.apk testkey&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We have some scripts that we use to generate keys in our &lt;a href=&#34;https://github.com/guardianproject/smartcard-apk-signing&#34; target=&#34;_blank&#34;&gt;smartcard-apk-signing&lt;/a&gt; repo. It is also possible to generate an Android signing key using openssl or other libraries. It is often wise to use different software than standard for doing things like generating keys. Since the Java &lt;code&gt;keytool&lt;/code&gt; approach that is the standard, recommended method for Android, that makes it a target for adversaries that are interested in breaking keys. If a key was generated using &lt;code&gt;openssl&lt;/code&gt; or GNU TLS instead, for example, then that key would not be affected if &lt;code&gt;keytool&lt;/code&gt; had &lt;a href=&#34;https://freedom-to-tinker.com/blog/kroll/software-transparency-debian-openssl-bug/&#34; target=&#34;_blank&#34;&gt;a bug like Debian’s&lt;/a&gt; &lt;a href=&#34;https://security-tracker.debian.org/tracker/CVE-2008-0166&#34; target=&#34;_blank&#34;&gt;CVE-2008-0166&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Reproducible Builds Summit</title>
      <link>https://guardianproject.github.io/info/2015/12/09/first-reproducible-builds-summit/</link>
      <pubDate>Wed, 09 Dec 2015 05:02:48 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/12/09/first-reproducible-builds-summit/</guid>
      <description>&lt;p&gt;I was just in Athens for the “&lt;a href=&#34;https://reproducible-builds.org/events/athens2015/&#34;&gt;Reproducible Builds Summit&lt;/a&gt;“, an &lt;a href=&#34;https://aspirationtech.org/&#34; target=&#34;_blank&#34;&gt;Aspiration&lt;/a&gt;-run meeting focused on the issues of getting all software builds to be reproducible. This means that anyone starting with the same source code can build the &lt;em&gt;exact&lt;/em&gt; same binary, bit-for-bit. At first glance, it sounds like this horrible, arcane detail, which it is really. But it provides tons on real benefits that can save lots of time. And in terms of programming, it can actually be quite fun, like doing a puzzle or sudoku, since there is a very clear point where you have “won”.&lt;/p&gt;

&lt;p&gt;Here are some examples of real benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;makes it easy to ensure no malware was inserted into software during the build process (e.g. the &lt;a href=&#34;https://en.wikipedia.org/wiki/XcodeGhost&#34; target=&#34;_blank&#34;&gt;XCodeGhost&lt;/a&gt; malware we just saw)&lt;/li&gt;
&lt;li&gt;provides a QA tool to make sure that changes in the source code of a project produce only the expected results&lt;/li&gt;
&lt;li&gt;allows F-Droid to use the developer’s APK signature while still verifying that apps build from 100% free software&lt;/li&gt;
&lt;li&gt;make it possible to optimize and profile build processes while guaranteeing the results are exactly the same&lt;/li&gt;
&lt;li&gt;for large projects, it can greatly speed up the build process (think rebuilding Gmail)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Represented there was: &lt;a href=&#34;http://https//www.debian.org&#34; target=&#34;_blank&#34;&gt;Debian&lt;/a&gt;, Google, &lt;a href=&#34;https://www.freebsd.org/&#34; target=&#34;_blank&#34;&gt;FreeBSD&lt;/a&gt;, &lt;a href=&#34;https://getfedora.org/&#34; target=&#34;_blank&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;,&lt;br /&gt;
&lt;a href=&#34;http://brew.sh/&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://www.macports.org/&#34; target=&#34;_blank&#34;&gt;MacPorts&lt;/a&gt;, &lt;a href=&#34;https://www.netbsd.org/&#34; target=&#34;_blank&#34;&gt;NetBSD&lt;/a&gt;, &lt;a href=&#34;https://www.archlinux.org/&#34; target=&#34;_blank&#34;&gt;Arch Linux&lt;/a&gt;, &lt;a href=&#34;https://www.coreboot.org/&#34; target=&#34;_blank&#34;&gt;Coreboot&lt;/a&gt;, &lt;a href=&#34;https://openwrt.org/&#34; target=&#34;_blank&#34;&gt;OpenWRT&lt;/a&gt;, and a bunch of other&lt;br /&gt;
projects like an automotive Linux distro called &lt;a href=&#34;https://wiki.baserock.org/&#34; target=&#34;_blank&#34;&gt;Baserock&lt;/a&gt;, the &lt;a href=&#34;https://www.gnu.org/software/guix/&#34; target=&#34;_blank&#34;&gt;Guix&lt;/a&gt; package manager, a Linux distro called &lt;a href=&#34;https://nixos.org/&#34; target=&#34;_blank&#34;&gt;NixOS&lt;/a&gt;, &lt;a href=&#34;https://www.haskell.org/&#34; target=&#34;_blank&#34;&gt;Haskell&lt;/a&gt; hackers, etc.&lt;/p&gt;

&lt;p&gt;The organizers are already planning a second meeting, probably in April in Western Europe, and are looking to get more projects involved. Lots of people were talking about how it would be great to get some Android ROM developers involved. So if you are a contributor to CyanogenMod, Copperhead, &lt;a href=&#34;https://omnirom.org/&#34; target=&#34;_blank&#34;&gt;OmniROM&lt;/a&gt;, &lt;a href=&#34;http://www.replicant.us/&#34; target=&#34;_blank&#34;&gt;Replicant&lt;/a&gt;, Blackphone, etc. and would be interested in attending, please let us know!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Orfox: Aspiring to bring Tor Browser to Android</title>
      <link>https://guardianproject.github.io/info/2015/06/30/orfox-aspiring-to-bring-tor-browser-to-android/</link>
      <pubDate>Tue, 30 Jun 2015 15:32:16 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/06/30/orfox-aspiring-to-bring-tor-browser-to-android/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update 24 September, 2015: Orfox BETA is now on Google Play: &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.orfox&#34;&gt;https://play.google.com/store/apps/details?id=info.guardianproject.orfox&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;In the summer of 2014 (&lt;a href=&#34;https://lists.mayfirst.org/pipermail/guardian-dev/2014-August/003717.html&#34;&gt;https://lists.mayfirst.org/pipermail/guardian-dev/2014-August/003717.html&lt;/a&gt;{.external}), we announced that the results of work by Amogh Pradeep (&lt;a href=&#34;https://github.com/amoghbl1&#34;&gt;https://github.com/amoghbl1&lt;/a&gt;{.external}), our 2014 Google Summer of Code student, has proven we could build Firefox for Android with some of the settings and configurations from the Tor Browser desktop software. We called this app Orfox, in homage to Orbot and our current Orweb browser. This was a good first step, but we were doing the build on Mozilla’s Firefox code repository, and then retrofitting pieces from Tor Browser’s code, which wasn’t the right way to do things, honestly.&lt;/p&gt;

&lt;p&gt;This summer (2015!), with fantastic continued effort by Amogh, we have switched to building the Orfox mobile app directly from the Tor Browser code repository, successfully working through any mobile OS incompatibilities in the security hardening patches added by the Tor Browser team. We also had the additional task of reviewing the Android application code in Firefox, that is not part of Tor Browser, in order to modify and patch it to work inline with the &lt;a href=&#34;https://www.torproject.org/projects/torbrowser/design/&#34;&gt;Tor Browser requirements and design document&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As of today, we have a stable alpha release ready for testing, and are rapidly moving towards a public beta in a few weeks. Our plan is to actively encourage users to move from Orweb to Orfox, and stop active development of Orweb, even removing to from the Google Play Store. If users really want to continue using a WebView-based solution and do not need all of the capabilities that Orfox/Tor Browser provides, they can use Lightning Browser (&lt;a href=&#34;https://github.com/anthonycr/Lightning-Browser&#34;&gt;https://github.com/anthonycr/Lightning-Browser&lt;/a&gt;{.external}), a lightweight, open-source app that offers automatic Orbot (SOCKS) proxying on start-up.&lt;/p&gt;

&lt;p&gt;Below you will find screenshots and our current set of &lt;a href=&#34;https://dev.guardianproject.info/projects/orfox-private-browser/wiki/Orfox_vs_Tor_Browser_FAQ&#34;&gt;Orfox Frequently Asked Questions&lt;/a&gt; from the &lt;a href=&#34;https://dev.guardianproject.info/projects/orfox-private-browser/wiki&#34;&gt;project wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can access the current Orfox release by installing the &lt;a href=&#34;https://f-droid.org/&#34;&gt;F-Droid app&lt;/a&gt; and subscribing to our F-Droid Alpha Channel at by clicking on the following link on your phone: &lt;a href=&#34;https://dev.guardianproject.info/debug/info.guardianproject.orfox/fdroid/repo&#34;&gt;https://dev.guardianproject.info/debug/info.guardianproject.orfox/fdroid/repo&lt;br /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div id=&#39;gallery-11&#39; class=&#39;gallery galleryid-12999 gallery-columns-3 gallery-size-medium&#39;&gt;
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133152.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133152-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; aria-describedby=&#34;gallery-11-13003&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133152-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133152-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133152.png 720w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
    
    &lt;dd class=&#39;wp-caption-text gallery-caption&#39; id=&#39;gallery-11-13003&#39;&gt;
      Recognized as Tor Browser
    &lt;/dd&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133103.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133103-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; aria-describedby=&#34;gallery-11-13005&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133103-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133103-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133103.png 720w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
    
    &lt;dd class=&#39;wp-caption-text gallery-caption&#39; id=&#39;gallery-11-13005&#39;&gt;
      A match made by onions!
    &lt;/dd&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133624.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133624-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; aria-describedby=&#34;gallery-11-13000&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133624-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133624-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133624.png 720w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
    
    &lt;dd class=&#39;wp-caption-text gallery-caption&#39; id=&#39;gallery-11-13000&#39;&gt;
      Bookmark support!
    &lt;/dd&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133414.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133414-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; aria-describedby=&#34;gallery-11-13001&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133414-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133414-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133414.png 720w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
    
    &lt;dd class=&#39;wp-caption-text gallery-caption&#39; id=&#39;gallery-11-13001&#39;&gt;
      Easy access to onion sites!
    &lt;/dd&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133223.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133223-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; aria-describedby=&#34;gallery-11-13002&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133223-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133223-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133223.png 720w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
    
    &lt;dd class=&#39;wp-caption-text gallery-caption&#39; id=&#39;gallery-11-13002&#39;&gt;
      Tabs!
    &lt;/dd&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133130.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133130-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; aria-describedby=&#34;gallery-11-13004&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133130-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133130-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2015/06/device-2015-06-30-133130.png 720w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
    
    &lt;dd class=&#39;wp-caption-text gallery-caption&#39; id=&#39;gallery-11-13004&#39;&gt;
      Tor-relevant default sites
    &lt;/dd&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Where can I find all the relevant Orfox project pieces?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Orfox project tracker roadmap is here: &lt;a href=&#34;https://dev.guardianproject.info/projects/orfox-private-browser/roadmap&#34;&gt;https://dev.guardianproject.info/projects/orfox-private-browser/roadmap&lt;/a&gt;{.external}&lt;/li&gt;
&lt;li&gt;The Orfox branch of the Tor Browser repository is here: &lt;a href=&#34;https://github.com/guardianproject/tor-browser&#34;&gt;https://github.com/guardianproject/tor-browser&lt;/a&gt;{.external}&lt;/li&gt;
&lt;li&gt;The Orfox build project is here: &lt;a href=&#34;https://github.com/guardianproject/orfoxfennec&#34;&gt;https://github.com/guardianproject/orfoxfennec&lt;/a&gt;{.external}&lt;/li&gt;
&lt;li&gt;The primary Tor Browser repository is here: &lt;a href=&#34;https://gitweb.torproject.org/tor-browser.git/&#34;&gt;https://gitweb.torproject.org/tor-browser.git/&lt;/a&gt;{.external}&lt;/li&gt;
&lt;li&gt;Automated debug builds of Orfox alpha are available via F-Droid here (install F-Droid on your phone, then copy/paste or open the link to add the repo): &lt;a href=&#34;https://dev.guardianproject.info/debug/info.guardianproject.orfox/fdroid/repo&#34;&gt;https://dev.guardianproject.info/debug/info.guardianproject.orfox/fdroid/repo&lt;/a&gt;{.external}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How is Orfox different than Tor Browser for desktop?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Orfox is built from the same source code as Tor Browser (which is built upon Firefox), but with a few minor modifications to the privacy enhancing features to make them compatible with Firefox for Android and the Android operating system. In as many ways as possible, we will adhere to the design goals of Tor Browser (&lt;a href=&#34;https://www.torproject.org/projects/torbrowser/design/&#34;&gt;https://www.torproject.org/projects/torbrowser/design/&lt;/a&gt;{.external}), by supporting as much of their actual code as possible, and extending their work into the additional AF-Droid appndroid components of Firefox for Android.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Orfox code repository is at &lt;a href=&#34;https://github.com/guardianproject/tor-browser&#34;&gt;https://github.com/guardianproject/tor-browser&lt;/a&gt;{.external} and the Tor Browser repository is here:&lt;a href=&#34;https://gitweb.torproject.org/tor-browser.git/&#34;&gt;https://gitweb.torproject.org/tor-browser.git/&lt;/a&gt;{.external}. The Orfox repository is a fork of the Tor Browser repository with the necessary modification and Android-specific code as patches on top of the Tor Browser work. We will keep our repository in sync with updates and release of Tor Browser.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox is built from the Tor Browser repo based on ESR38 (&lt;a href=&#34;https://dev.guardianproject.info/issues/5146&#34;&gt;https://dev.guardianproject.info/issues/5146&lt;/a&gt;{.external}&lt;a href=&#34;https://dev.guardianproject.info/news/221&#34;&gt;https://dev.guardianproject.info/news/221&lt;/a&gt;{.external}) and has only two modified patches that were not relevant or necessary for Android&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox does not currently include the mobile versions of HTTPS Everywhere, No Script and the Tor Browser Button, but these we will be added shortly, now that we have discovered how to properly support automatic installation of extensions on Android (&lt;a href=&#34;https://dev.guardianproject.info/issues/5360&#34;&gt;https://dev.guardianproject.info/issues/5360&lt;/a&gt;{.external})&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox includes a “Request Mobile Site” option that allows you to change the user-agent from the standard Tor Browser agent to a modified Android specific one: “Mozilla/5.0 (Android; Mobile; rv:31.0) Gecko/20100101 Firefox/31.0”. (&lt;a href=&#34;https://dev.guardianproject.info/issues/5404&#34;&gt;https://dev.guardianproject.info/issues/5404&lt;/a&gt;{.external}). This is useful for being able to see the mobile version of a website, but does reduce the amount your browser blends in with other browsers.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox currently allows for users to bookmark sites, and may have additional data written to disk beyond what the core gecko browser component does. We are still auditing all disk write code, and determining how to appropriately disable or harden it. (&lt;a href=&#34;https://dev.guardianproject.info/issues/5437&#34;&gt;https://dev.guardianproject.info/issues/5437&lt;/a&gt;{.external})&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox cannot yet be built deterministically, but based on work with the FDroid project, we are aiming for this to be possible in the next year (&lt;a href=&#34;https://blog.torproject.org/blog/deterministic-builds-part-one-cyberwar-and-global-compromise&#34;&gt;https://blog.torproject.org/blog/deterministic-builds-part-one-cyberwar-and-global-compromise&lt;/a&gt;{.external} &lt;a href=&#34;https://f-droid.org/wiki/page/Deterministic,_Reproducible_Builds&#34;&gt;https://f-droid.org/wiki/page/Deterministic,_Reproducible_Builds&lt;/a&gt;{.external})&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How is Orfox different than Firefox for Android?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Beyond the core Tor Browser components, Orfox also must ensure all Android-specific code is properly routed through the Tor proxy, and otherwise hardened to protect against data and privacy leaks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Orfox adds patches at the Android Java code layer to enable proxying of all Java network HTTP communications through the local Orbot HTTP proxy (HTTP localhost:8118 for now, but moving to SOCKS). (&lt;a href=&#34;https://dev.guardianproject.info/issues/5235&#34;&gt;https://dev.guardianproject.info/issues/5235&lt;/a&gt;{.external} &lt;a href=&#34;https://dev.guardianproject.info/issues/5317&#34;&gt;https://dev.guardianproject.info/issues/5317&lt;/a&gt;{.external})&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox removes the Android permissions for Contacts, Camera, Microphone, Location and NFC (&lt;a href=&#34;https://dev.guardianproject.info/issues/3822&#34;&gt;https://dev.guardianproject.info/issues/3822&lt;/a&gt;{.external}) since the capability of using these features are not in line with the spirit of Tor Browser&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orfox removes features like WebRTC and support for interaction with Chromecasts or Roku devices, since this type of communication is not compatibility with proxying communication through a TCP-based network like Tor (&lt;a href=&#34;https://dev.guardianproject.info/issues/5358&#34;&gt;https://dev.guardianproject.info/issues/5358&lt;/a&gt;{.external} &lt;a href=&#34;https://dev.guardianproject.info/issues/5357&#34;&gt;https://dev.guardianproject.info/issues/5357&lt;/a&gt;{.external})&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How is Orfox different than Orweb?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Orweb is our current default browser for Orbot/Tor mobile users (&lt;a href=&#34;https://guardianproject.info/apps/orweb&#34;&gt;https://guardianproject.info/apps/orweb&lt;/a&gt;{.external}) that has been downloaded over 2 million times. It is VERY VERY SIMPLE, as it only has one tab, no bookmark capability, and an extremely minimal user experience.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orweb is built upon the bundled WebView (Webkit) browser component inside of the Android operating system. This has proven to be problematic because we cannot control the version of that component, and cannot upgrade it directly when bugs are found. In addition, Google has made it very difficult to effectively control the network proxy settings of all aspects of this component, making it difficult to guarantee that traffic will not leak on all devices and OS versions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orweb also only provides a very limited amount of capability of Tor Browser, primarily related to reducing browser fingerprinting, minimizing disk writes, and cookie and history management. It trys to mimic some of the settings of Tor Browser, but doesn’t actually use any of the actual code written for Tor Browser security hardening.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Orweb does have an advantage which is that it less than 2MB while Orfox is in the 25-30MB range. This is primarily because Orweb relies on many components built into Android, so it does not need to bundle them. Orfox contains the full stack of code necessary for a complete browser, and thus is more secure and dependable, but also larger. The Mozilla Mobile team is working on reducing the size of their binaries, and the Orfox team is focused on this, as well, since we are disabling some of the components that have contributed the browser bloat.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Recent news on Orweb flaws</title>
      <link>https://guardianproject.github.io/info/2014/06/30/recent-news-on-orweb-flaws/</link>
      <pubDate>Mon, 30 Jun 2014 12:43:51 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/06/30/recent-news-on-orweb-flaws/</guid>
      <description>&lt;p&gt;&lt;strong&gt;August 2014: New browser development news here, including Orfox, our Firefox-based browser solution: &lt;a href=&#34;https://lists.mayfirst.org/pipermail/guardian-dev/2014-August/003717.html&#34;&gt;https://lists.mayfirst.org/pipermail/guardian-dev/2014-August/003717.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;On Saturday, a new post was relased by Xordern entitled &lt;a href=&#34;http://xordern.net/ip-leakage-of-mobile-tor-browsers.html&#34;&gt;IP Leakage of Mobile Tor Browsers&lt;/a&gt;. As the title says, the post documents flaws in mobile browser apps, such as &lt;a href=&#34;https://guardianproject.github.io/info/apps/orweb&#34;&gt;Orweb&lt;/a&gt; and &lt;a href=&#34;https://mike.tig.as/onionbrowser/&#34;&gt;Onion Browser&lt;/a&gt;, both which automatically route communication traffic over Tor. While we appreciate the care the author has taken, he does make the mistake of using the term “security” to lump together the need for total anonymity up with the needs of anti-censorship, anti-surveillance, circumvention and local device privacy. We do understand the seriousness of this bug, but at the same time, it is not an issue encountered regularly in the wild.&lt;/p&gt;

&lt;p&gt;Here are thoughts on the three specific issues covered:&lt;/p&gt;

&lt;p&gt;1) HTML5 Multimedia: This is a &lt;a href=&#34;https://guardianproject.info/2013/08/21/orweb-security-advisory-possible-ip-leakage-with-html5-videoaudio/&#34;&gt;known issue&lt;/a&gt; which is not present on 100% of Android devices, but is definitely something to be concerned about, if you access sites with HTML5 media player content on them. To us, it is a bug in Android, and not in Orweb, since all of the appropriate APIs are called when the browser is configured to proxy. However, it is a problem, and our solution remains to either use transparent proxying feature of Orbot, or to use the Firefix Privacy configuration we provide here: &lt;a href=&#34;https://guardianproject.info/apps/firefoxprivacy&#34;&gt;https://guardianproject.info/apps/firefoxprivacy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Downloads leak: This is a new issue and one we are trying to reproduce on our end. If our proxied download indeed is not working, we will issue a fix shortly. Again, using Firefox configured in the manner we prescribe, the downloads would be proxied properly.&lt;/p&gt;

&lt;p&gt;3) Unique Headers: The inclusion of a unique HTTP header issue in this list is confusing, because it has nothing to do with IP leakage. We have never claimed that a mobile browser can be 100% anonymous, and defending against full fingerprinting of browsers based on headers is something beyond what we are attempting to do at this point.&lt;/p&gt;

&lt;p&gt;At this point, we still recommend &lt;a href=&#34;https://guardianproject.github.io/info/apps/orweb&#34;&gt;Orweb&lt;/a&gt; for most people who want a very simple solution for a browser that is proxied through Tor. This will defeat mass traffic surveillance, network censorship, filtering by your mobile operator, work or school, and more. Orweb also keeps little data cached on the local system, and so protects against physical inspection and analysis of your device, to retrieve your browser history. HOWEVER if you do seem to visit sites that have HTML5 media players in the them, then we recommend you do not use Orweb, and again, that you use &lt;a href=&#34;https://guardianproject.info/apps/firefoxprivacy&#34;&gt;Firefox with our Privacy-Enhanced Configuration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are truly worried about IP leakage, then you MUST root your phone, and use Orbot’s Transparent Proxying feature. This provides the best defense against leaking of your real IP. Even further, if you require even more assurance than that, you should follow Mike Perry’s &lt;a href=&#34;https://blog.torproject.org/blog/mission-impossible-hardening-android-security-and-privacy&#34;&gt;Android Hardening Guide&lt;/a&gt;, which uses AFWall firewall in combination with Orbot, to block traffic to apps, and even stops Google Play from updating apps without your permission.&lt;/p&gt;

&lt;p&gt;Finally, the best news is that we are making great progress in a fully privacy-by-default version of Firefox, under the project named “Orfox”. This is being done in partnership with the Tor Project, as a &lt;a href=&#34;https://www.google-melange.com/gsoc/proposal/public/google/gsoc2014/amoghbl1/5629499534213120&#34;&gt;Google Summer of Code&lt;/a&gt; effort, along with the Orweb team. We aim to use as much of the same code that Tor Browser does to harden Firefox in our browser, and are getting close to an alpha release. If you are interested in a testing the first prototype build, which address the HTML5 and Download leak issues, you can find it here: &lt;a href=&#34;https://guardianproject.info/releases/FennecForTor_GSoC_prototype.apk&#34;&gt;https://guardianproject.info/releases/FennecForTor_GSoC_prototype.apk&lt;/a&gt; and track the project here: &lt;a href=&#34;https://github.com/guardianproject/orfox&#34;&gt;https://github.com/guardianproject/orfox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improving trust and flexibility in interactions between Android apps</title>
      <link>https://guardianproject.github.io/info/2014/01/21/improving-trust-and-flexibility-in-interactions-between-android-apps/</link>
      <pubDate>Tue, 21 Jan 2014 13:51:57 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/01/21/improving-trust-and-flexibility-in-interactions-between-android-apps/</guid>
      <description>&lt;div id=&#34;attachment_12240&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/01/Android-Intents.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12240&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/01/Android-Intents-300x61.png&#34; alt=&#34;Activity1 sending an Intent that either Activity2 or Activity3 can handle.&#34; width=&#34;300&#34; height=&#34;61&#34; class=&#34;size-medium wp-image-12240&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/01/Android-Intents-300x61.png 300w, https://guardianproject.info/wp-content/uploads/2014/01/Android-Intents.png 600w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12240&#34; class=&#34;wp-caption-text&#34;&gt;
    &lt;code&gt;Activity1&lt;/code&gt; sending an &lt;code&gt;Intent&lt;/code&gt; that either &lt;code&gt;Activity2&lt;/code&gt; or &lt;code&gt;Activity3&lt;/code&gt; can handle.
  &lt;/p&gt;
&lt;/div&gt;Android provides a flexible system of messaging between apps in the form of 

`&lt;a href=&#34;https://developer.android.com/guide/components/intents-filters.html&#34; target=&#34;_blank&#34;&gt;Intent&lt;/a&gt;`s. It also provides the framework for reusing large chunks of apps based on the `&lt;a href=&#34;https://developer.android.com/reference/android/app/Activity.html&#34; target=&#34;_blank&#34;&gt;Activity&lt;/a&gt;` class. `Intent`s are the messages that make the requests, and `Activity`s are the basic chunk of functionality in an app, including its interface. This combination allows apps to reuse large chunks of functionality while keeping the user experience seamless and fluent. For example, an app can send an Intent to request a camera `Activity` to prompt the user to take a picture, and that process can feel integrated into the original app that made the request. Another common use of this paradigm is choosing account information from the contacts database (aka the _People_ app). When a user is composing an new email, they will want to select who the message gets sent to. Android provides both the contacts database, and a nice overlay screen for finding and selecting the person to send to. This combination is an `Activity` provided by Android. The message that the email program sends in order to trigger that `Activity` is an `Intent`.

As usual, one of the downsides of flexibility is increased security risk. This is compounded in the Android system by rules that will automatically export an Activity to receive Intents from any app, &lt;a href=&#34;https://www.eecs.berkeley.edu/~emc/papers/spsm4027-kantola.pdf&#34; title=&#34;Reducing Attack Surfaces for Intra-Application Communication in Android&#34; target=&#34;_blank&#34;&gt;when certain conditions are met&lt;/a&gt;. If an `Activity` is exported for any app to call, &lt;a href=&#34;https://www.eecs.berkeley.edu/~emc/papers/mobi168-chin.pdf&#34; title=&#34;Analyzing Inter-Application Communication in Android&#34; target=&#34;_blank&#34;&gt;it is possible for apps to send malicious &lt;code&gt;Intent&lt;/code&gt;s&lt;/a&gt; to that `Activity`. Many `Intents` are meant to be public and others are exported as a side effect. Either way, at the very least, it is necessary to &lt;a href=&#34;http://blog.palominolabs.com/2013/05/13/android-security/&#34; title=&#34;Intent Spoofing on Android&#34; target=&#34;_blank&#34;&gt;sanitize the input&lt;/a&gt; that an `Activity` receives. On the other side of the issue, if an app is trusting another app to provide a sensitive service for it, then malware can pose as the trusted app and receive sensitive data from the trusting app. &lt;a href=&#34;http://dwaterson.com/2013/06/24/data-harvesting-by-malicious-android-apps/&#34; target=&#34;_blank&#34;&gt;An app does not need to request any permissions in order to set itself up as a receiver of &lt;code&gt;Intent&lt;/code&gt;s&lt;/a&gt;.

&lt;div id=&#34;attachment_12117&#34; style=&#34;width: 361px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://www.eecs.berkeley.edu/~emc/papers/spsm4027-kantola.pdf&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12117&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/01/activity-service-hijacking.png&#34; alt=&#34;Activity/Service hijacking: watch out for the little devil in the system&#34; width=&#34;351&#34; height=&#34;153&#34; class=&#34;size-full wp-image-12117&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/01/activity-service-hijacking.png 351w, https://guardianproject.info/wp-content/uploads/2014/01/activity-service-hijacking-300x130.png 300w&#34; sizes=&#34;(max-width: 351px) 100vw, 351px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12117&#34; class=&#34;wp-caption-text&#34;&gt;
    Activity/Service hijacking: watch out for the little devil in the system
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Android, of course, does provide some added protections for cases like this. For very sensitive situations, an &lt;code&gt;Activity&lt;/code&gt; can be setup to only receive &lt;code&gt;Intent&lt;/code&gt;s from apps that meet certain criteria. &lt;a href=&#34;https://www.isecpartners.com/media/11991/isec_securing_android_apps.pdf&#34; target=&#34;_blank&#34;&gt;Android permissions can restrict other apps&lt;/a&gt; from sending &lt;code&gt;Intent&lt;/code&gt;s to any given exported &lt;code&gt;Activity&lt;/code&gt;. If a separate app wants to send an &lt;code&gt;Intent&lt;/code&gt; to an &lt;code&gt;Activity&lt;/code&gt; that has be set with a permission, then that app must include that permission in its manifest, thereby publishing that it is using that permission. This provides a good way publish an API for getting permission, but leaving it relatively open for other apps to use. Other kinds of controls can be based on two aspects of an app that the Android system enforces to remain the same: &lt;a href=&#34;http://android-developers.blogspot.com/2011/06/things-that-cannot-change.html&#34; target=&#34;_blank&#34;&gt;the package name and the signing key&lt;/a&gt;. If either of those change, then Android considers it a different app altogether. The strictest control is handled by the “protection level”, which can be set to only allow either the system or apps signed by the same key to send &lt;code&gt;Intent&lt;/code&gt;s to a given &lt;code&gt;Activity&lt;/code&gt;. These security tools are useful in many situations, but leave lots of privacy-oriented use cases uncovered.&lt;/p&gt;

&lt;p&gt;There are some situations that need more flexibility without opening things up entirely. The first simple example is provided by our app &lt;a href=&#34;https://guardianproject.info/apps/pixelknot/&#34; target=&#34;_blank&#34;&gt;Pixelknot&lt;/a&gt;: it needs to send pictures through services that will not mess up the hidden data in the images. It has a trusted list of apps it will send to, based on apps that have proven to pass the images through unchanged. When the user goes to share the image from Pixelknot to an cloud storage app, the user will be prompted to choose from a list of installed apps that match the whitelist in Pixelknot. We could have implemented a permission and asked lots of app providers to implement it, but it seems a mammoth task to get lots of large companies like Dropbox and Google to include our specific permission.&lt;/p&gt;

&lt;p&gt;There are other situations that require even tighter restrictions that are available. The first example here comes from our OpenPGP app for Android. &lt;a href=&#34;https://guardianproject.info/code/gnupg/&#34; target=&#34;_blank&#34;&gt;Gnu Privacy Guard (GPG)&lt;/a&gt; provides cryptographic services to any app that requests it. When the app sends data to GPG to be encrypted, it needs to be sure that the data is actually going to GPG and not to some malware. For very sensitive situations, the Android-provided package name and signing key might not be enough to ensure that the correct app is receiving the unencrypted data. Many Android devices are still unpatched to protect against &lt;a href=&#34;https://threatpost.com/second-android-master-key-attack-surfaces/101297&#34; target=&#34;_blank&#34;&gt;master key bugs&lt;/a&gt;, and for people using Android in China, Iran, etc. where the Play Store is not allowed, they don’t get the exploit scanning provided by Google. Telecoms around the world have proved to be &lt;a href=&#34;https://arstechnica.com/gadgets/2012/12/the-checkered-slow-history-of-android-handset-updates/&#34; target=&#34;_blank&#34;&gt;bad at updating the software&lt;/a&gt; for the devices that they sell, &lt;a href=&#34;https://arstechnica.com/security/2013/04/wireless-carriers-deceptive-and-unfair&#34; target=&#34;_blank&#34;&gt;leaving many security problems unfixed&lt;/a&gt;. Alternative Android app stores are a very popular way to get apps. So far, the ones that we have seen provide minimal security and no malware scanning. &lt;a href=&#34;http://www.telecoms.com/57581/china-crucial-to-android/&#34; target=&#34;_blank&#34;&gt;In China&lt;/a&gt;, &lt;a href=&#34;http://www.insidemobileapps.com/2011/09/02/china-chinese-smartphone-ios-android-market/&#34; target=&#34;_blank&#34;&gt;Android is very popular&lt;/a&gt;, so this represents a lot of Android users.&lt;/p&gt;

&lt;p&gt;Another potential use case revolves around a media reporting app that relies on other apps to provide images and video as part of regular reports. This could be something like a citizen journalist editing app or a human rights reporting app. The Guardian Project develops a handful of apps designed to create media in these situations: &lt;a href=&#34;https://guardianproject.info/apps/obscuracam/&#34; target=&#34;_blank&#34;&gt;ObscuraCam&lt;/a&gt;, InformaCam, and an new secure camera app in the works that we are contributing to. We want InformaCam to work as a provider of verifiable media to any app. It generates a package of data that includes a cryptographic signature so that its authenticity can be verified. That means that the apps that transport the InformaCam data do not need to be trusted in order to guarantee the integrity of the uploaded InformaCam data. Therefore it does not make sense in this case for InformaCam to grant itself permissions to access other apps’ secured &lt;code&gt;Activity&lt;/code&gt;s. It would add to the maintenance load of the app without furthering the goals of the InformaCam project. Luckily there are other ways to address that need.&lt;/p&gt;

&lt;p&gt;The inverse of this situation is not true. The reporting app that gathers media and sends it to trusted destinations has higher requirements for validating the data it receives via &lt;code&gt;Intent&lt;/code&gt;s. If verifiable media is required, then this reporter app will want to only accept incoming media from InformaCam. Well-known human rights activists are often the target of custom malware designed to get information from their phones. For this example, a malware version of InformaCam could be designed to track all of the media that the user is sending to the human rights reporting app. To prevent this, the reporter app will want to only accept data from a list of trusted apps. When the user tries to feed media from the malware app to the reporting app, it would be rejected, alerting the user that something is amiss. If an reporting app wants to receive data only from InformaCam, it needs to have some checks setup to enforce that. The easiest way for the reporting app to implement those checks would be to add an Android permission to the receiving &lt;code&gt;Activity&lt;/code&gt;. But that requires the sending app, in the example above that is InformaCam, to implement the reporting app’s permission. Using permissions works for tailored interactions. InformaCam aims to bring tighter secure to all relevant interactions, so we need a different approach. While InformaCam could include some specific permissions, the aim is to have a single method that supports all the desired interactions. Having a single method here means less code to audit, less complexity, and fewer places for security bugs.&lt;/p&gt;

&lt;p&gt;We have started auditing the security of communication via &lt;code&gt;Intent&lt;/code&gt;s, while also working on various ideas to address the issues laid out so far. This will include laying out best-practices and defining gaps in the Android architecture. We plan on building the techniques that we find useful into reusable libraries to make it easy for others to also have more flexible and trusted interactions. When are the standard checks not enough? If the user has a malware version of an app that exploits master key bugs, then the signature on the app will be valid. If a check is based only on a package name, malware could use any given package name. Android enforces that only one app can be installed with a given package name, but if there are multiple apps with the same package name, Android will not prevent you from installing the malware version.&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;attachment_12120&#34; style=&#34;width: 160px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;http://www.pregnancyandbaby.com/the-hatch-blog/articles/935057/classic-vanilla-tofu-ice-pops-for-babies-from-ice-pop-joy&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12120&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/01/IcePopJoy-ClassicVanillaTofu-300x300.jpg&#34; alt=&#34;TOFU/POP: delicious vegan treat and clever software interaction!&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;size-medium wp-image-12120&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/01/IcePopJoy-ClassicVanillaTofu-300x300.jpg 300w, https://guardianproject.info/wp-content/uploads/2014/01/IcePopJoy-ClassicVanillaTofu-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2014/01/IcePopJoy-ClassicVanillaTofu.jpg 450w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p id=&#34;caption-attachment-12120&#34; class=&#34;wp-caption-text&#34;&gt;
    TOFU/POP: delicious vegan treat and clever software interaction!
  &lt;/p&gt;
&lt;/div&gt;The strictest possible checks can be based on the hash of the whole APK, while tracking the signing key of a given APK is also often useful. These two data points are the most reliable ways to verify a given app. They can be tracked in two different ways: pinning and trust-on-first-use (TOFU/POP). Pinning means that a verified hash or signing key for the apps that need to be trusted is included in the app that must trust them. Then the trusting app can verify what it is sending or receiving&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Intent&lt;/code&gt;s from, the installed app is then compared to the pre-stored pinned value. This kind of pinning allows for checks like the &lt;code&gt;Signature&lt;/code&gt; permission level but based on a key that the app developer can select and include in the app. The built-in &lt;code&gt;Signature&lt;/code&gt; permissions are fixed on the signing key of the currently running app.&lt;/p&gt;

&lt;p&gt;TOFU/POP means Trust-On-First-Use/Persistence Of Pseudonym. In this model, popularized by SSH, the user marks a given hash or signing key as trusted the first time they use the app, without extended checks about that apps validity. That mark then describes a “pseudonym” for that app, since there is no verification process, and that pseudonym is remembered for comparing in future interactions. One big advantage of TOFU/POP is that the user has control over which apps to trust, and that trust relationship is created at the moment the user takes an action to start using the app that needs to be trusted. That makes it much easier to manage than using Android permissions, which must be managed by the app’s developer. A disadvantage is that the initial trust is basically a guess, and that leaves open a method to get malware in there. The problem of installing good software, and avoiding malware, is outside of the scope of securing inter-app communication. Secure app installation is best handled by the process that is actually installing the software, like the Google Play Store or &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt; does.&lt;/p&gt;

&lt;p&gt;To build on the InformaCam example, in order to setup a trusted data flow between InformaCam and the reporting app, custom checks must be implemented on both the sender and the receiver. For the sender, InformaCam, it should be able to send to any app, but it should then remember the app that it is configured to send to and make sure its really only sending to that app. It would then use TOFU/POP with the hash as the data point. For the receiver, the reporting app, it should only accept incoming data from apps that it trusts. The receiver then includes a pin for the signing key, or if the app is being deployed to unupdated devices the pin can be based on the hash to work around master key exploits. From there on out, the receiving app checks against the stored app hashes or signing keys. For less security-sensitive situations, the received can rely on TOFU/POP on the first time that an app sends media.&lt;/p&gt;

&lt;p&gt;There are various versions of these ideas floating around in various apps, and we have some in the works. We are working now to hammer out which of these ideas are the most useful, then we will be focusing our development efforts there. We would love to hear about any related effort or libraries that are out there. And we are also interested to hear about entirely different approaches than what has been outlined here.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Four Ways InformaCam Powers Mobile Media Verification</title>
      <link>https://guardianproject.github.io/info/2014/01/06/four-ways-informacam-powers-mobile-media-verification/</link>
      <pubDate>Mon, 06 Jan 2014 15:14:16 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/01/06/four-ways-informacam-powers-mobile-media-verification/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: A big discussion topic of 2013 was about how hard cryptography and security is for average people, journalists and others. With that in mind, we’d like to sub-title this post “Making Mobile Crypto Easy for Eyewitnesses”, as the InformaCam software and process described below includes the full gamut of security and cryptography tools all behind a streamlined, and even attractive application user experience we are quite proud of…. &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One of the primary goals of the &lt;a href=&#34;https://guardianproject.info/informa&#34;&gt;InformaCam&lt;/a&gt; project (now in &lt;a href=&#34;https://guardianproject.info/informa&#34;&gt;public beta!&lt;/a&gt;) is to create an environment where, when it comes to photos and video captured on smartphones, people and organizations can trust what they see. Faked photos and videos, whether intended to be humorous or malicious, are all too common online, especially in times of crisis. Thus, the software that been developed works to ensure the full, complete original photo or video captured of an event, can safely reach the people who need to see it, without it first being filtered, modified, cropped, trimmed or otherwise manipulated.&lt;/p&gt;

&lt;p&gt;There are four ways this is achieved:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At point of capture, secure storage and analysis of the media file itself to begin a chain of custody, create a means of verifying media pixel values directly, and defend against tampering by malicious apps.&lt;/li&gt;
&lt;li&gt;Gather corroborating metadata points using the device’s built-in sensors to establish an environmental context.&lt;/li&gt;
&lt;li&gt;Use a secure method of transmission to a secure repository to continue chain of custody, and to defend against network surveillance, intrusion and filtering.&lt;/li&gt;
&lt;li&gt;Provide a means, using open tools, to verify media was not tampered with and to view and analyze corroborating metadata.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s dig deeper into each of these links of the verification chain.&lt;/p&gt;

&lt;p&gt;&lt;strong style=&#34;line-height: 1.5em;&#34;&gt;Secure Storage and Analysis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When InformaCam is activated, it begins to actively monitor the device for any new photos or videos captured by the built-in camera software. InformaCam does not support importing already captured photos or videos. It must actively detect a new photo or video is captured by the active camera software on the device. As soon as it detects a new capture, it begins the following ingest process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import the media file into an encrypted storage system, on the device, but only accessible by the InformaCam app. This ensures the file is not modified by any other application on the device.&lt;/li&gt;
&lt;li&gt;Generate and securely store a cryptographic hash value, or checksum, of the pixels of the media file, either the single photo or collectively for all the frames of the video. Any change to the pixels of the media files (“photoshopping”, removal of frames, editing, or other modifications) would result in a change to the hash value.&lt;/li&gt;
&lt;li&gt;Delete the source photo or video from its original location on the device’s shared storage, to keep it hidden from plain view in high-risk situations. Since it has been imported to encrypted storage, this version is no longer needed, and not trustworthy, ultimately.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With this three step process we have, as near as possible to the time and place of capture, ensured we have the media file in a secure storage location, and have generated a unique hash value to verify the file against later.&lt;/p&gt;

&lt;p&gt;The hash value, which is just a short series of hexadecimal characters, can also be immediately shared to a third-party using email, text messaging, Twitter or other public notary system. The sooner it can be in the “public record” the better, to establish that the media file existed in this exact state at this time. This concept of a notary is important, and one we seek to develop more, to ensure the notary is also a trusted, tamper-proof service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Corroborating Sensor Metadata&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In addition to the media file itself and the cryptographic hash, an enormous amount of additional metadata is also captured during the window of time that InformaCam is activated and monitoring for the digital media creation events. We don’t discuss all of them here, but in short, InformaCam uses &lt;a href=&#34;http://developer.android.com/guide/topics/sensors/sensors_overview.html&#34;&gt;all available network, radio, motion and environmental sensors built into modern smartphones&lt;/a&gt; to gather corroborating data points that can be used to establish credibility. This bundle of metadata is known as J3M, or &lt;a href=&#34;https://dev.guardianproject.info/projects/informacam/wiki/JSON_Mobile_Media_Metadata_(J3M)&#34;&gt;JSON Evidentiary Mobile Media Metadata&lt;/a&gt;, with JSON (Javascript Object Notation) being the technical format it is stored in. When the media file is exported for verification, this data is bundled into the media file itself, and cryptographically signed and encrypted to ensure it cannot be modified or otherwise used by unauthorized third-parties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secure Repository Submission&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;line-height: 1.5em;&#34;&gt;When the owner of the device running InformaCam with the media file on it decides to share it with an organization for verification and use, they can send it using InformaCam’s built-in Secure Share mechanism. This enables the media file and embedded metadata to be d&lt;/span&gt;irectly sent to an &lt;a href=&#34;https://github.com/guardianproject/InformaRepo&#34;&gt;InformaCam Repository&lt;/a&gt; over a secure connection. While the connection uses the public internet, it is sent directly between the device and the repository inside of a secure, tamper proof tunnel powered by software known as &lt;a href=&#34;https://torproject.org&#34;&gt;Tor&lt;/a&gt;. This connection is configured using an &lt;a href=&#34;https://dev.guardianproject.info/projects/informacam/wiki/InformaCam_Trusted_Destination_(ICTD)&#34;&gt;InformaCam Trusted Definition configuration file&lt;/a&gt; which contains the necessary network addresses and credentials.&lt;/p&gt;

&lt;p&gt;The secure repository is expected to be run on a Linux server that is properly secured with strong access controls, firewalls, encrypted disk storage, and all other available mechanisms well known for securing desktop or server systems. It should not be placed on the public Internet, but only exposed through the Tor network connection. It should be hosted in a location that can be physically secured by the organization, as much as possible, and that could not be accessed without the organization being aware. This means that third party data centers should not be used, as access to these machines by law enforcement or malicious hackers can be accomplished without notice to the customers.&lt;/p&gt;

&lt;p&gt;However, as long as the media hash value itself is maintained in a secure manner, possibly even printed out and stored in an offline physically secure system, the state of the media file itself can be easily verified using common tools.&lt;/p&gt;

&lt;p&gt;&lt;strong style=&#34;line-height: 1.5em;&#34;&gt;Open Verification and Analysis Tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once the media and metadata have been received in the secure repository, the organization managing it can used the &lt;a href=&#34;https://guardianproject.info/informa&#34;&gt;InformaCam Analyzer and Dashboard&lt;/a&gt; software to process and verify the media file. All of the steps below are automatically done by the software, but can also be manually done by a competent, trained technician. These are the steps taken:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Export the J3M corroborating metadata from the media file. It will be encrypted to the organization’s public cryptographic key, so it will first need to be decrypted, and also the signature of the data verified against the sender’s public key, which the organization previously obtained. This step is accomplished using the free and open-source &lt;a href=&#34;http://gnupg.org&#34;&gt;GnuPG software tools&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Run the media verification process on the photo or video file. This is accomplished using a tool in the InformaCam Analyzer software, which also includes the free and open-source &lt;a href=&#34;http://www.ffmpeg.org/&#34;&gt;FFMPEG media engine&lt;/a&gt; software. The cryptographic hash function is run again, this time on the server-side on not on the device, and the resulting hash value from the pixel values is displayed. This must match the hash value generated on the device, which should have been shared via private or public notary (SMS, email, Twitter, etc), and is also stored in the J3M metadata obtained in step #1.&lt;/li&gt;
&lt;li&gt;View the J3M metadata directly or import into the &lt;a href=&#34;https://j3m.info/submission/1110ca88837d710d9c43d49f48afce0b/&#34;&gt;InformaCam Dashboard system&lt;/a&gt; for verification. The metadata will include information such as GPS location, cellular network location, nearby bluetooth and wifi devices, compass headings, altitude, temperature and more. This data can be used to match against the time and place the media claims to be from.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Four Ways, In Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Through the four ways described above, the InformCam system works to capture and safeguard both media and metadata at all points along the way, between the device and the repository. Cryptographic functions and features provide much of the power behind this, but relying on mathematics alone does not tell the whole store. By combining the corroborating metadata and open tools for analysis, we ensure that the context of the photo or video, and the means to verify the entire package are also readily available as part of the verification process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Integrating Crypto Identities with Android</title>
      <link>https://guardianproject.github.io/info/2013/12/28/integrating-crypto-identities-with-android/</link>
      <pubDate>Sat, 28 Dec 2013 19:42:56 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/12/28/integrating-crypto-identities-with-android/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Alberti_cipher_disk&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk-150x150.jpg&#34; alt=&#34;alberti cipher disk&#34; width=&#34;50&#34; height=&#34;50&#34; class=&#34;alignleft size-thumbnail wp-image-3079&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk.jpg 245w&#34; sizes=&#34;(max-width: 50px) 100vw, 50px&#34; /&gt;&lt;/a&gt;ver the past couple of years, Android has included a central database for managing information about people, it is known as the &lt;a href=&#34;https://developer.android.com/reference/android/provider/ContactsContract.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ContactsContract&lt;/code&gt;&lt;/a&gt; (that’s a mouthful). Android then provides the &lt;em&gt;People&lt;/em&gt; app and reusable interface chunks to choose contacts that work with all the information in the &lt;code&gt;ContactsContract&lt;/code&gt; database. Any time that you are adding an account in the &lt;em&gt;Settings&lt;/em&gt; app, you are setting up this integration. You can see it with Google services, &lt;em&gt;Skype&lt;/em&gt;, &lt;em&gt;Facebook&lt;/em&gt;, and many more. This system has a lot of advantages, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a unified user experience for finding and managing data about people&lt;/li&gt;
&lt;li&gt;apps can launch common interface dialogs and screens for working with that database without having to write custom versions (launching &lt;code&gt;Activity&lt;/code&gt;s via &lt;code&gt;Intent&lt;/code&gt;s&lt;/li&gt;
&lt;li&gt;streamlined methods for building custom UIs based on the contacts database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With our work porting &lt;a href=&#34;https://www.gnupg.org/&#34; target=&#34;_blank&#34;&gt;GnuPG&lt;/a&gt; to Android, we want &lt;a href=&#34;https://guardianproject.info/code/gnupg/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Gnu Privacy Guard&lt;/em&gt;&lt;/a&gt; for Android to be fully integrated into the Android experience. &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; registers itself as a handler for all OpenPGP file and data types in Android, so users can work with these files using standard Android methods like Share/Send buttons. Or users can start by finding the person to encrypt to in the &lt;em&gt;People&lt;/em&gt; app, then choosing the file. These flows make it intuitive to Android users, and means we have to write less code because it taps into existing Android systems. With the past release, v0.2, we laid the foundations for having the GnuPG keyring integrated into this contacts database. The next release, v0.3 will improve contacts integration a lot.&lt;/p&gt;

&lt;div id=&#34;attachment_12225&#34; style=&#34;width: 560px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/gpg-contacts-integration.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12225&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/gpg-contacts-integration-1024x640.png&#34; alt=&#34;All of these contacts come from the GnuPG keyring being synced to the ContactsContract.  Nathan&#39;s contact is made up of combined info from Gnu Privacy Guard and Google. To encrypt a file to the author, select Encrypt File to... on his contact page.&#34; width=&#34;550&#34; height=&#34;343&#34; class=&#34;size-large wp-image-12225&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/gpg-contacts-integration-1024x640.png 1024w, https://guardianproject.info/wp-content/uploads/2013/12/gpg-contacts-integration-300x187.png 300w&#34; sizes=&#34;(max-width: 550px) 100vw, 550px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12225&#34; class=&#34;wp-caption-text&#34;&gt;
    All of these contacts come from the GnuPG keyring being synced to the &lt;code&gt;ContactsContract&lt;/code&gt;. Nathan’s contact is made up of combined info from &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; and Google. To encrypt a file to the author, select &lt;strong&gt;Encrypt file to…&lt;/strong&gt; on his contact page.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;One of the concerns that has been voiced about integrating with the &lt;code&gt;ContactsContract&lt;/code&gt; database is that all the data put there will be then uploaded to the other accounts, like the Google account of the phone, or other accounts. As far as we can tell, there is no automatic syncing of data between accounts in the &lt;code&gt;ContactsContract&lt;/code&gt;, instead it is a system of individual, local databases. We have not confirmed this with a code audit whether there is any data leakage from &lt;code&gt;ContactsContract&lt;/code&gt;, and would love to hear more information on that. There is a layer of matching rules for locally merging those local databases into a single, unified view of that data. A good example of this unified data view in action is the built-in &lt;em&gt;People&lt;/em&gt; app. It will show data from all of the local databases, and it will link profiles together in a single view based on programmatic rules that look at email addresses, names, etc. In any case, &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; only syncs one way. It treats the GnuPG keyring as canonical and clones the GnuPG keyring contacts to the &lt;code&gt;ContactsContract&lt;/code&gt; whenever a sync is run. The sync process never reads from the &lt;code&gt;ContactsContract&lt;/code&gt;, and currently no data is ever imported from it. So at the very least, the ContactsContract should not serve as a point to inject data into the GnuPG keyring.&lt;/p&gt;

&lt;div id=&#34;attachment_12211&#34; style=&#34;width: 330px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ContactsContract.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12211&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ContactsContract.png&#34; alt=&#34;The ContactsContract builds up the complete view of all contacts based on RawContacts provided by each account type, which are in turn built up of standard data types like name, email, phone number, etc.&#34; width=&#34;320&#34; height=&#34;189&#34; class=&#34;size-full wp-image-12211&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ContactsContract.png 320w, https://guardianproject.info/wp-content/uploads/2013/12/ContactsContract-300x177.png 300w&#34; sizes=&#34;(max-width: 320px) 100vw, 320px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12211&#34; class=&#34;wp-caption-text&#34;&gt;
    The &lt;code&gt;ContactsContract&lt;/code&gt; builds up the complete view of all contacts based on &lt;code&gt;RawContacts&lt;/code&gt; provided by each account type, which are in turn built up of standard data types like name, email, phone number, etc.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;One unexplored idea is for apps that need to use crypto to use only the standard Android contacts API to fetch crypto identity information like public keys and fingerprints. For example, PGP email app &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.fsck.k9&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;K-9&lt;/em&gt;&lt;/a&gt; could look up OpenPGP info at the same time it is looking in the contacts database for email addresses. It probably even makes sense for &lt;em&gt;K-9&lt;/em&gt; to offload even more to an OpenPGP provider, and have &lt;em&gt;K-9&lt;/em&gt; just query the PGP provider whether there is a signing key available, whether the receiver has a PGP key, etc.&lt;/p&gt;

&lt;p&gt;It is also tempting to think about using a similar technique for storing other types of keys like OTR keys for secure chat. The hard part is that OTR has no method built-in to the key for verifying whether that key is trusted. OpenPGP has key signing and the Web-of-Trust, with all of its issues, but the OpenPGP security model is designed around untrusted methods of moving public key data around. Using the contacts database for moving around public key material for later verification will work equally well for OTR, OpenPGP, etc.&lt;/p&gt;

&lt;p&gt;On a similar note, we are also working with Dominik Schürmann and the &lt;em&gt;K-9&lt;/em&gt; devs to create &lt;a href=&#34;https://dev.guardianproject.info/projects/gpgandroid/wiki/API_Sketch&#34; target=&#34;_blank&#34;&gt;a common Android API for a generic OpenPGP provider&lt;/a&gt;. This is similar to the contacts system in recent versions of Android in that there is a single, central contacts system that any app can tap into for managing data related to people.&lt;/p&gt;

&lt;p&gt;We have decided to go with Dominik Schürmann’s approach of using an AIDL API to an Android Service. AIDL does have some downsides mostly around it being overcomplicated. But AIDL is the main Android method for inter-process communication with &lt;code&gt;Service&lt;/code&gt;s, so we are stuck with it, more or less. The beautiful thing is that this arrangement will make it possible for apps to fully offload the crypto handling to the &lt;code&gt;Service&lt;/code&gt;, including all the required GUI bits like passphrase prompting, progress dialog overlays, key selection, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://csunplugged.org/public-key-encryption&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public-key-encryption-cartoon-300x292.jpg&#34; alt=&#34;contacts with keys&#34; width=&#34;300&#34; height=&#34;292&#34; class=&#34;alignright size-medium wp-image-12212&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public-key-encryption-cartoon-300x292.jpg 300w, https://guardianproject.info/wp-content/uploads/2013/12/public-key-encryption-cartoon.jpg 414w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;For example of how this idea would work, we can look at &lt;em&gt;K-9&lt;/em&gt; email again. If an incoming email includes a public key or fingerprint, either of these can be sent to the OpenPGP provider for importing. An &lt;code&gt;OPENPGP4FPR:&lt;/code&gt; URI will trigger downloading the public key from a keyserver. A public key contained in an attached file will be received by the OpenPGP provider via the Android file associations, which will then prompts the user to import it. When &lt;em&gt;K-9&lt;/em&gt; goes to send a OpenPGP-encrypted email to that new key, it checks the ContactsContract to see whether the recipient has a OpenPGP key. If so, it sends the email to the OpenPGP provider to be encrypted. The OpenPGP provider can then look up which key to use in it’s local keyring by using the recipient’s email address. If there are multiple keys for that email address, it prompts the user to choose. It could also base it’s choice on the OpenPGP trust level for that key.&lt;/p&gt;

&lt;p&gt;These are currently all ideas for how GnuPG can be integrated into Android. Some of these are implemented and ready for you to try out on your device. The common OpenPGP provider idea is still very much a work in progress.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keys, signatures, certificates, verifications, etc. What are all these for?</title>
      <link>https://guardianproject.github.io/info/2013/12/12/keys-signatures-certificates-verifications-etc.-what-are-all-these-for/</link>
      <pubDate>Thu, 12 Dec 2013 13:20:09 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/12/12/keys-signatures-certificates-verifications-etc.-what-are-all-these-for/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/key.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/key-150x150.jpg&#34; alt=&#34;portable shared security token&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12129&#34; /&gt;&lt;/a&gt;For the past two years, we have been thinking about how to make it easier for anyone to achieve private communications. One particular focus has been on the “security tokens” that are required to make private communications systems work. This research area is called internally &lt;a href=&#34;https://dev.guardianproject.info/projects/psst/wiki/PSST&#34; title=&#34;PSST Wiki&#34; target=&#34;_blank&#34;&gt;Portable Shared Security Tokens aka PSST&lt;/a&gt;. All of the privacy tools that we are working on require “keys” and “signatures”, to use the language of cryptography, and these are the core of what “security tokens” are. One thing we learned a lot about is how to portray and discuss tools for private or anonymous communications to people who just want to communicate and are not interested in technical discussion. This is becoming a central issue among a lot of people working to make usable privacy tools.&lt;/p&gt;

&lt;p&gt;The widely established way of talking about privacy tools comes from the lingo of the underlying methods: cryptography, networking, etc. We talk about public and private keys, signing, validation, verification, key exchange, certificates, and fingerprints. In order for cryptography to work, keys need to be marked whether they are verified or not. &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm-300x190.png&#34; alt=&#34;hide the guts of what is happening&#34; width=&#34;300&#34; height=&#34;190&#34; class=&#34;alignleft size-medium wp-image-12135&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm-300x190.png 300w, https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm.png 500w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Few computers users understand what these terms are referring to, even highly technical people who regularly use encryption do not know the meaning of all these things, nor should they. This is a low level detail that is not important to how the vast majority of users understand privacy in computers. Keys and verification are far too abstract to be generally understandable, and what other kind of key has a fingerprint? Even more so, few people can tell you the difference between validation and verification when it comes to keys, signatures and certificates. The software should not be exposing all this, but instead should be minimizing the complexity as much as possible, and providing as simple a user experience as possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Defining the Concepts that Define the Experience&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A key part of defining that simple user experience is defining the core concepts that the software is organized around. In our discussions, we mostly talked about the ideas of identity and trust, while some discussion of verifying identity seemed unavoidable. Talking about identity and trust is a lot more relevant in day-to-day life, i.e. knowing that the message came from the person you think it did, and trusting that it was private. It is most direct to talk about establishing a trusted connection to another person, but that’s not something that crypto can ever promise because there is still the analog gap between the person and the device. These core ideas must represent what is technically possible, so we searched for widely understood concepts that map well to the technical limitations: “a private conversation”, “a trusted app”, “verifiable video”.&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;attachment_12128&#34; style=&#34;width: 160px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ecc.jpg&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12128&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ecc-150x150.jpg&#34; alt=&#34;create metaphors based on what users know&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;size-thumbnail wp-image-12128&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ecc-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2013/12/ecc-300x300.jpg 300w, https://guardianproject.info/wp-content/uploads/2013/12/ecc.jpg 350w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p id=&#34;caption-attachment-12128&#34; class=&#34;wp-caption-text&#34;&gt;
    create metaphors based on what users know
  &lt;/p&gt;
&lt;/div&gt;Diving in deeper, we concluded that the balance point between technical accuracy and widely understandable lingo was to talk about trusting the device, not the person. The technology can provide trusted connections between devices, and it is pretty close to how people experience digital communications. There is the laptop, the mobile phone, the net cafe, the friend’s computer, computer at work, etc. etc. When I look at my phone to see a message from a friend, it is easy to picture that friend typing that message out on that device, though it does take some conscious effort. The hard part here is that as we communicate more and more with our devices, there is less and less separation in our minds about whether we were talking in person, via voice, or by sending text. This is a point to focus on when thinking about designing the experience of private, secure communications software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let the Software Handle It!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is a forming consensus in the world of usable security to focus on figuring out how to automate as much as possible then figure out how best tailor the experience of the essential parts that cannot be automated. The hard part will remain explaining the limitations of a given privacy tool.&lt;/p&gt;

&lt;p&gt;At Guardian Project, we work a lot on incremental progress, so many of our projects are focused on specific, narrow improvements. With &lt;a href=&#34;https://guardianproject.info/apps/chatsecure/&#34; target=&#34;_blank&#34;&gt;ChatSecure&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.info/apps/keysync/&#34; target=&#34;_blank&#34;&gt;Keysync&lt;/a&gt; , we were able to automate one small part of the whole process, cryptography identity portability, which provides the foundation to provide private communications and verifiable media. Allowing users to sync their trust profiles between desktop and mobile makes it much more likely that users will have fully verified OTR conversations when chatting on their devices and laptops.&lt;/p&gt;

&lt;p&gt;With &lt;a href=&#34;https://guardianproject.info/code/gnupg/&#34; target=&#34;_blank&#34;&gt;Gnu Privacy Guard for Android (GPGA)&lt;/a&gt;, we have made it easy to import keys via QRCode as well as &lt;code&gt;openpgp4fpr:&lt;/code&gt; URLs (a standard defined in conjuction with the &lt;a href=&#34;http://web.monkeysphere.info/&#34; title=&#34;Monkeysphere Home Page&#34; target=&#34;_blank&#34;&gt;Monkeysphere&lt;/a&gt; project. We are also working on a common method of using NFC for OpenPGP key signing in conjuction with &lt;a href=&#34;http://sufficientlysecure.org/index.php/openpgp-keychain/&#34; title=&#34;OpenPGP Keychain home page&#34; target=&#34;_blank&#34;&gt;OpenPGP Keychain&lt;/a&gt;. Even little things like optimizing support for standard file extensions can go a long way to make things easier, so GPGA automatically sets itself up to receive files with the &lt;a href=&#34;https://tools.ietf.org/html/rfc2015&#34; target=&#34;_blank&#34;&gt;standard OpenPGP MIME types&lt;/a&gt; (&lt;code&gt;application/pgp-keys&lt;/code&gt;, &lt;code&gt;application/pgp-encrypted&lt;/code&gt;, &lt;code&gt;application/pgp-signature&lt;/code&gt;) as well as the corresponding file extensions (&lt;code&gt;.pkr&lt;/code&gt;, &lt;code&gt;.skr&lt;/code&gt;, &lt;code&gt;.key&lt;/code&gt;, &lt;code&gt;.sig&lt;/code&gt;, &lt;code&gt;.asc&lt;/code&gt;, etc.). That makes it so a user can just click on one of these files, and GPGA will walk them through the whole process, doing as much as possible automatically.&lt;/p&gt;

&lt;p&gt;Another interesting idea that is a big step in this direction is “secure introductions”. The idea is to automatically share trusted identity information when securely communicating with multiple people. For example, whenever you send a signed, encrypted email to multiple people, the email program should include the key fingerprints of each recipient in that email. Then the email program of the people receiving that email should automatically mark those keys as verified if the sender’s key is trusted and the signature is valid. There is not a meaningful amount of detail leaked in this interaction, since the existence of all the people’s keys and email address is already present in a secure email. The tricky part is figuring out how to make it harder for someone to use this maliciously to spread false identity information while keeping things as automatic as possible. This is very much a long term research idea: there are no widespread implementations of it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Turn Your Device Into an App Store</title>
      <link>https://guardianproject.github.io/info/2013/11/18/turn-your-device-into-an-app-store/</link>
      <pubDate>Mon, 18 Nov 2013 16:27:30 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/18/turn-your-device-into-an-app-store/</guid>
      <description>&lt;p&gt;As we’ve touched upon in &lt;a href=&#34;https://guardianproject.info/2013/11/05/setting-up-your-own-app-store-with-f-droid/&#34;&gt;previous blog posts &lt;/a&gt; the Google Play model of application distribution has some disadvantages. Google does not make the Play store universally available, instead limiting availability to a subset of countries. Using the Play store to install apps necessitates both sharing personal information with Google and enabling Google to remotely remove apps from your device (colloquially referred to as &lt;a href=&#34;http://www.engadget.com/2008/10/16/google-implemented-an-android-kill-switch-those-rascals/&#34;&gt;having a ‘kill switch’&lt;/a&gt;). Using the Play store also requires a functional data connection (wifi or otherwise) to allow apps to be downloaded. Often there is a need to quickly bootstrap users during training sessions in countries with unreliable/restricted data connectivity, or in extreme cases, &lt;a href=&#34;http://www.nytimes.com/2011/01/29/technology/internet/29cutoff.html?_r=0&#34;&gt;no internet connectivity at all&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org/&#34;&gt;F-Droid&lt;/a&gt; addresses many of these concerns, but still requires a functional data connection in order to access the repository housing applications available for install. Wouldn’t it be great if there was an easy way for users to share applications amongst themselves, in absence of a reliable data connection? Today we would like to announce initial steps the Guardian Project is taking to enable this exact functionality. We’ve been working on a prototype application capable of building F-Droid repositories &lt;strong&gt;on-device&lt;/strong&gt;, allowing users to share apps they already have installed to other users through F-Droid. In this way savvy users can quickly and securely share applications they already know and trust with friends and family without requiring a central market/repository or a reliable internet connection.&lt;/p&gt;

&lt;p&gt;To start, we’ve built a stand-alone prototype application we call “_&lt;strong&gt;Kerplapp&lt;/strong&gt;_” (as in &lt;em&gt;Kerplop for Apps)&lt;/em&gt;. Using Kerplapp an established user can select applications already installed on their phone that they wish to make available to other users. Using the selected applications Kerplapp builds a &lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Simple-Binary-Repository&#34;&gt;simple binary F-Droid repostiory&lt;/a&gt; on the user’s device. The local on-device repository is then made available over a WiFi connection to other users on the local area network. Kerplapp will even display a QR code with the information required to add the local Kerplapp repo as a source repository for an F-Droid client running on another device. We hope to eventually merge our work back into the official F-droid Android client, but while we work out the kinks the Kerplapp application operates side-by-side with the F-Droid client app.&lt;/p&gt;

&lt;div id=&#34;attachment_11966&#34; style=&#34;width: 190px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-11966&#34; class=&#34;size-medium wp-image-11966&#34; alt=&#34;Sharing access to a Kerplapp repo with a QR code.&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-180x300.png&#34; width=&#34;180&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-180x300.png 180w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-614x1024.png 614w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48.png 768w&#34; sizes=&#34;(max-width: 180px) 100vw, 180px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-11966&#34; class=&#34;wp-caption-text&#34;&gt;
    Sharing access to a Kerplapp repo with a QR code.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Building on top of F-Droid has a number of advantages. First, we can directly benefit from the tremendous effort and success of the F-Droid project! We’ve been actively contributing improvements &lt;a href=&#34;https://gitorious.org/f-droid/fdroidclient/merge_requests/39&#34;&gt;back to both the F-droid client&lt;/a&gt; and &lt;a href=&#34;https://gitorious.org/f-droid/fdroidserver/merge_requests/127&#34;&gt;the F-droid server&lt;/a&gt;, making it easier for everyone to set up new F-Droid repos and share connection details. Secondly, by using a binary F-Droid repository we can ensure that when users share apps between each other that the apps will continue to receive updates through other channels. That is, if I share an app with you through Kerplapp you will be able to install updates to the app from other F-Droid binary repos and other Kerplapp users – wherever the app and its updates are available with the same APK signature. The F-Droid client will do the hard work of determining what updates are available and compatible with your device&lt;/p&gt;

&lt;p&gt;There’s a lot of work left to be done! One of our short term goals include enabling Bonjour support so that the F-Droid client can find repositories on the local network without requiring them to be added manually. We’re interested in supporting device to device app transfer over a number of channels, starting with HTTPS and eventually adding support for bluetooth and NFC. Building on the success of ChatSecure we’re actively working on supporting F-Droid app transfer over &lt;a href=&#34;https://dev.guardianproject.info/projects/gibberbot/wiki/OTRDATA_Specifications&#34;&gt;OTR-Data&lt;/a&gt;, the ChatSecure proposal for in-band OTR encrypted file transfers. With F-Droid as an OTR-DATA endpoint we can support peer to peer app transfer over a trusted, authenticated, and encrypted channel. We’re also exploring how we can use the OTR keys your contacts already trust to &lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Signing&#34;&gt;sign the F-Droid repository metadata index&lt;/a&gt;, providing greater trust in the accuracy of the metadata provided by peer to peer repositories.&lt;/p&gt;

&lt;p&gt;If you’re curious you can &lt;a href=&#34;https://dev.guardianproject.info/projects/bazaar&#34;&gt;follow Kerplapp’s development on our project tracker.&lt;/a&gt; We’re also looking for adventurous users &lt;a href=&#34;https://guardianproject.info/builds/Kerplapp/&#34;&gt;to install the Kerplapp prototype application&lt;/a&gt; to provide feedback and testing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your own private dropbox with free software</title>
      <link>https://guardianproject.github.io/info/2013/11/12/your-own-private-dropbox-with-free-software/</link>
      <pubDate>Tue, 12 Nov 2013 12:50:23 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/12/your-own-private-dropbox-with-free-software/</guid>
      <description>&lt;p&gt;There are lots of file storage and sharing software packages out there that make it easy for a group of people to share files. Dropbox is perhaps the most well known of the group, it provides an easy way for a group of people to share files. The downside of Dropbox is that it is not a private service, just like any cloud-based service. Dropbox has total access to your files that you store there. That means its likely that the NSA and its collaborators do too.&lt;/p&gt;

&lt;p&gt;Dropbox also knows where the computers are that are accessing their service because they can see the IP address of the incoming connections. To help with this, it is possible to use use Dropbox over Tor, thankfully they have provided proxy settings.&lt;/p&gt;

&lt;p&gt;For our shared files, we use &lt;a href=&#34;http://sparkleshare.org/&#34; target=&#34;_blank&#34;&gt;SparkleShare&lt;/a&gt;. It provides an experience very similar to Dropbox: you have a SparkleShare folder that is synced up with the service, and in turn any other users who are also linked up to it. Once its setup, it is as easy to use as Dropbox, but setting it up takes a bit more work than Dropbox. It builds upon two software packages well known for security and reliability: &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt;, and works with Tor Hidden Services. It runs on Windows, Mac OS X, and GNU/Linux, and there is an &lt;a href=&#34;https://github.com/NewProggie/SparkleShare-Android&#34; target=&#34;_blank&#34;&gt;Android client&lt;/a&gt; in the works.&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion.png&#34; alt=&#34;sparkleshare-onion&#34; width=&#34;312&#34; height=&#34;342&#34; class=&#34;alignright size-full wp-image-11936&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion.png 312w, https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion-273x300.png 273w&#34; sizes=&#34;(max-width: 312px) 100vw, 312px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use any git service as the server for SparkleShare, including github, bitbucket, &lt;a href=&#34;https://gitorious.org/&#34; target=&#34;_blank&#34;&gt;gitorious&lt;/a&gt;, etc. But these have the same issues as putting your files on Dropbox: that service has complete access to your files. For extra protection, SparkleShare &lt;a href=&#34;https://github.com/hbons/SparkleShare/wiki/Client-Side-Encryption&#34; target=&#34;_blank&#34;&gt;can encrypt the files on the client-side&lt;/a&gt;, have encrypted shared folders with SparkleShare, so that the server does not have access to the files. For the last piece of setting up a private SparkleShare, you need a computer that you can &lt;code&gt;ssh&lt;/code&gt; to, and has &lt;code&gt;git&lt;/code&gt; and Tor on it. This computer could even be an old Android device running &lt;a href=&#34;https://guardianproject.info/code/lildebi/&#34; target=&#34;_blank&#34;&gt;Lil’ Debi&lt;/a&gt;, it only needs enough disk space for your SparkleShare files and a steady network connection. Running it on your own computer means it can use a Tor Hidden Service, and that all of the metadata related to who is editing what files remains private.&lt;/p&gt;

&lt;p&gt;To start, setup a Tor Hidden Service to the sshd port. You can read all about that process in the &lt;a href=&#34;https://www.torproject.org/docs/tor-hidden-service.html&#34; target=&#34;_blank&#34;&gt;Tor instructions&lt;/a&gt;, but basically, you need to add something like this to the &lt;code&gt;torrc&lt;/code&gt; configuration file:&lt;/p&gt;

&lt;pre&gt;HiddenServiceDir /var/lib/tor/ssh_hidden_service/
HiddenServicePort 22 127.0.0.1:22
&lt;/pre&gt;

&lt;p&gt;Then restart tor, and it will generate two files in &lt;code&gt;/var/lib/tor/ssh_hidden_service/&lt;/code&gt;, open the file called &lt;code&gt;hostname&lt;/code&gt; to see your new .onion address. We’re going to use &lt;code&gt;fakefakefakefake.onion&lt;/code&gt; as our made-up one for this HOWTO. That is the address you will use in SparkleShare as the server address.&lt;/p&gt;

&lt;p&gt;Next &lt;code&gt;ssh&lt;/code&gt; needs to be setup to use Tor to access the .onion address of the Tor Hidden Service. To do that we need the wonderful Netcat tool (&lt;code&gt;nc&lt;/code&gt;). On Debian/Ubuntu, run &lt;code&gt;sudo apt-get install netcat-openbsd&lt;/code&gt; to get it, its included with Mac OS X by default. Now edit your SSH config file, its usually in &lt;code&gt;~/.ssh/config&lt;/code&gt;, and add this section:&lt;/p&gt;

&lt;pre&gt;Host *.onion
     Compression yes
     ProxyCommand nc -X 5 -x 127.0.0.1:9050 %h %p
&lt;/pre&gt;

&lt;p&gt;For Windows, you need to use &lt;code&gt;connect&lt;/code&gt; proxy, which is thankfully included in SparkleShare. You can optionally use &lt;code&gt;connect&lt;/code&gt; instead of Netcat/&lt;code&gt;nc&lt;/code&gt; on Mac OS X (&lt;code&gt;fink install connect&lt;/code&gt; or &lt;code&gt;brew install connect&lt;/code&gt;) and GNU/Linux (e.g. &lt;code&gt;apt-get install connect-proxy&lt;/code&gt; or &lt;code&gt;yum install connect-proxy&lt;/code&gt;). Instead of the snippet above, use this snippet in &lt;code&gt;~/.ssh/config&lt;/code&gt; to use &lt;code&gt;connect&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;Host *.onion
     Compression yes
     ProxyCommand connect -5 -S 127.0.0.1:9050 %h %p
&lt;/pre&gt;

&lt;p&gt;Now its time to set up the git repo on the server that will be the conduit for sharing files between the different users. Basically, all you need to do is create a new folder, then make it a “bare” git repo (you can read &lt;a href=&#34;http://git-scm.com/book/en/Git-on-the-Server-Setting-Up-the-Server&#34; target=&#34;_blank&#34;&gt;all about it in the git book&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;ssh g&amp;#x69;t&amp;#x40;&amp;#x66;a&amp;#x6b;e&amp;#x66;&amp;#x61;k&amp;#x65;f&amp;#x61;&amp;#x6b;e&amp;#x66;a&amp;#x6b;&amp;#x65;.&amp;#x6f;n&amp;#x69;&amp;#x6f;n
mkdir /home/git/MyPrivateShare
cd /home/git/MyPrivateShare
git init --bare
&lt;/pre&gt;

&lt;p&gt;For sshing to the git, we set up a single account called &lt;code&gt;git&lt;/code&gt;, then to grant access, we add the SSH key (SparkleShare calls this the &lt;em&gt;Client ID&lt;/em&gt;) to the &lt;code&gt;git&lt;/code&gt; account’s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now everything should be ready to start adding clients! In SparkleShare, go to Add Hosted Project…, choose On my own server, then enter your username and .onion address (&lt;em&gt;ssh:&amp;#x2f;&amp;#x2f;&amp;#x67;&amp;#x69;t@fak&amp;#x65;&amp;#x66;&amp;#x61;&amp;#x6b;efake&amp;#x66;&amp;#x61;&amp;#x6b;&amp;#x65;.onio&amp;#x6e;&lt;/em&gt;) in &lt;strong&gt;Address&lt;/strong&gt; and the path to the git repo (&lt;em&gt;/home/git/MyPrivateShare&lt;/em&gt;) in &lt;strong&gt;Remote Path&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup.png&#34; alt=&#34;SparkleShare Setup&#34; width=&#34;686&#34; height=&#34;427&#34; class=&#34;alignnone size-full wp-image-11945&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup.png 686w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup-300x186.png 300w&#34; sizes=&#34;(max-width: 686px) 100vw, 686px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the client will download the entire git repository from the server, and you’ll then have a working shared dropbox! If there are a lot of files in it, then the first sync can take a long time before any files show up. This is because git first downloads the entire history first, then it checks out the files. After that initial setup, then the new files show up quite quickly.&lt;/p&gt;

&lt;p&gt;So this SparkleShare setup keeps your files on computers that you control, it prevents information and metadata from being leaked to the network while people are using this SparkleShare setup. When using Client Side Encryption, even less data is leaked. The server cannot access the content of the files at all since they are encrypted. The the server in this case would only be able to see the network traffic, and which ssh key was used to access the server. If everyone accessing this setup used the same user account (i.e. &lt;code&gt;git&lt;/code&gt;) and ssh key, then the server would not even know which user is making the changes. This is about as private as you could hope for in a shared dropbox folder.&lt;/p&gt;

&lt;p&gt;One last nice feature of this setup is that git server does not need a domain name, static IP or even a public IP, it just needs a working internet connection. As long as it can connect to Tor, then the Hidden Service will work. So if this private dropbox is for extra sensitive stuff, it could be stashed anywhere it can get power and wifi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gibberbot’s “ChatSecure” MakeOver: Almost Done!</title>
      <link>https://guardianproject.github.io/info/2013/09/20/gibberbots-chatsecure-makeover-almost-done/</link>
      <pubDate>Fri, 20 Sep 2013 17:19:54 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/09/20/gibberbots-chatsecure-makeover-almost-done/</guid>
      <description>&lt;p&gt;In a previous post with the mouthful of a title &lt;a href=&#34;https://guardianproject.info/2013/07/16/modernizing-expectations-for-the-nouveau-secure-mobile-messaging-movement/&#34;&gt;“Modernizing Expectations for the Nouveau Secure Mobile Messaging Movement”&lt;/a&gt;, I spoke about all of the necessary security features a modern mobile messaging app should have. These include encrypted local storage, end-to-end verifiable encryption over the network, certificate pinning for server connections and a variety of other features. I am VERY happy to report that the latest v12 beta release of the project formerly known as Gibberbot, now called ChatSecure, has all of the features described in that post implemented. From a feature perspective, it is the most security mobile messaging app ever. We also hope that in reality, in practice, it also is, as we have spent a great deal of effort on security code audits, penetration testing, and responding to the outcomes of those effort, to further harden our app.&lt;/p&gt;

&lt;p&gt;NOW, moving on to a more lighthearted, but equally important topic – MAKEOVERS! Well, in truth, it is countless hours of study trying to understand how we could make our app not only secure, but also beautiful, efficient and fun. On top of that, countless more hours actually implementing it, debugging it across Android operating systems from 2.3 to 4.3, and making sure it works as well on a Nexus 7 tablet as it does a bargain basement ZTE device.&lt;/p&gt;

&lt;p&gt;Much of this effort was spent on features like themeing, emoji/emoticon support, swipe navigation and improved color schemes for various states of encryption. This may seem frivolous to some, especially while they are “real” problems out there like backdoored basebands and weakened random number generators. However, while we continue to do all we can to ensure our apps are fortresses, we also must make sure they are comfortable fortresses, as we hope and expect our users to spend many hours a day inside of them. If you eyes will be staring at something for that long, don’t you want smooth fonts, and cohesive color schemes? If you are going to be navigating between chats and buddies a hundred times a day, wouldn’t you expect us to make that as seamless an move as possible? Yes, yes, and so we did!&lt;/p&gt;

&lt;p&gt;In the end, we designed our software around people who have little patience or spare time, and every right to be that way – activists, human rights defenders, journalists – people on the front lines in conflict zones and change in their society around the world. Usability for them means they have more time to be in the real world, while still having our apps maximize the precious time they have to communicate digitally, and of course, ensure that the walls of our digital fortress around them are as high and hard as can be.&lt;/p&gt;

&lt;p&gt;You can get your hands on this fully functional beta right here on HockeyApp: &lt;a href=&#34;https://rink.hockeyapp.net/apps/2fa3b9252319e47367f1f125bb3adcd1/&#34;&gt;https://rink.hockeyapp.net/apps/2fa3b9252319e47367f1f125bb3adcd1/&lt;/a&gt; or directly from our site – &lt;a href=&#34;https://guardianproject.info/releases/ChatSecure-v12.4.0-beta4-release.apk&#34;&gt;ChatSecure APK&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.info/releases/ChatSecure-v12.4.0-beta4-release.apk.asc&#34;&gt;signature ASC&lt;/a&gt;.&lt;br /&gt;
&lt;strong&gt;WARNING: The current beta does not supporting importing your existing account configurations, and you will need to setup the accounts again.&lt;/strong&gt;&lt;/p&gt;

&lt;div id=&#39;gallery-8&#39; class=&#39;gallery galleryid-11695 gallery-columns-3 gallery-size-thumbnail&#39;&gt;
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/account-list-light.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/account-list-light-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/account-list-dark.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/account-list-dark-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/account-create-new.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/account-create-new-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/contact-grid-light.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/contact-grid-light-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/contact-grid-sidebar.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/contact-grid-sidebar-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/contact-grid-sidebar-dark.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/contact-grid-sidebar-dark-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/contact-profile-dark.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/contact-profile-dark-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-dark-emoji.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-dark-emoji-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-light-sticker.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-light-sticker-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-profile-overlay.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-profile-overlay-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-with-sharebar.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-with-sharebar-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/otr-file-xfer.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/otr-file-xfer-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/otr-file-xfer-notifications.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/otr-file-xfer-notifications-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-with-wallpaper.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-with-wallpaper-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-MUC-join.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-MUC-join-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2013/09/chat-muc-beer.png&#39;&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/09/chat-muc-beer-150x150.png&#34; class=&#34;attachment-thumbnail size-thumbnail&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#39;clear: both&#39; /&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Keeping data private means it must be truly deletable!</title>
      <link>https://guardianproject.github.io/info/2013/08/23/keeping-data-private-means-it-must-be-truly-deletable/</link>
      <pubDate>Fri, 23 Aug 2013 17:36:49 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/08/23/keeping-data-private-means-it-must-be-truly-deletable/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/08/erase-hard-drive.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/08/erase-hard-drive-150x150.jpg&#34; alt=&#34;deleting data&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-11598&#34; /&gt;&lt;/a&gt;There are lots of apps these days that promise to keep your data secure, and even some that promise to wipe away private information mere seconds or minutes after it has been received. It is one thing to keep data out of view from people you don’t want seeing it, it is also important to be able to truly delete information. Unfortunately computers make it very difficult to make data truly disappear. When we tell a computer to delete a file, it only deletes the reference to the data. The data itself remains on the disk unchanged. For any UNIX geek out there, you can easily see an example of that by greping a partition (e.g. &lt;code&gt;sudo grep password /dev/sda3&lt;/code&gt;. To solve this problem, there are “secure delete” options. Secure deletion removes the reference like regular deletion, then wipes the data on the disk by overwriting it with random data. That’s much better, but not always good enough. It turns out that its possible to remove the hard disk and read magnetic residue and recover even wiped data.&lt;/p&gt;

&lt;p&gt;Mobile devices only make that problem worse because they almost always rely on flash memory for disk storage. Flash memory has wear-leveling programming built into it, so it is not possible to guarantee that a file will be wiped without overwriting the whole flash disk, then deleting it all and overwriting the whole thing again. Not only is it not practical to delete the whole disk just to remove one file, it also takes a long time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack-300x199.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;199&#34; class=&#34;alignleft size-medium wp-image-11600&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack-300x199.jpg 300w, https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack.jpg 1024w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;So what can we do about this? Use encryption! [&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.225.6872&#34; title=&#34;Secure Data Deletion for USB Flash Memory (2011)&#34; target=&#34;_blank&#34;&gt;1&lt;/a&gt;] If the data is encrypted before its written to either a classic hard drive or flash memory disk, then the actual data is never on the disk itself. If the data is encrypted with a good passphrase, then just “forgetting” the key will make it basically impossible to recover the data. Additionally, encrypted data looks like random data, so it is easy to hide the deleted, encrypted data from the recovery techniques by adding random garbage to the disk. It turns out that with the right architecture, a key can be forgotten quite quickly, much quicker than even the most basic secure deletion.&lt;/p&gt;

&lt;p&gt;This logic is built into our new passphrase library &lt;a href=&#34;https://github.com/guardianproject/cacheword&#34; target=&#34;_blank&#34;&gt;Cacheword&lt;/a&gt;. Cacheword is a library for securely working with and caching passphrases. It plugs right into &lt;a href=&#34;https://guardianproject.info/code/sqlcipher&#34; target=&#34;_blank&#34;&gt;SQLCipher for Android&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.info/code/iocipher&#34; target=&#34;_blank&#34;&gt;IOCipher&lt;/a&gt;. SQLCipher and IOCipher are both ways for easily storing data using strong AES-256 encryption. Cacheword then handles getting the passphrase from the user. Instead of feeding that passphrase directly to SQLCipher or IOCipher, it creates an encrypted file for storing a strong AES-256 key and that is what is used to lock SQLCipher and IOCipher. The user’s passphrase then just unlocks that encrypted key file.&lt;/p&gt;

&lt;p&gt;The means you can get rapid deletion of data stores of any size by just deleting the key file. The user never sees the actual key so they cannot divulge it. Since the user’s passphrase is not the key for the data but instead the key to the Cacheword key file, the secure deletion can first focus on that key file. The key file is small, so that can happen very quickly. Then even if the data files are recovered, the user does not has the passphrase to the data, its only locked away in the now deleted key file. The key was stored encrypted, so a standard deletion will provide decent protection: it will look like random data on the disk.&lt;/p&gt;

&lt;p&gt;To really ensure the key and the data is gone for good, an app can implement a full wiping procedure. Normal wiping procedures can follow as a background task, making it harder and harder to recover the data, no matter who the adversary is. The full wiping procedure would go something like this (with a rough timeframe for each step):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cacheword wipes the passphrase from memory (nanoseconds to milliseconds)&lt;/li&gt;
&lt;li&gt;the Cacheword key file is deleted (milliseconds)&lt;/li&gt;
&lt;li&gt;write random garbage to disk patterned after the key file to obscure the deleted key file (milliseconds to minutes)&lt;/li&gt;
&lt;li&gt;delete the SQLCipher/IOCipher data files (seconds to minutes)&lt;/li&gt;
&lt;li&gt;fill entire memory (RAM) with random garbage (minutes to hours)&lt;/li&gt;
&lt;li&gt;fill entire disk with random garbage (hours)&lt;/li&gt;
&lt;li&gt;power off device&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s the overview of the process. But of course, there are always annoying technical details, and I’ll continue on about some of them, for those who like such things.&lt;/p&gt;

&lt;p&gt;To start with, the user’s passphrase will most likely be stored in memory by code outside of Cacheword, SQLCipher, and IOCipher. For example, the Android text entry widget will have the passphrase pass thru it, and inevitably will store that data in memory. It is up to the garbage collection to remove that from memory, and the garbage collection might not zero out the memory before deallocating it. We’re still looking into ideas for how to trigger that, and would love to hear suggestions.&lt;/p&gt;

&lt;p&gt;To truly wipe the data from the disk, there would need to be multiple passes where the entire disk is filled up then the entire disk is deleted. That is rarely practical. So hiding the existence of the encrypted data stores is difficult to do in practice. The encrypted data will remain encrypted with AES-256 using a random, full length key, so it would be basically impossible to crack using publicly known technology and techniques.&lt;/p&gt;

&lt;p&gt;The best bet for preventing the most advanced adversary from getting the deleted data would involve a few cycles of rebooting, filling up the memory and disk with random garbage after doing the procedure outlined above. A more rapid version of that would be to delay filling the disk until after a reboot. That would ensure that the key to the data is thoroughly wiped as quickly as possible before starting in on the much less important and long lasting task of wiping the entire disk to hide the deleted data files.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jitsi, ostel.co and ISP censorship</title>
      <link>https://guardianproject.github.io/info/2013/07/22/jitsi-ostel.co-and-isp-censorship/</link>
      <pubDate>Mon, 22 Jul 2013 15:33:44 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/07/22/jitsi-ostel.co-and-isp-censorship/</guid>
      <description>&lt;p&gt;Earlier last week n8fr8 suspected something changed on the ostel.co server, due to many users emailing support specifically about Jitsi connectivity to ostel.co. The common question was “why did it work a few weeks ago and now it doesn’t anymore?”&lt;/p&gt;

&lt;p&gt;The tl;dr follows, skip to keyword CONCLUSION to hear only the punch line.&lt;/p&gt;

&lt;p&gt;To support n8fr8’s hypothesis, there was a small change to the server but I wan’t convinced it effected anything since all my clients continued to work properly, including Jitsi. Obviously &lt;em&gt;something&lt;/em&gt; had changed but none of us knew what it was. After some testing we discovered the problem was related to insecure connections from Jitsi to UDP port 5060 on ostel.co. Secure connections (on TCP port 5061) continued to work as expected.&lt;/p&gt;

&lt;p&gt;To make matters more confusing, I could register and make calls with two different clients (CSipSimple and Linphone) on the same network (my home ISP, Verizon FiOS) using an insecure connection to ostel.co on UDP port 5060.&lt;/p&gt;

&lt;p&gt;At this point I was like WTF?&lt;/p&gt;

&lt;p&gt;I went back to the server, diffed all the configs, checked server versions, connected with every client I could find that would run on any of my computers. The only change was a Kamailio upgrade from 4.0.1 to 4.0.2. A minor point release. The problem with Jitsi remained. What could the server be doing to this poor client?&lt;/p&gt;

&lt;p&gt;I did a packet trace on the ostel.co server’s public network interface, filtered to dump packets only on UDP port 5060 that match my SIP username. I opened Jitsi and things got interesting. For the curious, here’s the utility and options I used. If you are new to operating a SIP network, ngrep is an excellent tool for debugging.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ngrep -d eth0 -t -p -W byline foo port 5060&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I’ll include an excerpt (I’ve included only the relevant headers for this issue) of the initial request from Jitsi. IP addresses and usernames have been changed to protect the innocent.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;U 2013/07/19 22:17:34.920749 0.0.0.0:5060 -&amp;gt; 66.151.32.200:5060&amp;lt;br /&amp;gt;
REGISTER sip:ostel.co SIP/2.0.&amp;lt;br /&amp;gt;
CSeq: 1 REGISTER.&amp;lt;br /&amp;gt;
From: &amp;quot;foo&amp;quot; &amp;lt;sip:&amp;amp;#x66;&amp;amp;#x6f;&amp;amp;#x6f;&amp;amp;#x40;&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;&amp;amp;#x65;&amp;amp;#x6c;&amp;amp;#x2e;&amp;amp;#x63;&amp;amp;#x6f;&amp;gt;;tag=1eb3467e.&amp;lt;br /&amp;gt;
To: &amp;quot;foo&amp;quot; &amp;lt;sip:&amp;amp;#x66;&amp;amp;#x6f;&amp;amp;#x6f;&amp;amp;#x40;&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;&amp;amp;#x65;l.co&amp;gt;.&amp;lt;br /&amp;gt;
Via: SIP/2.0/UDP 0.0.0.0:49152;branch=z9hG4bK-393535-2269e43afef0b312554eb419a8d0540e.&amp;lt;br /&amp;gt;
User-Agent: Jitsi2.3.4752Linux.&amp;lt;br /&amp;gt;
Contact: &amp;quot;foo&amp;quot; &amp;lt;sip:foo@0.0.0.0:49152;transport=udp;registering_acc=ostel_co&amp;gt;;expires=600.&amp;lt;br /&amp;gt;
.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;U 2013/07/19 22:17:34.921155 66.151.32.200:5060 -&amp;gt; 0.0.0.0:5060&lt;br /&gt;
SIP/2.0 401 Unauthorized.&lt;br /&gt;
CSeq: 1 REGISTER.&lt;br /&gt;
From: “foo” &lt;a href=&#34;sip:fo&amp;amp;#x6f;@&amp;amp;#x6f;s&amp;amp;#x74;e&amp;amp;#x6c;.&amp;amp;#x63;o&#34;&gt;sip:fo&amp;amp;#x6f;@&amp;amp;#x6f;s&amp;amp;#x74;e&amp;amp;#x6c;.&amp;amp;#x63;o&lt;/a&gt;;tag=1eb3467e.&lt;br /&gt;
To: “foo” &lt;a href=&#34;sip:foo@&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;&amp;amp;#x65;l.co&#34;&gt;sip:foo@&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;&amp;amp;#x65;l.co&lt;/a&gt;;tag=e01f0de2cdfebbeefc5ff0c8eabbb8b3.2f1f.&lt;br /&gt;
Via: SIP/2.0/UDP 0.0.0.0:49152;branch=z9hG4bK-393535-2269e43afef0b312554eb419a8d0540e;rport=5060.&lt;br /&gt;
WWW-Authenticate: Digest realm=”ostel.co”, nonce=”Uen0alHp8z4d6ePDl83RtMwARltAxzQu”, qop=”auth”.&lt;br /&gt;
Server: kamailio (4.0.2 (x86_64/linux)).&lt;/p&gt;

&lt;p&gt;If you read the response, you’ll see Kamailio sent 401 Unauthorized. This is normal for SIP authentication. A second client request should follow it, which should contain an Authorization header with an md5 and a nonce. When Kamailio receives this request, checks the auth database and sends a 200 OK response, the client is authenticated.&lt;/p&gt;

&lt;p&gt;The SIP dialog looks good but Jitsi continues not to register. The dialog flow is cut off after the 401 Unauthorized response. It’s almost like something has blocked the response to the client.&lt;/p&gt;

&lt;p&gt;Since I could register Linphone using the same account, I did the same trace for that client. Here’s the excerpt.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;U 2013/07/19 22:33:18.372770 0.0.0.0:42680 -&amp;gt; 66.151.32.200:5060&amp;lt;br /&amp;gt;
REGISTER sip:ostel.co SIP/2.0.&amp;lt;br /&amp;gt;
Via: SIP/2.0/UDP 0.0.0.0:49153;rport;branch=z9hG4bK359459505.&amp;lt;br /&amp;gt;
From: &amp;lt;sip:f&amp;amp;#x6f;o&amp;amp;#x40;&amp;amp;#x6f;s&amp;amp;#x74;e&amp;amp;#x6c;&amp;amp;#x2e;c&amp;amp;#x6f;&amp;gt;;tag=142131416.&amp;lt;br /&amp;gt;
To: &amp;lt;sip:fo&amp;amp;#x6f;@&amp;amp;#x6f;s&amp;amp;#x74;e&amp;amp;#x6c;.&amp;amp;#x63;o&amp;gt;.&amp;lt;br /&amp;gt;
CSeq: 3 REGISTER.&amp;lt;br /&amp;gt;
Contact: &amp;lt;sip:foo@0.0.0.0:49153;line=65da8bffcabe8c4&amp;gt;.&amp;lt;br /&amp;gt;
User-Agent: LinphoneAndroid/2.1.2-1-g23b7fc0 (eXosip2/3.6.0).&amp;lt;br /&amp;gt;
.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;U 2013/07/19 22:33:18.373112 66.151.32.200:5060 -&amp;gt; 0.0.0.0:42680&lt;br /&gt;
SIP/2.0 401 Unauthorized.&lt;br /&gt;
Via: SIP/2.0/UDP 0.0.0.0:49153;rport=42680;branch=z9hG4bK359459505.&lt;br /&gt;
From: &lt;a href=&#34;sip:&amp;amp;#x66;&amp;amp;#x6f;&amp;amp;#x6f;&amp;amp;#x40;&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;&amp;amp;#x65;&amp;amp;#x6c;&amp;amp;#x2e;&amp;amp;#x63;&amp;amp;#x6f;&#34;&gt;sip:&amp;amp;#x66;&amp;amp;#x6f;&amp;amp;#x6f;&amp;amp;#x40;&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;&amp;amp;#x65;&amp;amp;#x6c;&amp;amp;#x2e;&amp;amp;#x63;&amp;amp;#x6f;&lt;/a&gt;;tag=142131416.&lt;br /&gt;
To: &lt;a href=&#34;sip:foo&amp;amp;#x40;&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;el.c&amp;amp;#x6f;&#34;&gt;sip:foo&amp;amp;#x40;&amp;amp;#x6f;&amp;amp;#x73;&amp;amp;#x74;el.c&amp;amp;#x6f;&lt;/a&gt;;tag=e01f0de2cdfebbeefc5ff0c8eabbb8b3.4065.&lt;br /&gt;
CSeq: 3 REGISTER.&lt;br /&gt;
WWW-Authenticate: Digest realm=”ostel.co”, nonce=”Uen4GlHp9u4FwHNY/uE1iQQNCfGHJiob”, qop=”auth”.&lt;br /&gt;
Server: kamailio (4.0.2 (x86_64/linux)).&lt;/p&gt;

&lt;p&gt;This 401 Unauthorized response was received by the client and the follow up request with the Authorization header was sent with the correct digest. Linphone registered. I made a call. Everything worked fine. Indeed WTF?&lt;/p&gt;

&lt;p&gt;I stared at these traces for a while to get a clue. Look again at the first line of the request from Jitsi. You’ll see a timestamp followed by two IP:port pairs. Notice the port on the first IP is 5060 and the port on the second IP is also 5060. This means that the &lt;strong&gt;source port&lt;/strong&gt; used by Jitsi on my home network is UDP port 5060. In order for a response to come back to Jitsi, it must enter my network on the same port it exited. Now read the top line of the response from Kamailio. Indeed, the server sent the response to UDP port 5060.&lt;/p&gt;

&lt;p&gt;Now look at the same flow for Linphone. There is a very different source port in that dialog. In this case, Kamailio sent the response to UDP port 42680 and Linphone received it. Also notice the IP address used by Kamailio as the destination of the response is the same one in the dialog from Jitsi.&lt;/p&gt;

&lt;p&gt;The question remained, why can’t Jitsi get the same kind of SIP response on UDP port 5060? Why is Jitsi using a single source port for outgoing traffic anyway? That value can be dynamic. I configured Jitsi to use a different port for insecure SIP. It has an advanced configuration for SIP with the key “SIP client port”. I set this to 5062 (5061 is conventionally used for secure SIP traffic so I incremented by 2) and tried to register again.&lt;/p&gt;

&lt;p&gt;SUCCESSSSSSSSSSSS!&lt;/p&gt;

&lt;p&gt;To be thorough, I changed Jitsi’s SIP port again to a 5 digit number I randomly typed on my keyboard without looking.&lt;/p&gt;

&lt;p&gt;SUCCESSSSSSSSSSSS!&lt;/p&gt;

&lt;p&gt;So if Jitsi can register to Kamailio on any port other than UDP port 5060, WTF is going on? I had a suspicion. I tried one more test before I called it. I configured Jitsi to connect on TCP port 5060. It registered successfully. Now I know what’s going on. I have a sad 🙁&lt;/p&gt;

&lt;p&gt;CONCLUSION&lt;/p&gt;

&lt;p&gt;My ISP, Verizon FiOS, has a firewall running somewhere upstream (it could be on the router they provided, I haven’t checked yet) that blocks incoming UDP traffic to port 5060. This probably falls under their TOS section which forbids “running servers” since Verizon provides voice services for an additional fee on top of data service, despite both running over the same fiber connection to my house. It seems like Verizon doesn’t want their data-only customers to get in the way of that sweet cheddar delivery each month in exchange for “phone service”.&lt;/p&gt;

&lt;p&gt;This sucks on two levels.&lt;/p&gt;

&lt;p&gt;LEVEL 1&lt;/p&gt;

&lt;p&gt;Why is my ISP censoring my incoming traffic when I have 5 mbps of incoming bandwidth? I assume the answer is “because they can.” *desolate frowny face*&lt;/p&gt;

&lt;p&gt;LEVEL 2&lt;/p&gt;

&lt;p&gt;Why doesn’t Jitsi use a dynamic source port for SIP requests? I assume the answer is “Jitsi is open source, why don’t I change this and send a patch upstream?”&lt;/p&gt;

&lt;p&gt;Both levels are formidable challenges to overcome. Convincing Verizon to play nice on the Internet feels like a vanity project. I’m writing that off. To make a change to the SIP stack in Jitsi is well within the area of the GP team’s expertise, myself included but it’s not a trivial undertaking. Since this is a default configuration change there is probably a reason upstream devs made this choice so in addition to the programming work there’s the work to convince the developers this would be a change worth a new release.&lt;/p&gt;

&lt;p&gt;Since this is specific to Jitsi, I’m going to follow up with the developers and see if I missed anything. Stay tuned for part two.&lt;/p&gt;

&lt;p&gt;Thanks for listening. Stay safe!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Modernizing Expectations for the Nouveau Secure Mobile Messaging Movement</title>
      <link>https://guardianproject.github.io/info/2013/07/16/modernizing-expectations-for-the-nouveau-secure-mobile-messaging-movement/</link>
      <pubDate>Tue, 16 Jul 2013 00:52:31 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/07/16/modernizing-expectations-for-the-nouveau-secure-mobile-messaging-movement/</guid>
      <description>&lt;p&gt;&lt;em&gt;The tl;dr of this lengthy (tho entertaining and immensely important!) post is this: Stopping with “We support OTR” or “We support PGP” is not enough anymore. There are at &lt;strong&gt;least seven&lt;/strong&gt;, if not more, very important security features that any app claiming to provide secure messaging must implement as soon as possible, to truly safeguard a user’s communication content, metadata and identity.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The names “Gibberbot” and “ChatSecure” are used interchangeabley below, as we are in the midst of an app rebrand. Apologies!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 13px; line-height: 19px;&#34;&gt;There has been a great deal of activity recently around new apps and projects working towards the goal of end-to-end secure mobile messaging. This is both prompted by the overwhelming popularity of closed-source, insecure apps like WhatsApp, Viber, Line and WeChat, and by the recent revelations around government-sponsored surveillance in portions of the world that like to think of themselves as “free”.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pennwic.wordpress.com/2012/09/18/new-workshop-series-tools-not-toys/&#34;&gt;&lt;img alt=&#34;Too Many Apps&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/Too-Many-Apps.jpg&#34; width=&#34;360&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 13px; line-height: 19px;&#34;&gt;Whether it be the effort by the &lt;a href=&#34;https://plus.google.com/+CyanogenMod/posts/23vfN2qdZTu&#34;&gt;CyanogenMOD team to build in a secure push messaging&lt;/a&gt;, the arrival of new apps like &lt;a href=&#34;http://gryphn.co/&#34;&gt;Gryphn&lt;/a&gt;, &lt;a href=&#34;https://www.mywickr.com&#34;&gt;Wickr&lt;/a&gt;, &lt;a href=&#34;http://threema.ch/&#34;&gt;Threema&lt;/a&gt; and &lt;a href=&#34;https://www.surespot.me&#34;&gt;SureSpot&lt;/a&gt;, or the very succesful crowdsourced funding of &lt;a href=&#34;https://heml.is/&#34;&gt;Heml.is&lt;/a&gt;, there is no question that there is both user and developer interest in this topic. I would also be remiss not to mention the continuing excellent work by Moxie and the &lt;a href=&#34;https://whispersystems.org/&#34;&gt;Open Whisper Systems&lt;/a&gt; team on SMS-based secure messaging, Ge0rg and the &lt;a href=&#34;http;//yaxim.org&#34;&gt;Yaxim&lt;/a&gt; app, our iOS sister project &lt;a href=&#34;http://chatsecure.org&#34;&gt;ChatSecure&lt;/a&gt;, and of course, &lt;a href=&#34;https://silentcircle.com/&#34;&gt;Silent Circle&lt;/a&gt; (&lt;a href=&#34;http://issilentcircleopensourceyet.com/&#34;&gt;are they open-source yet or what?&lt;/a&gt;).&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Protecting Content, Metadata and Identity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the Guardian Project, we have been working on open-source, standards-based, secure messaging &lt;a href=&#34;https://guardianproject.github.io/info/apps/gibber&#34;&gt;for a few years now&lt;/a&gt;, and are simultaneously both excited and concerned about all of this activity. We are seriously thrilled that so many talented developers are finally interested in empowering every day mobile users with powerful tools to keep their communications private. We are amazed at the creativity and quality of output seen so far, as well as the diverse approaches to solving this complex problem. Most of these apps are innovating way beyond the basic concepts of secure messaging established by systems like OpenPGP and OTR encryption, and actually thinking deeply about what it means to be secure in a mobile context. However, we also think that, in many cases, the security being implemented may not be going far enough. At the least, we feel that a new bar needs to be set, that is nost just “more secure than WhatsApp”. We need to establish norms to help the user better understand and parse through their options.&lt;/p&gt;

&lt;p&gt;In this context, the word “secure” should be taken to mean, that the contents of a message or conversation between one or more parties, should only be able to be viewed by those parties. This means that the application or service should ensure that message content, be it plain text or rich media, is both protected on the device and over the network, from extraction, interception, and decryption. In addition, “secure” should also extend to protect from network traffic surveillance, the fact that a conversation between one or more parties is even happening in the first place. Finally, as much as possible, the user should be able to control their identity within the messaging system, such that personal, real-world information (phone number, email, geolocation) is not exposed without their approval.&lt;/p&gt;

&lt;p&gt;This three-fold approach to mobile security (Content, Metadata, Identity) is a work in progress, but does capture our basic sentiment and approach to secure mobile messaging. From here, I would like to step one level down, and talk about the set of features in our next release of &lt;a href=&#34;https://github.com/guardianproject/Gibberbot/tree/v12-alpha&#34;&gt;Gibberbot&lt;/a&gt;, currently in alpha, that we feel keep our solution to mobile messaging at the head of the pack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Full Local Data Encryption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many apps feel their job in protecting messages is done once it gets to the device. In the face of Android app malware that can vacuum up data from a device and forensic extraction software and hardware, this is obviously not the case. Full disk encryption only protects when a device is locked or powered off, and besides, most users do not enable it. It is up to apps themselves to provide full encryption of all data – account configuration, sensitive settings values, messages, logs – anything that might expose a user’s information to other apps on the system or to a extraction software must be protected. Yes, this also means your user will need to enter a password every time they use your app, but it is possible to make that process less painful.&lt;/p&gt;

&lt;p&gt;&lt;a style=&#34;margin: 3px;&#34; href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-053533.png&#34;&gt;&lt;img class=&#34;wp-image-11455 alignnone&#34; alt=&#34;device-2013-07-12-053533&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-053533.png&#34; width=&#34;259&#34; height=&#34;461&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-053533.png 720w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-053533-168x300.png 168w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-053533-576x1024.png 576w&#34; sizes=&#34;(max-width: 259px) 100vw, 259px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have been working on two developer libraries, &lt;a href=&#34;https://guardianproject.github.io/info/code/sqlcipher&#34;&gt;SQLCipher&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.github.io/info/code/iocipher&#34;&gt;IOCipher&lt;/a&gt;, which provide a simple means to enable database and file encryption in any app. More recently, we have added the &lt;a href=&#34;https://github.com/guardianproject/cacheword&#34;&gt;CacheWord&lt;/a&gt; library to that mix, to help safely manage the locking and unlocking of these data stores. Apps like Gryphn have already implemented all three of these libraries, and so will the next version of Gibberbot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Certificate Pinning&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.thoughtcrime.org/&#34;&gt;Moxie&lt;/a&gt; says it best in his post titled &lt;a href=&#34;http://www.thoughtcrime.org/blog/authenticity-is-broken-in-ssl-but-your-app-ha/&#34;&gt;Your app shouldn’t suffer SSL’s problems&lt;/a&gt;: “If you have a mobile app that makes SSL connections to a service you control, there is really no reason to be validating your service’s certificate using CA signatures.” The &lt;a href=&#34;https://github.com/moxie0/AndroidPinning&#34;&gt;Android Pinning library&lt;/a&gt; makes it quite simple to support this important feature in any app. For Gibberbot, we are pinning certificates of the most common known public XMPP services, such as Google (talk.google.com), Facebook, Jabber.org, Jabber.ccc.de, DuckDuckGo and few more. Beyond that, we offer manual verification (see #3 feature below for more on that). In summary, there is no reason anymore to trust the default CA’s for a messaging app.&lt;/p&gt;

&lt;p&gt;&lt;strong style=&#34;font-size: 13px; line-height: 19px;&#34;&gt;3. TOFU/POP aka “Manual Certificate Verification”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://noncombatant.org/&#34;&gt;Chris Palmer&lt;/a&gt;, formerly of the Electronic Frontier Foundation and iSec Partners and now of Google, gave a great talk a few years ago entitled &lt;a href=&#34;https://docs.google.com/presentation/d/1bieNRy4TU04PKhQ1i_J_kPZ_Tc2E6efNVbvJ295orBs/present#slide=id.i0&#34;&gt;“It’s Time to Fix HTTPS”&lt;/a&gt;. In it, he introduced, or perhaps just popularized, the phrase “Trust on First Use, Persistence of Pseudonym”, that is more happily expressed as TOFU/POP! What this means in user form is that when you connect to a new server for the first time over an SSL connection, instead of the SSL Certificate being verified by a built-in set of trusted root authorities (banks, corporations, governments), the certificate is presented to the user, in a human readable format, to be reviewed, accepted or declined. There are a number of useful pieces of information the user can look at to determine the validity – fingerprints, date generated, and so on. If you can safely verify it once, then you will only be notified or asked to verify again if the server’s certificate changes. At that point the user can be told “This site’s certificate changed, and it doesn’t look the same as it was yesterday. Maybe you should ask the admin or help system if it is still safe to use!”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054024.png&#34;&gt;&lt;img alt=&#34;device-2013-07-12-054024&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054024.png&#34; width=&#34;259&#34; height=&#34;461&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The implementation of TOFU/POP that we use in Gibberbot is the &lt;a href=&#34;https://github.com/ge0rg/MemorizingTrustManager/wiki&#34;&gt;Memorizing Trust Manager&lt;/a&gt; library, originally developed for the &lt;a href=&#34;http://yaxim.org/&#34;&gt;Yaxim messaging app&lt;/a&gt;. It works very well, and again, is extremely simple to implement. Through the combination of features #2 and #3 we have removed the threat posed by the failure of the Root Certificate Authority system, and significantly reduced the success rate of Man-in-the-Middle attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Proxy Support, ideally Tor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With all the talk of metadata recently, it should be clear how important traffic surveillance is. Knowing who is using what app when, or being able to see when two users connect peer-to-peer through a service is immensely valuable information. If it is possible to map a user’s social graph via your app based on analysis of packets coming in and out of your service, then you have failed in providing security to your users. Additionally, we have begun to see a new wave of Internet filtering around the world, as countries begin to block access to popular messaging app downloads and centralized servers.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054331.png&#34;&gt;&lt;img class=&#34;alignnone  wp-image-11460&#34; alt=&#34;device-2013-07-12-054331&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054331.png&#34; width=&#34;259&#34; height=&#34;461&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054331.png 720w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054331-168x300.png 168w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054331-576x1024.png 576w&#34; sizes=&#34;(max-width: 259px) 100vw, 259px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This makes it critical that any messaging app a user will depend on to protect their messages, also works to protect their network of contacts (social graph), and ensures they will have access to the service no matter where they travel or live in the world. In order to achieve this, direct support for proxy servers should be built in to every secure messaging app. At a bare minimum HTTP proxies should be support, and ideally, HTTPS and SOCKS as well. Once you have support for those, you can easily tie into Orbot on Android, by setting the proxy to “localhost” and the appropriate port. If you want to avoid Tor Exit Node attacks or surveillance, you should then provide a Tor Hidden Service .ONION address for your servers, something that the &lt;a href=&#34;https://twitter.com/jabbercccde/status/107850540842627072&#34;&gt;CCC’s Jabber server has provided since 2011&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We have blogged in the past about &lt;a href=&#34;https://guardianproject.info/2012/06/13/auditing-twitter-with-orbot/&#34;&gt;Twitter’s support for proxying on Android&lt;/a&gt; and our OnionKit library, now named &lt;a href=&#34;https://guardianproject.info/code/netcipher/&#34;&gt;NetCipher&lt;/a&gt;. Gibberbot has supported proxying from nearly the beginning of its existence, and in v12 we are using the &lt;a href=&#34;https://github.com/guardianproject/OnionKit/blob/master/sample/src/sample/onionkit/OnionKitSampleActivity.java#L96&#34;&gt;OrbotHelper class&lt;/a&gt; to add an automatic check if Orbot is installed and running, if a user selects to use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Verifiable Message Encryption&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While we expect most nextgen secure messaing apps will support some form of public key encryption, OTR ideally and OpenPGP alternatively, that is not really the end of the message encryption problem. With OpenPGP, we know that most users of the software participate in key signing parties on a regular basis. The same is true for users of desktop OTR encryption in apps like Pidgin. People do not verify keys as often as they should. Since most messaging apps support in-band key exchange, it makes performing a MITM attack at the messaging layer quite trivial, if the SSL transport layer encryption is somehow intercepted.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-003940.png&#34;&gt;&lt;img class=&#34;alignnone  wp-image-11479&#34; alt=&#34;device-2013-07-16-003940&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-003940.png&#34; width=&#34;259&#34; height=&#34;461&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-003940.png 720w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-003940-168x300.png 168w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-003940-576x1024.png 576w&#34; sizes=&#34;(max-width: 259px) 100vw, 259px&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-004035.png&#34;&gt;&lt;img class=&#34;alignnone  wp-image-11480&#34; alt=&#34;device-2013-07-16-004035&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-004035.png&#34; width=&#34;259&#34; height=&#34;461&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-004035.png 720w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-004035-168x300.png 168w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-16-004035-576x1024.png 576w&#34; sizes=&#34;(max-width: 259px) 100vw, 259px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is needed are a variety of features, prods, pokes and motivational interventions to ensure that two people who are using an app to exchange encrypted messages know how fun and easy it can be to verify their keys. With Gibberbot, we were one of the first apps to support the display and scanning of OTR fingerprints as QR Codes. We will go beyond that in future releases with NFC support, as well. We also support shared secret and &lt;a href=&#34;https://en.wikipedia.org/wiki/Socialist_millionaire&#34;&gt;Socialist Millionaire Protocol&lt;/a&gt;-based verification, which in short means, if you and your friend have a real world secret or question and answer ready, you can easily verify your cryptographic fingerprints without ever having to look at a long string of alphanumeric characters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Key Management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This feature comes under the “a great problem to have” category. Once a user really commits to using their app, they will begin building up a network of verified contacts (if you have implemented #5 properly), and generally come to regard your app as a type of secure identity management tool. In fact, they may have created a whole unique identity for themselves that only exists within the confines of your apps, and its encrypted local storage (if you have implemented #1 above). At this point, you need to figure out a means for a user to backup this identity, and generally import and export the data in a variety of ways. If you are using OTR or OpenPGP, then the user may want to share existing keyrings to and from other apps, most likely on their desktop or laptop machines. All in all, the user needs to be empowered to have control of their identity, to move it between devices, to back it up in case a device is wiped or lost, and to keep total control of that information (i.e. not have it backed up automatically to a cloud).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/keysync.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-11466&#34; alt=&#34;keysync&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/keysync.jpg&#34; width=&#34;758&#34; height=&#34;548&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/07/keysync.jpg 758w, https://guardianproject.info/wp-content/uploads/2013/07/keysync-300x216.jpg 300w&#34; sizes=&#34;(max-width: 758px) 100vw, 758px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our case, we have been working for quite a while on a desktop tool called &lt;a href=&#34;https://github.com/guardianproject/otrfileconverter&#34;&gt;OTR File Converter&lt;/a&gt;, which is built upon more fundamental research into the many ways that &lt;a href=&#34;https://github.com/guardianproject/otrfileconverter/blob/master/README.txt&#34;&gt;different OTR-enabled apps store their public and private keys&lt;/a&gt;. As of Gibberbot v12 alpha 3 (now called “ChatSecure” btw!), we now have working support for &lt;a href=&#34;https://lists.mayfirst.org/pipermail/guardian-dev/2013-April/001537.html&#34;&gt;importing an OTR key ring from the desktop&lt;/a&gt;, in a manner that is secure and fairly simple. Our next stop is to add export from the client, and then automated sync between desktop and mobile on an ongoing basis. Beyond this capability, we also plan to expand the ability to manage keys within the Gibberbot app itself, so that a user can manually revoke, regenerate and update or remove trust of other users’ keys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Panic as a feature!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally, we keep coming across this idea of a “Panic Button” being an important feature for addressing security issues in a mobile environment. A few years ago, we developed an app called &lt;a href=&#34;https://github.com/guardianproject/InTheClear/&#34;&gt;In The Clear&lt;/a&gt; which attempted to provide data wipe and distress beacon functionality across your entire device, be it Android, Nokia or Blackberry. We quickly realized that there were many, many different definitions of what a “Panic Button” should do, and that one app may not be able to encompass all of these needs. Since then, we have thought more about “Panic!” as a feature for an app, and how each app we develop should incorporate the capability to assist users when they feel the data that the app holds may be at risk of being compromised or exposed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054429.png&#34;&gt;&lt;img class=&#34;alignnone  wp-image-11461&#34; alt=&#34;device-2013-07-12-054429&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054429.png&#34; width=&#34;259&#34; height=&#34;461&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054429.png 720w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054429-168x300.png 168w, https://guardianproject.info/wp-content/uploads/2013/07/device-2013-07-12-054429-576x1024.png 576w&#34; sizes=&#34;(max-width: 259px) 100vw, 259px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Gibberbot v12, we have implemented Panic as a quick access sidedrawer button. The action can trigger a configurable set of actions, ranging from simply logging out, to deleting all configured accounts, to uninstall the app itself. In the future, we would like to also consider supporting a “turtle shell” type feature where the app can hide itself on your device as an encrypted anonymous blob, until you are ready for it to come back out again. Additionally, supporting false passwords at app unlock that trigger account data wipe or the display of false data is also something we think would be useful to support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Are You Prepared To Do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We know the deep feeling of adrenaline and satisfaction you get when &lt;del&gt;code&lt;/del&gt; ship software that can truly have an impact on a human’s basic freedoms. We are moved when we receive an email from a user in a part of the world where speech and expression is limited and filtered, and they tell us how important our software is to them, and how they do not know what they would without us. These emotions, both from within and shared by others, make it that more important to ensure any development of secure messaging tools is approached in a serious and diligent manner. Checking feature boxes is not enough. Using HTTPS is not enough. Even supporting basic OTR and PGP is no longer enough. We must provide deep and broad security both on the network and on the device, at all times.&lt;/p&gt;

&lt;p&gt;If you are not prepared to go the extra mile with your app’s security capabilities, then perhaps you are in the wrong line of work.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Weather Report On Security</title>
      <link>https://guardianproject.github.io/info/2013/06/14/a-weather-report-on-security/</link>
      <pubDate>Fri, 14 Jun 2013 13:22:28 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/06/14/a-weather-report-on-security/</guid>
      <description>&lt;p&gt;How’s the weather outside? Sunny with a chance of IP blocking.&lt;/p&gt;

&lt;p&gt;We recently launched a new initiative we’re calling: &lt;a href=&#34;https://guardianproject.info/code/weatherrepo/&#34; title=&#34;The Weather Repo&#34;&gt;The Weather Repo&lt;/a&gt;. The goal of the project is for organizations to have a more accurate method of understanding whether the apps they’re using are “safe”. It’s hard to know whether apps that claim to be secure really are. Have they been vetted by a third party? Are there existing case studies? Has a threat analysis been performed?&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;http://weatherrepo.com&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter size-medium wp-image-4240&#34; alt=&#34;weatherrepo1&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1-300x300.png&#34; width=&#34;300&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1-300x300.png 300w, https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1.png 512w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;We’ve been developing an app store recommendation engine for circumvention tools. One that is backed by better, more open metadata; and interfacing with better, more open repositories. The “better, more open metadata” endeavor is now being pursued by a coalition led by the &lt;a title=&#34;open integrity initiative&#34; href=&#34;https://openintegrity.org/&#34; target=&#34;_blank&#34;&gt;Open Integrity Initiative&lt;/a&gt;. As founding members of the group supporting this initiative, we’ve been working closely to develop tools based on the research and metadata frameworks that they’re contributing. Metadata will be culled from other sources to supplement this approach and allow for a comprehensive scan of the entire app ecosystem.&lt;/p&gt;

&lt;p&gt;The success of the project mainly lays in the fact that the crucial groundwork has been laid for our goal of helping organizations make sense of whether the tools they’re using are “safe” or not. We’ve created an API allowing any organization to take our lessons as well as information and apply it. The growing number of efforts in the security and privacy space, as well as our own goal of a publicly facing “app bazaar” are not possible without groundwork such as this and we’re proud to have been able to produce it.&lt;/p&gt;

&lt;p&gt;Our finished API is now documented at &lt;a href=&#34;http://weatherrepo.com/api/&#34;&gt;http://weatherrepo.com/api&lt;/a&gt; . We put up a blog to post about the project and updates of news and events, available at &lt;a href=&#34;http://weatherrepo.com/report&#34;&gt;http://blog.weatherrepo.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’re extremely interested in the concept of human unit testing and want to make sure that our apps, and the greater set of tools that are out there helping the world, are both usable and that users have the digital literacy to understand how they’re being protected by them and how not. Now that our API is finished, we’re seeding our database with content according to our original set of research questions. And we’re asking for YOUR help. Please go to &lt;a href=&#34;http://weatherrepo.com/report&#34;&gt;http://weatherrepo.com/report&lt;/a&gt; and add details about the tools that you use and/or make. Let’s populate this database together and make the world a more obviously and honestly secure place!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Carrier Grade, Verizon and the NSA</title>
      <link>https://guardianproject.github.io/info/2013/06/12/carrier-grade-verizon-and-the-nsa/</link>
      <pubDate>Wed, 12 Jun 2013 06:38:46 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/06/12/carrier-grade-verizon-and-the-nsa/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/06/PHONE_BOLT.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-4188 alignleft&#34; alt=&#34;PHONE_BOLT&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/06/PHONE_BOLT-268x300.png&#34; width=&#34;268&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/06/PHONE_BOLT-268x300.png 268w, https://guardianproject.info/wp-content/uploads/2013/06/PHONE_BOLT.png 514w&#34; sizes=&#34;(max-width: 268px) 100vw, 268px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last week Glenn Greenwald at The Guardian broke the news that &lt;a href=&#34;http://www.guardian.co.uk/world/2013/jun/06/nsa-phone-records-verizon-court-order&#34;&gt;Verizon has been providing the NSA with metadata&lt;/a&gt; about all of the calls over a subsidiary’s network. This subsidiary is called &lt;a href=&#34;http://investing.businessweek.com/research/stocks/private/snapshot.asp?privcapId=4259068&#34;&gt;Verizon Business Network Services&lt;/a&gt;. It is a privately held company that “owns, operates, monitors, and maintains data and Internet networks in North America, Europe, Asia, Latin America, Australia, Japan, and Africa. The company provides converged communication solutions, such as local and long-distance voice, messaging, and Internet access services.” It is likely this company owns equipment that holds caller detail records for millions of customers. The order used &lt;a href=&#34;http://www.aclu.org/free-speech-national-security-technology-and-liberty/reform-patriot-act-section-215&#34;&gt;section 215 of The Patriot Act&lt;/a&gt;, which allows the FBI to order any person or entity to turn over “any tangible things,” so long as the FBI “specif[ies]” that the order is “for an authorized investigation &amp;hellip; to protect against international terrorism or clandestine intelligence activities.” The “tangible things” could have been the physical servers or hard disks that store the logged details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/&#34;&gt;The Guardian Project&lt;/a&gt; operates a voice service called &lt;a href=&#34;https://ostel.co/&#34;&gt;ostel.co&lt;/a&gt;. This service offers secure calling and only logs metadata required for the service to operate, &lt;a href=&#34;https://ostel.co/privacy&#34;&gt;no more, no less&lt;/a&gt;. We’ve redefined what carrier grade means. Our service offers the same reliability and quality as global carriers. It goes further by including security and privacy as core features. This is something Verizon does not offer you. Ostel.co runs a full stack composed of open source software, which gives you the choice to install and operate your own service.&lt;/p&gt;

&lt;p&gt;Metadata is information about information. Every call you make over a carrier’s network can carry metadata about your account ID, your caller ID, the duration of the call, the time it was placed and the caller ID of the person you called, even the location of your cellular radio. Information about your calls can be as important as the calls themselves. In many cases they are more important than the content of the calls since they don’t fall under laws requiring a warrant to intercept. Indexing and searching all customers metadata is much faster than tapping and listening in on the same customer’s calls.&lt;/p&gt;

&lt;p&gt;Jane Mayer at The New Yorker gives a good example of &lt;a href=&#34;http://www.newyorker.com/online/blogs/newsdesk/2013/06/verizon-nsa-metadata-surveillance-problem.html?mbid=gnep&#34;&gt;what a service provider can learn from your metadata&lt;/a&gt;. “Personal phone calls can also reveal sensitive medical information: “You can see a call to a gynecologist, and then a call to an oncologist, and then a call to close family members.”” Metadata from one source can also be &lt;a href=&#34;http://www.technologyreview.com/view/515811/correlation-is-main-concern-over-data-verizon-gives-nsa/&#34;&gt;correlated with metadata from other sources&lt;/a&gt;, like web searches and credit card purchases. Tom Simonite at the MIT Technology Review writes that Facebook “uses obfuscated versions of its members’ phone numbers and e-mail addresses to connect its data with information that data-broker Datalogix gathers from loyalty card schemes, with the result that it is now possible for companies to connect a person’s activity on Facebook, and the ads they see, with what they buy in physical stores.”&lt;/p&gt;

&lt;p&gt;Carriers operate servers that record metadata through a common software practice called logging. Each request your computer software makes to an online service can optionally log all the metadata the application can get its hands on. It is the carrier’s responsibility to define their logging policy, like what is recorded and how long it is retained. This information rarely leaves the privacy of the carrier’s internal operational documents so don’t expect to get many clear answers from them.&lt;/p&gt;

&lt;p&gt;While the NSA debacle proves that global telecommunications carriers log everything and keep it around for a very long time, what if you don’t want this information about your behavior logged? Unfortunately, no carrier offers any kind of “opt out” process at this low of a level. To be fair, this information has many purposes. Caller detail records are required to bill customers on per-minute calling plans. It’s unreasonable to expect a carrier to flat out disable logging, though carriers never state that they share your logs with law enforcement without probable cause of a crime. But that is exactly what Verizon did.&lt;/p&gt;

&lt;p&gt;In addition to &lt;a href=&#34;https://ostel.co&#34;&gt;ostel.co&lt;/a&gt;, there are two other independent carriers that put your privacy first. &lt;a href=&#34;https://www.whispersystems.org/&#34;&gt;Whisper Systems operates a proprietary secure voice service&lt;/a&gt; with an open source client called RedPhone. It integrates nicely with Android mobile devices, though it requires a SIM card with a phone number in select countries to sign up for an account. With a little luck in the wrong hands a phone number could disclose more information about you than your social security number. WhisperSys doesn’t publish their logging policy online.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://silentcircle.com/&#34;&gt;Silent Circle offers secure voice service&lt;/a&gt; for iPhone and Android. They are a subscription service and all client and server software is proprietary. They publish &lt;a href=&#34;https://silentcircle.com/web/privacy/&#34;&gt;an exceptionally detailed logging policy on their website&lt;/a&gt;, which includes how many law enforcement requests for information they have received twice a year.&lt;/p&gt;

&lt;p&gt;Ostel.co does not log personal call details to disk, and we can’t disclose information we don’t have. IP addresses, user IDs and referrers are common points of metadata that are used to find patterns about user behavior. When the ostel.co server software requires this information to be stored, it is stored only in memory. When the system is rebooted or shut down, the information is gone forever.&lt;/p&gt;

&lt;p&gt;Our service is under active development. It is currently in public beta status and new features like custom aliases, third party authentication services and federated calling are on the roadmap. The beta service will always be free.&lt;/p&gt;

&lt;p&gt;For the curious, what follows is a detailed description of the logging implementation of ostel.co.&lt;/p&gt;

&lt;p&gt;Caller Details Records are recorded with no identifying information. Attributes stored to disk include timestamp, duration, call state and bandwidth consumed. These pieces of metadata allow us to report on usage without identifying each user. When a monthly report is generated, the metadata is deleted.&lt;/p&gt;

&lt;p&gt;The SIP server logs IP addresses of online users. This is a requirement for the SIP protocol to locate each end of the call. The contact information is logged to RAM, including the username, source IP address and source port of the registered client application. When the server is shut down or restarted, this information is erased.&lt;/p&gt;

&lt;p&gt;The SIP server only logs debugging information to disk, which does not include any of the SIP information.&lt;/p&gt;

&lt;p&gt;Audio data is passed through the server to work around limitations in two-way audio connectivity for common home networks. After a ZRTP key agreement, this audio is encrypted. The server cannot decrypt a call between two users, nor does the server control any of the parameters of the call. This makes calls over ostel.co function in a peer-to-peer mode similar to Skype’s “supernode” feature but without any backdoors.&lt;/p&gt;

&lt;p&gt;No IP addresses are logged for any web requests. This is a simple configuration change for the reverse proxy and required a patch to the core source code of the application server framework.&lt;/p&gt;

&lt;p&gt;The server stores each user’s email address, SIP username, encrypted password and account management data like when the user profile was created/updated and password reset information if the user chooses to use that feature.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gibberbot v11 is not just secure, its also simple, snappy and super fun!</title>
      <link>https://guardianproject.github.io/info/2013/03/08/gibberbot-v11-is-not-just-secure-its-also-simple-snappy-and-super-fun/</link>
      <pubDate>Fri, 08 Mar 2013 12:54:50 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/03/08/gibberbot-v11-is-not-just-secure-its-also-simple-snappy-and-super-fun/</guid>
      <description>&lt;p&gt;&lt;em&gt;Gibberbot v11 is now final as of RC3 release: &lt;a href=&#34;https://github.com/guardianproject/Gibberbot/tree/0.0.11-RC3&#34;&gt;https://github.com/guardianproject/Gibberbot/tree/0.0.11-RC3&lt;/a&gt;. From here, the only changes to v11 we will be making will be critical bug fixes. We are now focused on our v12 release, which you can track here: &lt;a href=&#34;https://dev.guardianproject.info/versions/39&#34;&gt;https://dev.guardianproject.info/versions/39&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_&lt;strong&gt;Please promote our new Gibberbot how-to interactive tutorial available here: &lt;a href=&#34;https://guardianproject.info/howto/chatsecurely/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://guardianproject.info/howto/chatsecurely/&#34;&gt;https://guardianproject.info/howto/chatsecurely/&lt;/a&gt;&lt;/a&gt;&lt;/strong&gt;_&lt;/p&gt;

&lt;p&gt;If you have been tracking our efforts here for the last few years, you will know that Gibberbot, our secure instant messaging app, started out as a big old mess of an app called “ORChat” as and then “OTRChat” and then “Gibber” (or “Jibber”?), and then finally settled down into the name and app it is known as now. Really it was a proof of concept, showing that you could indeed use the &lt;a href=&#34;https://github.com/gpolitis/otr4j&#34;&gt;OTR4J library&lt;/a&gt; built for desktops app, on Android.&lt;/p&gt;

&lt;p&gt;Gibberbot was the first Android app, and perhaps real mobile app, that supported end-to-end encrypted chat using open standards like OTR and XMPP. In the early days, we were just so excited this was possible, and that we could also send the chat connections over Tor, that we didn’t think too much about how easy or fun it was to use the app itself. We were focused on our magic tricks, and not how it was to live and use the app on a daily basis.&lt;/p&gt;

&lt;p&gt;A few months ago, we realized that on Google Play, we had a lot of reviews that basically said “This is a great idea, but it doesn’t work for me”, or “I like these guys, but the app is kinda buggy”, and even “This app gives my device crazy flash seizures”. All of these reviews were true, and we swallowed the hard medicine, that if we didn’t spend more time focusing on how the core features of being a mobile instant messaging chat client worked, that nobody would care about how secure the app was, because there would be no one using it.&lt;/p&gt;

&lt;p&gt;We set about then not only continuing our focus on improving the core security and technical core of Gibberbot, but also focusing on a user interface update. We completed “stage 1” of that update, with another major round of effort planned for v12.&lt;/p&gt;

&lt;p&gt;Here a few new features and improvements along those lines, that were completed for v11:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;line-height: 13px;&#34;&gt;&lt;span style=&#34;line-height: 13px;&#34;&gt;&lt;strong&gt;Simplify setup of Google Gmail and Google Domain accounts…. DONE!&lt;/strong&gt; We now support the built-in authentication system on your Android phone, so if you phone is already setup with a Google account, we can tap right into that. No extra password entry needed, no need to enter anthing really. Just choose “Google Account” from the account type list.&lt;/span&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Streamline Orbot integration to make Tor user easier… DONE! &lt;/strong&gt;Using the new &lt;a href=&#34;https://guardianproject.github.io/info/code/onionkit&#34;&gt;OnionKit library&lt;/a&gt;, Gibberbot can now tell if Orbot is installed and running, and if not, prompt the user to either install it, or ask if they want to start up and connect to the Tor network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make it easy for services using SSL certs not signed by the Root CA cartel to be easily verified and accepted by the user… DONE!&lt;/strong&gt; Increasingly, it has become less and less valuable to have the TLS or SSL certificate you use with your website or XMPP server to be signed by a Root Certificate Authority, because as many point out, the SSL is broken, as long as trust this strange collection of hundreds of organizations we have no reason to really trust. Previously, Gibberbot would not handle non-Root CA certs very well, so you would just have to turn off verification. Now thanks to the concept of TOFU-POP (Trust on First Use, Persistence of Psuedonym) and the excellent &lt;a href=&#34;https://github.com/ge0rg/MemorizingTrustManager/wiki&#34;&gt;MemorizingTrustManager&lt;/a&gt; library, user’s can now decided in an on-demand and interactive manner, whether or not they want to trust the TLS connection they are using. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ensure Gibberbot only runs and signs in when the user wants it to… DONE! &lt;/strong&gt;Previously, Gibberbot was a bit too aggresive about trying to stay connecting to your account, and starting up on device boot. Many users want to conserve battery, and some do not like apps that run without them asking them to first (imagine that?!). We have put Gibberbot now at the user’s beck and call, such that there are preferences to control starting on boot, and when you SIGN OUT, it really means do not every login again, until I login.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improve the user interface to make app that is clean, fast, modern and customizable… DONE! &lt;/strong&gt;Not only have we continued to focus on a clean, simple user interface that uses the latest interface conventions and guidelines from Google, we also wanted to start adding some fun user personalization options. One size does not fit all, and just because our app is secure, does not mean it has to be boring. As you can see below, Gibberbot now supports light and dark themes, as well as user configured app wallpaper.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am happy to say, that will all of these improvements, we are much happier users, and are receiving much better reviews on Google Play, such as:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Easy to set up and pretty stable and easy to use.” “Fixed on jelly bean and does exactly what it should do” and the best… “Perfect (but no ICQ Support*)” &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em id=&#34;__mceDel&#34;&gt;*We may add ICQ support, just so we can be extra perfect for that one user who wants it! 🙂&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;All in all, we hope you agree, and that our new found focus on usability can push us from 100,000+ downloads to over 500,000+ in the coming months. We have big ideas for the future of secure mobile messaging, and making Gibberbot the best it can be is a huge part of that plan.&lt;/p&gt;

&lt;p&gt;As always you can find the Gibberbot download (and &lt;a href=&#34;https://guardianproject.github.io/info/apps&#34;&gt;all of our apps&lt;/a&gt;) in a variety of places:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;line-height: 13px;&#34;&gt;Through our direct APK download: &lt;a href=&#34;https://guardianproject.info/releases/gibberbot-latest.apk&#34;&gt;https://guardianproject.info/releases/gibberbot-latest.apk&lt;/a&gt; (and &lt;a href=&#34;https://guardianproject.info/releases/gibberbot-latest.apk.asc&#34;&gt;gpg sig&lt;/a&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;on &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.otr.app.im&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;or through our &lt;a href=&#34;https://guardianproject.info/2012/03/15/our-new-f-droid-app-repository/&#34;&gt;F-Droid Repo&lt;/a&gt;, which you can &lt;a href=&#34;https://guardianproject.info/2012/03/15/our-new-f-droid-app-repository/&#34;&gt;learn how to use here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also scan this QR code, which links to the direct APK download above:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/03/gibberbotqr.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-3373&#34; alt=&#34;gibberbotqr&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/03/gibberbotqr.png&#34; width=&#34;123&#34; height=&#34;123&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone&#34; alt=&#34;&#34; src=&#34;https://lh4.ggpht.com/TAtK2o9v79g1dVsAuii2XWQcdN1JdZgnRPAT0inGrQjDKkPLO_zLWLHlGdm6xxki6w&#34; width=&#34;288&#34; height=&#34;512&#34; /&gt;  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-021839.jpg&#34;&gt;&lt;img alt=&#34;device-2013-02-20-021839&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-021839.jpg&#34; width=&#34;288&#34; height=&#34;512&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone&#34; alt=&#34;&#34; src=&#34;https://lh4.ggpht.com/ShD1S-pNv-1nUdK4e4C4d-GBNz4A1Vr7bS6_-uYMm2zjOZ2T88HL_Iogsn71ePBVmTWk&#34; width=&#34;288&#34; height=&#34;512&#34; /&gt;   &lt;img class=&#34;alignnone&#34; alt=&#34;&#34; src=&#34;https://lh4.ggpht.com/cLhiajC5VIk8SZ4iDq08PKAmhiZQMze62avh0h2JNArZFRHKR4LJgWdS0tfALe1uFeHg&#34; width=&#34;288&#34; height=&#34;512&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-025148.png&#34;&gt;&lt;img class=&#34;alignnone  wp-image-3375&#34; alt=&#34;device-2013-02-20-025148&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-025148.png&#34; width=&#34;538&#34; height=&#34;302&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-025148.png 1280w, https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-025148-300x168.png 300w, https://guardianproject.info/wp-content/uploads/2013/03/device-2013-02-20-025148-1024x576.png 1024w&#34; sizes=&#34;(max-width: 538px) 100vw, 538px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mumble and the Bandwidth – Anonymous CB radio with Mumble and Tor</title>
      <link>https://guardianproject.github.io/info/2013/01/31/mumble-and-the-bandwidth-anonymous-cb-radio-with-mumble-and-tor/</link>
      <pubDate>Thu, 31 Jan 2013 02:05:50 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/01/31/mumble-and-the-bandwidth-anonymous-cb-radio-with-mumble-and-tor/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/01/mumble-and-the-bandwidth.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-3186&#34; alt=&#34;mumble and the bandwidth&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/01/mumble-and-the-bandwidth.jpg&#34; width=&#34;800&#34; height=&#34;478&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/01/mumble-and-the-bandwidth.jpg 800w, https://guardianproject.info/wp-content/uploads/2013/01/mumble-and-the-bandwidth-300x179.jpg 300w&#34; sizes=&#34;(max-width: 800px) 100vw, 800px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The journey towards anonymous and secure voice communication is a long one. There’s lots of roadblocks to get your voice from point A to point B over the Internet if you need to prevent eavesdropping or censorship. There is the limited bandwidth of mobile data connections. There is the high latency of the TCP protocol. &lt;a href=&#34;https://www.torproject.org/about/overview.html.en#whyweneedtor&#34;&gt;To achieve anonymity via Tor&lt;/a&gt;, there’s even more latency added to each packet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mumble.sourceforge.net/&#34;&gt;Mumble&lt;/a&gt; is a non-standard protocol that was originally designed for realtime voice chat for video games. If you’ve ever played Halo or World of Warcraft, this should sound familiar. If not, think of it as a conference call you don’t have to ring. You simply connect to a Mumble server over the Internet and your voice will transmit to everyone else.&lt;/p&gt;

&lt;p&gt;Mumble clients are available for &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.morlunk.mumbleclient&amp;amp;feature=nav_result#?t=W251bGwsMSwxLDMsImNvbS5tb3JsdW5rLm11bWJsZWNsaWVudCJd&#34;&gt;Android&lt;/a&gt; and &lt;a href=&#34;https://itunes.apple.com/us/app/mumble/id443472808?ls=1&amp;amp;mt=8&#34;&gt;iOS&lt;/a&gt;, as well as a cross-platform desktop client. The server software is also cross-platform. Guardian Project is focusing on the Android client named &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.morlunk.mumbleclient&amp;amp;feature=nav_result#?t=W251bGwsMSwxLDMsImNvbS5tb3JsdW5rLm11bWJsZWNsaWVudCJd&#34;&gt;Plumble&lt;/a&gt; and the official server &lt;a href=&#34;https://packages.debian.org/search?keywords=mumble&amp;amp;searchon=names&amp;amp;section=all&amp;amp;suite=squeeze-backports&#34;&gt;backported to Debian stable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A cool feature of Mumble is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Push-to-talk&#34;&gt;Push To Talk&lt;/a&gt; (PTT) method to speak to the channel. Your voice is only transmitted when you press the PTT button in the user interface. Another lower level feature that’s important for our anonymity goal is TCP support. For any application to run over Tor, it must use the TCP protocol. This rules out most VoIP clients, since they use UDP. Here is a case where Mumble’s non-standard protocol works to our advantage.&lt;/p&gt;

&lt;p&gt;When Tor is running and your Mumble client is configured to use TCP, connecting to your local SOCKS5 proxy offered by Tor allows you to join a Mumble server anonymously. The big problem is as suspected, latency. The traffic passing through the Tor network must make &lt;a href=&#34;https://www.torproject.org/about/overview.html.en#thesolution&#34;&gt;an indeterminate number of proxy hops&lt;/a&gt; to be anonymized successfully. Each hop adds more and more latency. This makes a typical syncronous voice call impossible since there’s no way to determine when one person has stopped talking and when the other can respond without interrupting.&lt;/p&gt;

&lt;p&gt;Latency in human speech transmision has deep psychological impact on a conversation. A &lt;a href=&#34;https://sites.google.com/site/qurihara/top-english/speechjammer&#34;&gt;Japanese research project called SpeechJammer&lt;/a&gt; exploited this part of our senses by inventing a “shut up gun.” When pointed at a person it makes them immediately stop talking. Everyone who has used a cell phone knows the frustration of “echo” where you hear your own voice, slightly delayed. The delay is caused by the network latency of the cellular carrier.&lt;/p&gt;

&lt;p&gt;Another similar example is a &lt;a href=&#34;https://en.wikipedia.org/wiki/Voip&#34;&gt;VoIP&lt;/a&gt; call on a congested network. The side effect of the latency is that one person accidently interrupts the other person because he thinks the other person has finished talking, when in reality the other person’s voice hasn’t yet arrived at the other end. Interruption ensues, no one is happy nor do they know anything new since the transmission was not understood. High latency makes &lt;a href=&#34;https://en.wikipedia.org/wiki/Full-duplex#Full-duplex&#34;&gt;full-duplex communication ineffective&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The contemporary telephone you are acustomed to allows both sides to talk and listen simultaneously. This is called full-duplex. Early radio telephones like walkie talkies, CB radio or aviation radio are half-duplex systems, meaning that for any given transmission, only one side can talk while the other side listens. Running Mumble over Tor takes a full-duplex technology and effectively reduces it to half-duplex. Even though the protocol is full-duplex, when run through a high latency network like Tor, the transmit and receive channels are so far out of sync there is no point in allowng both sides to talk at once. Again, interruption ensues.&lt;/p&gt;

&lt;p&gt;Then it hit me. Radio telephones have been around since the turn of the 20th century, when people figured out a reasonable way to do voice chat without the technology causing accidental interruptions in the conversation. In particular, the use of procedure words, or &lt;a href=&#34;https://en.wikipedia.org/wiki/Procedure_word&#34;&gt;prowords&lt;/a&gt;, are essential for one speaker to acknowledge the transmission of the other (Roger), to signify that one party is finished speaking (Over), or indicate when one party has left the conversation (Out).&lt;/p&gt;

&lt;p&gt;Here in the USA, some prowords evolved into a coloquial language, complete with &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_CB_slang&#34;&gt;slang&lt;/a&gt; thanks to the Citizen Band radio boom of the 1960s and the truck driving culture that used it to communicate while on the road. The 1977 film &lt;a href=&#34;http://www.imdb.com/title/tt0076729/?ref_=sr_1&#34;&gt;Smokey and the Bandit&lt;/a&gt; is more than just a touching love story with world class actors, it is an amazing dramatization of an information culture that resembled pre-Internet &lt;a href=&#34;https://en.wikipedia.org/wiki/Bulletin_board_system&#34;&gt;BBS systems&lt;/a&gt; and current day &lt;a href=&#34;https://en.wikipedia.org/wiki/IRC&#34;&gt;Internet Relay Chat (IRC)&lt;/a&gt; networks around the globe. The truck drivers portrayed in that movie have a mobile, decentralized information sharing network that is anonymous. The users have pseudonyms and a language of their own. Many of them have never met their CB radio friends IRL. They are invisible companions on the lonely road of the US of A.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Old ideas are worth bringing back if they have strong roots. CB and general purpose radio telephones have a long history, unlike the standard the standard of tody, VoIP. Perhaps these features are thought of as obsolete or not cutting-edge enough to model into a digital system. Regardless of the reason, if you are looking for a mobile and open source PTT solution to use on the Internet with anonymity and security, Mumble over Tor is currently the state of the art. All you have to do is throw in some prowords to keep the conversation flowing.&lt;/p&gt;

&lt;p&gt;The Guardian Project is operating a private Mumble server during a testing phase, and we have plans to open this to the public as part of the &lt;a href=&#34;https://guardianproject.info/wiki/OSTN&#34;&gt;OSTN research effort&lt;/a&gt;. When that happens, I will post application-specific tutorials to install and configure the Plumble client. I will also publish a cookbook to build a Mumble server.&lt;/p&gt;

&lt;p&gt;Finally, an example transmission log with some prowords:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Internet&lt;/em&gt;: Guardian Project. I have a ping response from your server, over.&lt;br /&gt;
&lt;em&gt;GP&lt;/em&gt;: Roger Internet. Ping was sent, over.&lt;br /&gt;
&lt;em&gt;Internet&lt;/em&gt;: Guardian Project. Build anonymous PTT system with open source software, over.&lt;br /&gt;
&lt;em&gt;GP&lt;/em&gt;: Internet, build anonymous PTT system with open source software, wilco. Out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proposal for Secure Connection Notification on Android</title>
      <link>https://guardianproject.github.io/info/2012/11/15/proposal-for-secure-connection-notification-on-android/</link>
      <pubDate>Thu, 15 Nov 2012 10:07:49 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/11/15/proposal-for-secure-connection-notification-on-android/</guid>
      <description>&lt;p&gt;A major problem of mobile applications being increasingly used over web-based applications, is that there is no standard established for notifying the user of the state of security on the network connection. With a web browser, the evolution of the “lock” icon when an &lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP_Secure&#34;&gt;HTTPS connection&lt;/a&gt; is made, has been one that evolved originally out of Netscape’s first implementation, to an adhoc, defact industry-standard way of letting the user know if their connection is secure. Beyond just a binary on/off, the lock icon is also the entry point into viewing more information about the digital security tokens, keys and certificates that are powering the connection – who authorized them, who requested them, and so on. More recently, with browsers such as Chrome, there has been the user of color schemes (Green is good, Red is bad), verified domain display and other indicators to help ensure the user knows when to trust their connection, and when to be wary.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/11/Firefox_3_rc1_Extended_Validation_SSL_address_bar_and_certificate_detail.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-2952&#34; title=&#34;Firefox_3_rc1_Extended_Validation_SSL_address_bar_and_certificate_detail&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/11/Firefox_3_rc1_Extended_Validation_SSL_address_bar_and_certificate_detail-300x182.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;182&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/11/Firefox_3_rc1_Extended_Validation_SSL_address_bar_and_certificate_detail-300x182.png 300w, https://guardianproject.info/wp-content/uploads/2012/11/Firefox_3_rc1_Extended_Validation_SSL_address_bar_and_certificate_detail.png 429w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;br /&gt;
&lt;/a&gt; &lt;em&gt;Firefox’s HTTPS certificate display&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While many people claim that HTTPS/TLS/SSL are fundamentally broken, they are still an essential piece of basic frontline security on the web. In addition, when making a connection through a proxy network like Tor or a free VPN service, utilizing TLS/SSL is critical in making sure you network is not being intercepted along the way. The notification icon and related certificate viewing, is a critical component for the user, and one that is entirely missing in the mobile application space. The Android API does not provide a standardized method to share this information with the user, and the implementation on iOS is unclear, as well. Even worse, the proper implementation of a strong HTTP/S connection that properly handles verification of certificates, and provides an interactive option for users to accept or decline is entirely missing for the majority of mobile apps.&lt;/p&gt;

&lt;p&gt;With that in mind, we have added a Secure Connection Notification feature into our new &lt;a href=&#34;https://github.com/guardianproject/OnionKit&#34;&gt;OnionKit for Android&lt;/a&gt; library. Build upon our previous work on &lt;a href=&#34;https://github.com/guardianproject/cacert&#34;&gt;implementing custom Root CA Certificate stores for Android&lt;/a&gt;, this library not only provides a clear way to enable HTTP and SOCKS proxying for your network requests (to enable use with our app, &lt;a href=&#34;https://guardianproject.info/apps/orbot/&#34;&gt;Orbot: Tor for Android&lt;/a&gt;), but it also includes a &lt;a href=&#34;https://github.com/guardianproject/OnionKit/blob/master/library/src/info/guardianproject/onionkit/trust/StrongTrustManager.java&#34;&gt;StrongTrustManager&lt;/a&gt; and a &lt;a href=&#34;https://github.com/guardianproject/OnionKit/blob/master/library/src/info/guardianproject/onionkit/trust/StrongHttpsClient.java&#34;&gt;StrongHTTPSClient&lt;/a&gt; implementation, that works to defend against man-in-the-middle attacks, and other means to intercept a TLS or SSL connection between a mobile app and a remote server. Part of the defense, is providing a clear indicator to the user when a secure connection is in use.&lt;/p&gt;

&lt;p&gt;We have provided a &lt;a href=&#34;https://github.com/guardianproject/OnionKit/blob/master/sample/src/sample/onionkit/OnionKitSampleActivity.java&#34;&gt;sample Android app&lt;/a&gt; to demonstrate how simple it is to enable this capability. The screenshots below are from that app.&lt;/p&gt;

&lt;p&gt;In this first screenshot, the app has connected to &lt;a href=&#34;https://check.torproject.org&#34;&gt;https://check.torproject.org&lt;/a&gt; and you can see in the Notification bar a “key” icon indicating there is a secure connection active.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/11/noTor.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-2947 alignnone&#34; title=&#34;noTor&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/11/noTor-254x300.png&#34; alt=&#34;&#34; width=&#34;254&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/11/noTor-254x300.png 254w, https://guardianproject.info/wp-content/uploads/2012/11/noTor.png 800w&#34; sizes=&#34;(max-width: 254px) 100vw, 254px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you drag the notification bar down, you can see a more complete view of the Secure Connection Notification (SCN) message, which indicates the connection is Active and shows a summary of the secure certificate information. In a recent update to the OnionKit SCN code, it also allows for the application to include its name and icon in this notification.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-204130.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-2948&#34; title=&#34;device-2012-11-08-204130&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-204130-300x139.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;139&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-204130-300x139.png 300w, https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-204130.png 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, you can tap on the SCN notification and bring up a larger pop-over view of the certificate information. We intend to develop this view further, to allow for better manual management of trust – meaning you may have the option to accept/decline or disable trust of this certificate or the certificate authority that provides it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-203216.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-2949&#34; title=&#34;device-2012-11-08-203216&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-203216-300x222.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;222&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-203216-300x222.png 300w, https://guardianproject.info/wp-content/uploads/2012/11/device-2012-11-08-203216.png 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beyond “Active” messages, the notification system will also warn or block connections that are deemed risky, invalid or otherwise unverifiable. You can use OnionKit in concert with the &lt;a href=&#34;https://github.com/ge0rg/MemorizingTrustManager&#34;&gt;MemorizingTrustManager&lt;/a&gt; to manually override this verification process, if your application is expected to often connect to servers with unverifiable certificates. Finally, using our &lt;a href=&#34;https://github.com/guardianproject/cacert&#34;&gt;CACert project&lt;/a&gt;, you can generate custom Root CA stores for use with OnionKit, that utilize your own certificate authorities, or a custom rolled set.&lt;/p&gt;

&lt;p&gt;Our goal is not to overwhelm the user, but instead to provide them a simple notification so they can understand which applications have their best interests in mind, and which do not. It is amazing how many popular mobile apps transmit personal information using HTTP completely in plain text, in the clear, allowing any number of parties along the network path between the device and server to passively vacuum up this data. Users generally are not aware or do not care about this issue. It is up to the mobile application developer, to adopt an approach like our Secure Connection Notification, or to directly utilize our OnionKit library itself.&lt;/p&gt;

&lt;p&gt;Finally, we would like to see Android and other mobile operating systems, adopt a system such as this device-wide, such that it becomes as standard as the desktop web browser HTTPS lock.&lt;/p&gt;

&lt;p&gt;If you are a developer, please check out OnionKit for Android today, and let us know what you think: &lt;a href=&#34;https://github.com/guardianproject/OnionKit/&#34;&gt;https://github.com/guardianproject/OnionKit/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ToFU/PoP in your Android App!  (a.k.a. extending Orlib to communicate over Tor)</title>
      <link>https://guardianproject.github.io/info/2012/09/20/tofu/pop-in-your-android-app-a.k.a.-extending-orlib-to-communicate-over-tor/</link>
      <pubDate>Thu, 20 Sep 2012 15:17:36 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/09/20/tofu/pop-in-your-android-app-a.k.a.-extending-orlib-to-communicate-over-tor/</guid>
      <description>

&lt;p&gt;In doing my research for InformaCam, I learned a couple of neat tricks for getting an app to communicate over Tor. Here’s a how-to for app developers to use depending on your threat model, and how you have your web server set-up. Enjoy, and please post your comments/questions/suggestions below…&lt;/p&gt;

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before we begin…&lt;/h2&gt;

&lt;p&gt;You’re going to need some basic stuff up-and-running for this to work. Before you get coding, make sure you have the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your Android device should have:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Orbot downloaded and running&lt;/li&gt;
&lt;li&gt;An encrypted data store to save keys, certificates, and addresses to, such as Guardian Project’s &lt;a href=&#34;https://github.com/guardianproject/sqlcipher-android&#34; target=&#34;_blank&#34;&gt;SQLCipher&lt;/a&gt; or &lt;a href=&#34;https://github.com/guardianproject/IOCipher&#34; target=&#34;_blank&#34;&gt;IOCipher&lt;/a&gt;. (SQLCipher is a database; if you want to have records for each hidden service such as “Onion Address,” “Certificate,” “Display Name,” etc. this is the model you can use. IOCipher is used like an encrypted java.io.File partition; you could easily store certificates in a java keystore with a .jks extension, and save a text file with a list of onion addresses. However you manage your backend is up to you.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Your server should have:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A lightweight web server. According to the Tor documentation, smaller servers like LightTPD are preferred over Apache since there’s less of an opportunity to accidentally reveal your IP address in error logs or publicly-accessible config files.&lt;/li&gt;
&lt;li&gt;Tor set up and running a hidden service&lt;/li&gt;
&lt;li&gt;Your own self-signed SSL certificate for your server. (Directions can be found &lt;a href=&#34;http://www.digicert.com/ssl-certificate-installation-lighttpd.htm&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;For extra credit,&lt;/em&gt; you can set yourself up your own certificate authority. This can be used to sign client authentication keys (how you distribute them to users is also up to you) and directions to do this can be found &lt;a href=&#34;http://it.toolbox.com/blogs/securitymonkey/howto-securing-a-website-with-client-ssl-certificates-11500&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ok-let-s-get-coding&#34;&gt;Ok, let’s get coding!&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use case: I don’t actually need Tor support, but I do want to add my custom SSL certificate to the app’s trust chain.&lt;/strong&gt;&lt;/p&gt;
What you need to do this is to create a custom Trust Manager, and use it when you instantiate your SSL connection.&lt;/p&gt;

&lt;p&gt;In this example, the trust manager loads (or creates, if it’s the first time use) your encrypted keystore. When your app makes a request to your web server, the Trust Manager will first check to see if the host name is in your “white list” (either in your SQLite database or in the encrypted flat file you created.) If that checks out, the Trust Manager will add the X509 certificate to your encrypted keystore (if it doesn’t exist there already.) I’ve omitted the part of the code where you load up your keystore, and where you save any changes to it; you can do that on your own, depending on how you have it set up.&lt;/p&gt;

&lt;p&gt;The following code I cribbed heavily from &lt;a href=&#34;https://github.com/ge0rg/MemorizingTrustManager&#34; target=&#34;_blank&#34;&gt;ge0rg’s memorizing trust manager&lt;/a&gt;. Please have a look at that, too, and thank the guy for his great work!&lt;/p&gt;

&lt;p&gt;&lt;pre style=&#34;font-size:0.8em;&#34;&gt;public class MyTrustManager implements X509TrustManager {
private KeyStore keyStore;
private X509TrustManager defaultTrustManager;
private X509TrustManager appTrustManager;&lt;/p&gt;

&lt;p&gt;byte[] keyStored = null;
String pwd;&lt;/p&gt;

&lt;p&gt;public MyTrustManager() {
    loadKeyStore();&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;defaultTrustManager = getTrustManager(false);
appTrustManager = getTrustManager(true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;private X509TrustManager getTrustManager(boolean withKeystore) {
    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance(&amp;ldquo;X509&amp;rdquo;);
        if(withKeystore)
            tmf.init(keyStore);
        else
            tmf.init((KeyStore) null);
        for(TrustManager t : tmf.getTrustManagers())
            if(t instanceof X509TrustManager)
                return (X509TrustManager) t;
    } catch (KeyStoreException e) {
        Log.e(LOG, &amp;ldquo;key store exception: &amp;ldquo; + e.toString());
    } catch (NoSuchAlgorithmException e) {
        Log.e(LOG, &amp;ldquo;no such algo exception: &amp;ldquo; + e.toString());
    }
    return null;
}&lt;/p&gt;

&lt;p&gt;private void loadKeyStore() {
    //TODO: this is where you load up your keystore and store the bytes into the keyStored field if neccessary.
    try {
        keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
    } catch(KeyStoreException e) {
        Log.e(LOG, &amp;ldquo;key store exception: &amp;ldquo; + e.toString());
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try {
    keyStore.load(null, null);
    if(keyStored != null)
        keyStore.load(new ByteArrayInputStream(keyStored), pwd.toCharArray());


} catch(CertificateException e) {
    Log.e(LOG, &amp;quot;certificate exception: &amp;quot; + e.toString());
} catch (NoSuchAlgorithmException e) {
    Log.e(LOG, &amp;quot;no such algo exception: &amp;quot; + e.toString());
} catch (IOException e) {
    Log.e(LOG, &amp;quot;IOException: &amp;quot; + e.toString());
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;private void storeCertificate(X509Certificate[] chain) {
    try {
        for(X509Certificate cert : chain) {
            keyStore.setCertificateEntry(cert.getSubjectDN().toString(), cert);
        }
    } catch(KeyStoreException e) {
        Log.e(LOG, &amp;ldquo;keystore exception: &amp;ldquo; + e.toString());
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;appTrustManager = getTrustManager(true);
try {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    keyStore.store(baos, pwd.toCharArray());
    updateKeyStore(baos.toByteArray());
    Log.d(LOG, &amp;quot;new key encountered!  length: &amp;quot; + baos.size());
} catch(KeyStoreException e) {
    Log.e(LOG, &amp;quot;keystore exception: &amp;quot; + e.toString());  
} catch (NoSuchAlgorithmException e) {
    Log.e(LOG, &amp;quot;no such algo exception: &amp;quot; + e.toString());
} catch (IOException e) {
    Log.e(LOG, &amp;quot;IOException: &amp;quot; + e.toString());
} catch (CertificateException e) {
    Log.e(LOG, &amp;quot;Certificate Exception: &amp;quot; + e.toString());
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;private void updateKeyStore(byte[] newKey) {
    // TODO: this is where YOU update your own keystore if you need to (ie, if it&amp;rsquo;s in an SQLite database)
}&lt;/p&gt;

&lt;p&gt;private boolean isCertKnown(X509Certificate cert) {
    try {
        return keyStore.getCertificateAlias(cert) != null;
    } catch(KeyStoreException e) {
        return false;
    }
}&lt;/p&gt;

&lt;p&gt;private boolean isExpiredException(Throwable e) {
    do {
        if(e instanceof CertificateExpiredException)
            return true;
        e = e.getCause();
    } while(e != null);
    return false;
}&lt;/p&gt;

&lt;p&gt;private void checkCertificateTrusted(X509Certificate[] chain, String authType, boolean isServer) throws CertificateException {
    try {
        if(isServer)
            appTrustManager.checkServerTrusted(chain, authType);
        else
            appTrustManager.checkClientTrusted(chain, authType);
    } catch(CertificateException e) {
        if(isExpiredException(e))
            return;
        if(isCertKnown(chain[0]))
            return;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    try {
        if(isServer)
            defaultTrustManager.checkServerTrusted(chain, authType);
        else
            defaultTrustManager.checkClientTrusted(chain, authType);
    } catch(CertificateException ce) {
        storeCertificate(chain);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;@Override
public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
    checkCertificateTrusted(chain, authType, false);
}&lt;/p&gt;

&lt;p&gt;@Override
public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
    checkCertificateTrusted(chain, authType, true);
}&lt;/p&gt;

&lt;p&gt;@Override
public X509Certificate[] getAcceptedIssuers() {
    return defaultTrustManager.getAcceptedIssuers();
}&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;}
&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Next, you want to initiate an Https request to use this custom Trust Manager. As most of you Android programmers know, you have to do any network stuff on another, non-UI thread. I like to use Future/Callables because it returns the contents of the web site you access into a variable that I can parse. Here’s how you do that for a standard POST request:

&amp;lt;pre style=&amp;quot;font-size:0.8em;&amp;quot;&amp;gt;public static String executeHttpsPost(final String host, final Map&amp;lt;String, Object&amp;gt; postData, final String contentType) {
    ExecutorService ex = Executors.newFixedThreadPool(100);
    Future&amp;lt;String&amp;gt; future = ex.submit(new Callable&amp;lt;String&amp;gt;() {
        String result = &amp;quot;FAIL&amp;quot;;
        String HYPHENS = &amp;quot;--&amp;quot;;
        STRING LINE_END = &amp;quot;\r\n&amp;quot;;
        String BOUNDARY = &amp;quot;***7hisIsMyBoUND4rY***&amp;quot;;
        String hostname;

        URL url;
        HttpsURLConnection connection;
        HostnameVerifier hnv;
        DataOutputStream dos;
        SSLContext ssl;

        MyTrustManager itm;

        private void buildQuery() {
            Iterator&amp;lt;Entry&amp;lt;String, Object&amp;gt;&amp;gt; it = postData.entrySet().iterator();

            connection.setRequestProperty(&amp;quot;Content-Type&amp;quot;, &amp;quot;multipart/form-data; boundary=&amp;quot; + BOUNDARY);
            StringBuffer sb = new StringBuffer();
            try {
                dos = new DataOutputStream(connection.getOutputStream());
                sb = new StringBuffer();
                while(it.hasNext()) {
                    sb = new StringBuffer();
                    Entry&amp;lt;String, Object&amp;gt; e = it.next();

                    sb.append(HYPHENS + BOUNDARY + LINE_END);

                    sb.append(&amp;quot;Content-Disposition: form-data; name=\&amp;quot;&amp;quot; + e.getKey() + &amp;quot;\&amp;quot;&amp;quot; + LINE_END);
                    sb.append(&amp;quot;Content-Type: &amp;quot; + contentType + &amp;quot;; charset=UTF-8&amp;quot; + LINE_END );
                    sb.append(&amp;quot;Cache-Control: no-cache&amp;quot; + LINE_END + LINE_END);
                    sb.append(String.valueOf(e.getValue()) + LINE_END);
                    dos.writeBytes(sb.toString());
                }

                dos.writeBytes(HYPHENS + BOUNDARY + HYPHENS + LINE_END);

                dos.flush();
                dos.close();

            } catch (IOException e) {
                Log.e(LOG, e.toString());
                e.printStackTrace();
            }
        }

        @Override
        public String call() throws Exception {
            hostname = host.split(&amp;quot;/&amp;quot;)[0];
            url = new URL(&amp;quot;https://&amp;quot; + host);

            hnv = new HostnameVerifier() {
                @Override
                public boolean verify(String hn, SSLSession session) {
                    if(hn.equals(hostname))
                        return true;
                    else
                        return false;
                }
            };

            itm = new MyTrustManager();

            ssl = SSLContext.getInstance(&amp;quot;TLS&amp;quot;);
            ssl.init(null, new TrustManager[] {itm}, new SecureRandom());

            HttpsURLConnection.setDefaultSSLSocketFactory(ssl.getSocketFactory());
            HttpsURLConnection.setDefaultHostnameVerifier(hnv);

            connection = (HttpsURLConnection) url.openConnection();

            connection.setRequestMethod(&amp;quot;POST&amp;quot;);
            connection.setRequestProperty(&amp;quot;Connection&amp;quot;, &amp;quot;Keep-Alive&amp;quot;);
            connection.setUseCaches(false);
            connection.setDoInput(true);
            connection.setDoOutput(true);

            buildQuery();

            try {
                InputStream is = connection.getInputStream();
                BufferedReader br = new BufferedReader(new InputStreamReader(is));
                String line;
                StringBuffer sb = new StringBuffer();
                while((line = br.readLine()) != null)
                    sb.append(line);
                br.close();
                connection.disconnect();
                result = sb.toString();
            } catch(NullPointerException e) {
                Log.e(LOG, e.toString());
                e.printStackTrace();
            }
            return result;
        }

    });

    try {
        return future.get();
    } catch (InterruptedException e) {
        Log.e(LOG, e.toString());
        e.printStackTrace();
        return null;
    } catch (ExecutionException e) {
        Log.e(LOG, e.toString());
        e.printStackTrace();
        return null;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use case: I have a web server set up with a hidden service running. How can my app access the web site?&lt;/strong&gt;&lt;/p&gt;
Simple! Just make some minor modifications to your SSLContext by adding a proxy! Take the executeHttpsPost method above, and add the following &lt;em&gt;after&lt;/em&gt; the line “HttpsURLConnection.setDefaultHostnameVerifier(hnv);”&lt;/p&gt;

&lt;pre style=&#34;font-size:0.8em;&#34;&gt;Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(&#34;localhost&#34;, 8118));
&lt;/pre&gt;
    

&lt;p&gt;Then, change your declaration of connection to:&lt;/p&gt;

&lt;pre style=&#34;font-size:0.8em;&#34;&gt;connection = (HttpsURLConnection) url.openConnection(proxy);
&lt;/pre&gt;
    

&lt;p&gt;So, as long as your device is also running Orbot (Tor) you can do the same POST over Tor! &lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use case: I have a web server that requires client authentification. How can I add a client certificate to the SSL context?&lt;/strong&gt;&lt;/p&gt;
To do this, you’re going to need to add a KeyManager to your SSLContext. As I stated before, getting your client auth key to your app users is up to you (bluetooth, NFC, sneakernet???) but once it’s in there, and visible to your app, install it by adding your own custom KeyManager. In my testing, I added this method below to the MyTrustManager class, simply because it already had access to my encrypted keystore. But you can ostensibly place this anywhere:&lt;/p&gt;

&lt;p&gt;&lt;pre style=&#34;font-size:0.8em;&#34;&gt;public X509KeyManager[] getKeyManagers(byte[] kBytes, String clientCertificatePassword, String keystorePassword) {
KeyManagerFactory kmf = null;
KeyManager[] km = null;
X509KeyManager[] xkm = null;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;try {
    kmf = KeyManagerFactory.getInstance(&amp;ldquo;X509&amp;rdquo;);&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;KeyStore xks = KeyStore.getInstance(&amp;quot;PKCS12&amp;quot;);

ByteArrayInputStream bais = new ByteArrayInputStream(kBytes);
xks.load(bais, keystorePassword.toCharArray());

kmf.init(xks, clientCertificatePassword.toCharArray());
km = kmf.getKeyManagers();
xkm = new X509KeyManager[km.length];

for(int x=0;x&amp;gt;km.length;x++) {
    X509KeyManager k = (X509KeyManager) km[x];
    xkm[x] = k;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;} catch (NoSuchAlgorithmException e) {
    Log.e(LOG, e.toString());
    e.printStackTrace();
} catch (UnrecoverableKeyException e) {
    Log.e(LOG, e.toString());
    e.printStackTrace();
} catch (KeyStoreException e) {
    Log.e(LOG, e.toString());
    e.printStackTrace();
} catch (IOException e) {
    Log.e(LOG, e.toString());
    e.printStackTrace();
} catch (CertificateException e) {
    Log.e(LOG, e.toString());
    e.printStackTrace();
}
return xkm;
}
&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Finally, when you instantiate your SSLContext for your POST request, include the returned value of the getKeyManager method as the KeyManager parameter. So, replace this line:

&amp;lt;pre style=&amp;quot;font-size:0.8em;&amp;quot;&amp;gt;ssl.init(null, new TrustManager[] {itm}, new SecureRandom());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;with this:

&amp;lt;pre style=&amp;quot;font-size:0.8em;&amp;quot;&amp;gt;X509KeyManager[] x509KeyManager = getKeyManager(kBytes, clientCertificatePassword, keystorePassword);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssl.init(x509KeyManager, new TrustManager[] {itm}, new SecureRandom());
&lt;/pre&gt;&lt;/ol&gt;&lt;/p&gt;

&lt;p&gt;That’s it! Good luck hacking, hackers…&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Call My Email</title>
      <link>https://guardianproject.github.io/info/2012/03/22/call-my-email/</link>
      <pubDate>Thu, 22 Mar 2012 16:31:45 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/03/22/call-my-email/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:PFC_Gladys_Bellon,_Basile,_Louisiana,_one_of_the_27_WAC_switchboard_operators_flown_from_Paris_for_the_Potsdam..._-_NARA_-_199010.jpg&#34;&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/PFC_Gladys_Bellon%2C_Basile%2C_Louisiana%2C_one_of_the_27_WAC_switchboard_operators_flown_from_Paris_for_the_Potsdam..._-_NARA_-_199010.jpg/764px-PFC_Gladys_Bellon%2C_Basile%2C_Louisiana%2C_one_of_the_27_WAC_switchboard_operators_flown_from_Paris_for_the_Potsdam..._-_NARA_-_199010.jpg&#34; alt=&#34;PFC Gladys Bellon, Basile, Louisiana, one of the 27 WAC switchboard operators flown from Paris for the Potsdam Conference and Sgt. Robert Scott of Pittsburgh, Pennsylvania, test lines in the frame room of the Victory switchboard at U. S. headquarters at Babelsburg, Germany.&#34; width=&#34;600/&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What if you could call me directly through my email? No exchanging of phone numbers or searching for handles on Skype. Just plain and simple email. Now what if we can make that phone call as secure as it is easy. That’s the goal of what we’re doing here at &lt;a title=&#34;Open Secure Telephony Network (OSTN) &#34; href=&#34;https://guardianproject.info/wiki/OSTN&#34; target=&#34;_blank&#34;&gt;Open Secure Telephony Network (OSTN)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The internet is already structured to be able to do this. That’s why I can have all of my emails point to one email box if I want to. Simply by changing the MX records. So why not be able to do that with phone numbers, routing them through my same email by changing the SIP records?&lt;/p&gt;

&lt;p&gt;Guardian Project is in the process of figuring out how to make your life better by doing just that. We’re currently in the early stages of research on how to make a stack for secure telephony standards so that anybody can participate, whether a novice user who wants easy access or a power user who wants to run their own stack.&lt;/p&gt;

&lt;p&gt;Email already handles configurable standards well for text. As a user, I can choose my service (Gmail, Hotmail, &lt;a title=&#34;rise up&#34; href=&#34;https://riseup.net/&#34; target=&#34;_blank&#34;&gt;RiseUp&lt;/a&gt;, self-hosting, etc) and the client (Outlook, &lt;a title=&#34;thunderbird&#34; href=&#34;https://www.mozilla.org/thunderbird/&#34; target=&#34;_blank&#34;&gt;Thunderbird&lt;/a&gt;, Mail, etc) on whatever platform works best for me (Windows, MacOS, Android, etc) and have my custom email (&amp;#x6d;a&amp;#x72;k&amp;#x40;&amp;#x66;u&amp;#x6e;k&amp;#x79;&amp;#x6d;o&amp;#x6e;k&amp;#x65;&amp;#x79;.&amp;#x6e;e&amp;#x74;, &amp;#x6a;&amp;#x65;&amp;#x64;&amp;#x69;&amp;#x38;&amp;#x33;&amp;#x40;&amp;#x72;&amp;#x65;&amp;#x62;&amp;#x65;&amp;#x6c;&amp;#x61;&amp;#x6c;liance.org, etc) point to whichever of these systems I trust the most and works best for me.&lt;/p&gt;

&lt;p&gt;We’re now bringing that ease and customization to voice communication. As a user, I’ll be able to choose my service. We’re currently alpha testing a service we built, &lt;a title=&#34;Ostel.me&#34; href=&#34;http://Ostel.me&#34; target=&#34;_blank&#34;&gt;Ostel.me&lt;/a&gt;, but there are others like &lt;a title=&#34;tanstagi&#34; href=&#34;https://tanstagi.net/&#34; target=&#34;_blank&#34;&gt;Tanstagi&lt;/a&gt;, &lt;a title=&#34;intimi.ca&#34; href=&#34;https://intimi.ca&#34; target=&#34;_blank&#34;&gt;Intimi.ca&lt;/a&gt;. Our open protocol will make it easy for companies to host their own internal server for communication. Whatever platform works best for you (Windows, MacOS, Android, etc) has a tool that lets you make phone calls with the service. We’re working directly with open source tools like &lt;a title=&#34;CSipSimple&#34; href=&#34;https://guardianproject.info/wiki/CSipSimple&#34; target=&#34;_blank&#34;&gt;CSipSimple&lt;/a&gt; on Android and Telephone on MacOS to improve them for best and most secure call quality. We’re also making it easy for people using other tools like &lt;a title=&#34;Groundwire&#34; href=&#34;https://guardianproject.info/wiki/Groundwire&#34; target=&#34;_blank&#34;&gt;Groundwire&lt;/a&gt; on the iPhone to make calls using these tools.&lt;/p&gt;

&lt;p&gt;Our goal is to make a service that’s easier to use and more secure than &lt;a title=&#34;skype&#34; href=&#34;http://www.skype.com/&#34; target=&#34;_blank&#34;&gt;Skype&lt;/a&gt; while cheaper and more reliable than a standard phone. This is just the start, but we’re excited by the progress we’ve already made. If you’d like to help, we’re always looking for smart and passionate people who can be testers, designers, translators, and supporters. Before you can call our email for updates, you can send us a message on it telling us how you’d like to participate, sign up to be an alpha tester on &lt;a title=&#34;ostel website&#34; href=&#34;https://ostel.me/&#34; target=&#34;_blank&#34;&gt;Ostel.me&lt;/a&gt;, or follow us &lt;a title=&#34;guardian twitter&#34; href=&#34;https://twitter.com/#!/guardianproject&#34; target=&#34;_blank&#34;&gt;on Twitter&lt;/a&gt;. Thanks for tuning in!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VoIP Survey Results of NGOs, Human Rights Groups and Activists</title>
      <link>https://guardianproject.github.io/info/2012/03/07/voip-survey-results-of-ngos-human-rights-groups-and-activists/</link>
      <pubDate>Wed, 07 Mar 2012 18:58:29 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/03/07/voip-survey-results-of-ngos-human-rights-groups-and-activists/</guid>
      <description>&lt;p&gt;In November 2011, 25 individuals were surveyed using an online form, representing typical end-users, global journalists, activist and human rights organization perspectives (Thank you to all the participants!). The goal of the survey was to establish a baseline understanding of the types of tools and expectations our target user community has around making “telephone calls” over the internet, otherwise known as Voice over Internet Protocol (VoIP).&lt;/p&gt;

&lt;p&gt;This survey is part of our work on the &lt;a href=&#34;https://guardianproject.info/wiki/OSTN&#34;&gt;Open Secure Telephony Net (OSTN)&lt;/a&gt;. In summary, we believe there is too great a reliance upon closed systems, proprietary protocols, and expensive commercial solutions, among the very people and groups who need a verifiable secure system based on free software. While using GPG for email, or OTR-encryption for chat have become somewhat standards go-tos for these groups, there has not been the same progress made on the secure voice front. OSTN aims to change that, but before we can, we need to understand where our target user community stand today.&lt;/p&gt;

&lt;p&gt;Below you will find the questions and results from our small survey. We don’t claim to be big data scientists, but this is our starting point.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/document/pubimage?id=12bEHuMBXDqw4CG2R8nn2PbDJTa4HU8lh-rZRR22nSQA&amp;image_id=1Kj2xqnnxxbJxOP2myEMoDgd7uV_Z7S4&#34; alt=&#34;&#34; width=&#34;584&#34; height=&#34;269&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As expected, it was Skype, Skype, Skype, with a little Google Talk and Cisco thrown in here and there. Everyone knows Skypes, it works very well, and is even quite good at getting around firewalls.&lt;/p&gt;

&lt;div&gt;
   The other in this survey was “Cisco”, which could either be a corporate or small business product. In some cases, these products are actually more standards compliant than something like Skype. One aspect of our research is to audit the compliance of existing commercial products with security standards such as TLS, SSL, SRTP and ZRTP.
&lt;/div&gt;

&lt;div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/document/pubimage?id=12bEHuMBXDqw4CG2R8nn2PbDJTa4HU8lh-rZRR22nSQA&amp;image_id=1pVfXla66rcmmbst2uvDF_i08-f9ANKw&#34; alt=&#34;&#34; width=&#34;585&#34; height=&#34;277&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It was interesting to see that Google Talk was a strong second to Skype. Other services like Facebook video calling or Apple Facetime are newer, and may not have had time for full adoption. Others included ippi.fr, a “free” SIP service that works with mobile phones. Not included in this list are Google+ Hangouts, which seem like a growing tool for group communications.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/document/pubimage?id=12bEHuMBXDqw4CG2R8nn2PbDJTa4HU8lh-rZRR22nSQA&amp;image_id=1neY0xPavF3sh91mvSelfIwzCMV21qJM&#34; alt=&#34;&#34; width=&#34;585&#34; height=&#34;479&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We hoped to understand how personal communications behavior might affect their use of VoIP systems in more professional settings. It seems like Skype again rules here.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/document/pubimage?id=12bEHuMBXDqw4CG2R8nn2PbDJTa4HU8lh-rZRR22nSQA&amp;image_id=1haSfmhdxc9zT7oghdyBQMFC8ZYv6m_Y&#34; alt=&#34;&#34; width=&#34;584&#34; height=&#34;475&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The most troubling issue is that most people likely utilize the same account for both personal and professional communication. Skype does not make it easy to switch accounts or have multiple accounts open at once, unlike email programs or instant messaging programs. You must have one identity. This creates a huge amount of opportunity for social engineering type attacks, though analysis of that was beyond the scope of this survey.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/document/pubimage?id=12bEHuMBXDqw4CG2R8nn2PbDJTa4HU8lh-rZRR22nSQA&amp;image_id=1S3EGlInCGdh8Pj7IOefWvfLI1Ikw4gs&#34; alt=&#34;&#34; width=&#34;559&#34; height=&#34;147&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We were glad to see that the majority of people surveyed were concerned about the privacy of their conversations, but it was a slim majority.&lt;/p&gt;

&lt;p&gt;The possibilities of the “no” group may be that they feel the solutions they are using (Skype) are secure enough, as they have been told that by the providers. In addition, many NGO groups who fear foreign or remote threats, often feel no sense of privacy risk when operating in their home country. They only consider security issues when they engage in field work, but have very lax practices on a day to day basis. That perception of threat is a outdated in the age of a fully connected global network, through which physical locations and borders matter little.&lt;/p&gt;

&lt;p&gt;In the end, the challenge is, as most everyone knows, to build a system that is as easy to use as Skype, but more secure. We realize that we are just a small open-source effort, and that ultimately we can’t compete with the likes of a Microsoft or even Google for that matter. Our goal is to help people and organizations who need to communicate sensitive information securely and safely, to have better options than they do now for both hosting their own servers and using simple client applications. Keep your eyes on the &lt;a href=&#34;https://guardianproject.info/wiki/OSTN&#34;&gt;OSTN Wiki&lt;/a&gt; and this blog, as we progress over the coming weeks and months.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
