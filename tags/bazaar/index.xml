<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bazaar on Guardian Project</title>
    <link>https://guardianproject.github.io/info/tags/bazaar/</link>
    <description>Recent content in Bazaar on Guardian Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 18 Dec 2017 05:43:34 -0400</lastBuildDate>
    
        <atom:link href="https://guardianproject.github.io/info/tags/bazaar/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a Signing Server</title>
      <link>https://guardianproject.github.io/info/2017/12/18/building-a-signing-server/</link>
      <pubDate>Mon, 18 Dec 2017 05:43:34 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/12/18/building-a-signing-server/</guid>
      <description>

&lt;p&gt;The Android APK signing model sets the expectation that the signing key will be the same for the entire lifetime of the app. That can be seen in the recommended lifetype of an Android signing key: &lt;a href=&#34;https://developer.android.com/studio/publish/app-signing.html#considerations&#34;&gt;20+ years&lt;/a&gt;. On top of that, it is difficult to &lt;a href=&#34;https://guardianproject.info/2015/12/29/how-to-migrate-your-android-apps-signing-key/&#34;&gt;migrate an app to a new key&lt;/a&gt;. Since the signing key is an essential part to preventing APKs from impersonating another, Android signing keys must be kept safe for the entire life of the app.&lt;/p&gt;

&lt;p&gt;The F-Droid repo signing keys follow a very similar model: the signing key is the essential way to safely identify an F-Droid repo. So the same considerations apply to F-Droid repo signing keys as to APK signing keys. This also provides some really useful benefits. Since the integrity of the repo index file and the APKs are guaranteed by the repo signature, the files can be delivered via whatever method is most convenient, and their integrity will be automatically verified by the F-Droid client app, the &lt;em&gt;f-droid.org&lt;/em&gt; deploy process, and Repomaker.&lt;/p&gt;

&lt;p&gt;This means the security burden is shifted from the online, public webserver to a private signing machine. Just keeping that machine out of the public eye goes a long way towards improving security. There are a number of additional measures that can be taken to further improve the security of the signing process. Here are some approaches, starting with the easiest and least security, and going on to more secure setups that require more work to setup and run. Signing is not an resource intensive process, so any machine will work, even a 10 year old, basic laptop. We recommend using a minimal &lt;a href=&#34;https://www.debian.org&#34;&gt;Debian&lt;/a&gt; install, and rebuilding the machine from scratch.&lt;/p&gt;

&lt;h3 id=&#34;automated-signing-server-with-with-hsm&#34;&gt;Automated Signing Server with with HSM&lt;/h3&gt;

&lt;p&gt;For a fully automated signing setup, the machine running the signing needs to be online and running. Ideally this machine would have no remote access, at the very least remote access should be very carefully controlled and monitored. A laptop makes it easy to work with even when remote access is disabled, since it provides a built-in keyboard and monitor. If remote access is required, then any basic PC will work fine. Using a Hardware Security Module (HSM) to store the keys prevents them from being stolen if the server is broken into. An attacker could only run the signing process on that server.&lt;/p&gt;

&lt;p&gt;Ideally, this machine would only be accessible via Tor. That hides the physical location of the server, and hides the traffic from network. This makes it much harder attackers to find the actual machine to attack.&lt;/p&gt;

&lt;p&gt;For the HSM, we recommend using &lt;a href=&#34;https://www.nitrokey.com/&#34;&gt;Nitrokey&lt;/a&gt; hardware, since they are free software/hardware, and provide a wide range of options. Use a separate machine to put the signing keys on HSM. A good HSM will keep an audit trail of how many signatures have been made, so that information could be used to create an automatic auditing process to raise alarms if too many signatures have been made. That could mean that this server was breached and used to sign unauthorized packages.&lt;/p&gt;

&lt;p&gt;Other possibility it to use a setup like &lt;a href=&#34;https://pagure.io/sigul&#34;&gt;Fedora&lt;/a&gt;‘s &lt;a href=&#34;http://www.devops-blog.net/koji/gpg-signing-rpms-with-sigul-signing-server-koji-integration&#34;&gt;Sigul&lt;/a&gt; that involves three machines.&lt;/p&gt;

&lt;h3 id=&#34;basic-laptop-dedicated-to-signing&#34;&gt;Basic laptop dedicated to signing&lt;/h3&gt;

&lt;p&gt;Start with a laptop that can be wiped clean and rebuilt from scratch. What is most important is that only the essential software is installed on it, and nothing else. Do not include any browser at all, for example, since that is the most common vector of attack. No remote access setup (e.g. SSH or VNC) should be installed or configured. To sign apps and repos, someone would take out this laptop, connect it to the network, and run the signing process. The signed results can then be published via the network connection. When the signing is complete, the machine can be turned off and disconnected and kept in a safe place.&lt;/p&gt;

&lt;p&gt;This could be made quite automatic with some custom scripts. The person running the process would only need to take out the machine, connect it, turn it on, wait until the process completes, then put it all away again.&lt;/p&gt;

&lt;h3 id=&#34;fully-offline-signing-laptop-with-usb-thumb-drives&#34;&gt;Fully offline signing laptop with USB thumb drives&lt;/h3&gt;

&lt;p&gt;_&lt;strong&gt;update&lt;/strong&gt;: apt-offline has a &lt;a href=&#34;https://bugs.debian.org/871656&#34;&gt;security bug&lt;/a&gt; so it was removed from Debian/buster. It is no longer recommended! Instead, use the Debian &amp;ldquo;&lt;a href=&#34;https://www.debian.org/doc/manuals/apt-offline&#34;&gt;apt offline&lt;/a&gt;&amp;rdquo; setup._&lt;/p&gt;

&lt;p&gt;This process is based on the same basic, stripped down laptop as the previous example. But this time, the networking should be entirely disabled before the install process. For example, it is easy in many laptops to physically remove the WiFi card. Therefore, it makes sense to use a laptop that does not include an ethernet jack, which are usually not possible to remove. Otherwise, blacklisting all kernel modules related to neworking can suffice. Since this machine is fully offline, the extra work of using an HSM is not as important, but it can’t hurt to include it.&lt;/p&gt;

&lt;p&gt;Download the full &amp;ldquo;CD&amp;rdquo; or &amp;ldquo;DVD&amp;rdquo; image of Debian to run the install. Be sure to &lt;a href=&#34;https://www.debian.org/CD/verify&#34;&gt;verify&lt;/a&gt; the GPG signatures and the SHA-256 hashes. One essential utility is &lt;em&gt;apt-offline&lt;/em&gt;, which automates the process of downloading Debian packages, verifying their signatures, and copying them over to an offline machine.&lt;/p&gt;

&lt;p&gt;To be extra careful, all of the software used should be verified. Chromebooks are nice, cheap laptops that run Linux natively. They also use Coreboot for the BIOS.&lt;/p&gt;

&lt;p&gt;&lt;li id=&#34;buy-a-computer-off-the-shelf-with-cash-avoid-having-it-shipped-especially-across-borders&#34;&gt;
  Buy a computer off the shelf with cash, avoid having it shipped, especially across borders
&lt;/li&gt;
&lt;li id=&#34;buy-a-debian-supported-chromebook-with-removeable-wifi-hardware-and-needs-no-binary-blobs&#34;&gt;
  Buy a Debian-supported &lt;a href=&#34;https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook&#34;&gt;Chromebook&lt;/a&gt; with removeable WiFi hardware, and needs no binary blobs
&lt;/li&gt;
&lt;li id=&#34;install-a-reproducibly-built-coreboot-binary&#34;&gt;
  Install a reproducibly built coreboot binary
&lt;/li&gt;
&lt;li id=&#34;install-from-a-reproducibly-built-debian-image-wiping-out-chrome-os-entirely&#34;&gt;
  Install from a reproducibly built Debian image, wiping out Chrome OS entirely
&lt;/li&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-physical-environment&#34;&gt;The Physical Environment&lt;/h2&gt;

&lt;p&gt;The last thing to consider is the physical location where signatures happen, and where essential equipment is stored. The signing environment must be physically secure. Otherwise, there is no way to prevent laptops or HSMs from being lost or used to sign inappropriate content. For the offline machines, keeping them in a locked room is a good start. For an online machine, forcing all network traffic and remote access over Tor hides the physical location of the machine from network observers.&lt;/p&gt;

&lt;p&gt;For high risk signing keys, using multiple layers of defense is important:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Restricted physical access to HSMs or smart cards&lt;/li&gt;
&lt;li&gt;Security cameras&lt;/li&gt;
&lt;li&gt;Onsite security guards&lt;/li&gt;
&lt;li&gt;Visitor logging&lt;/li&gt;
&lt;li&gt;A tools-resistant server safe for online code-signing servers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The signing server should be physically separate from the rest of the infrastructure. And the logs, machine, and network should be periodically audited.&lt;/p&gt;

&lt;h2 id=&#34;difficult-decisions&#34;&gt;Difficult decisions&lt;/h2&gt;

&lt;p&gt;Ideally all of these practices would be put into place, but each of these security measures comes at a cost of difficulty, expense, and complexity. They can also delay the process of getting regular updates out. So there are risks of implementing too strict security policies, much like the risks of not implementing enough.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Repomaker Usability Trainers Worldwide, June 2017</title>
      <link>https://guardianproject.github.io/info/2017/06/29/repomaker-usability-trainers-worldwide-june-2017/</link>
      <pubDate>Thu, 29 Jun 2017 08:13:04 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/29/repomaker-usability-trainers-worldwide-june-2017/</guid>
      <description>

&lt;h1 id=&#34;repomaker-usability-trainers-worldwide-study-p&#34;&gt;Repomaker Usability, Trainers Worldwide Study&lt;/p&gt;&lt;/h1&gt;

&lt;p&gt;Prepared by Carrie Winfrey and Tiffany Robertson, Okthanks, in partnership with F-Droid and Guardian Project&lt;/p&gt;

&lt;div id=&#34;attachment_13844&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/okt-gp.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13844&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-300x72.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;72&#34; class=&#34;size-medium wp-image-13844&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-300x72.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-768x184.png 768w, https://guardianproject.info/wp-content/uploads/2017/06/okt-gp-1024x246.png 1024w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13844&#34; class=&#34;wp-caption-text&#34;&gt;
    OK Thanks – Guardian Project
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;For more information, contact ca&amp;#x72;&amp;#x72;&amp;#x69;e@o&amp;#x6b;&amp;#x74;han&amp;#x6b;&amp;#x73;.co&amp;#x6d;.&lt;/p&gt;

&lt;h1 id=&#34;purpose&#34;&gt;Purpose&lt;/h1&gt;

&lt;p&gt;The purpose of this study was to understand the following things.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are users able to complete basic tasks including, creating a repo, adding apps from other repos, removing apps, editing app details, and creating a second repo?&lt;/li&gt;
&lt;li&gt;Do participants understand how to get the apps from a repo installed on an Android phone?&lt;/li&gt;
&lt;li&gt;Word choice—Do people understand the word repo?&lt;/li&gt;
&lt;li&gt;Is repomaker a useful tool to participants?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;methodology&#34;&gt;Methodology&lt;/h1&gt;

&lt;p&gt;The study was hosted via video calls with potential users within our target audience. It was focused on the trainer use case. The narrative below describes the target use case.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Narrative.&lt;/strong&gt; You live or teach people in a location with poor internet quality. Your wifi and data connection are not reliable, and rarely can you use Google Play to get apps and app updates on your phone. This makes it difficult to do your job. As an instructor, your job is to train journalists how to stay safe while using their phones. You teach them ways to keep their communications and media private.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The study consisted of 3 parts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Usability study.&lt;/strong&gt; Participants were asked to use Repomaker to complete tasks as we prompted them to do so. After completing the tasks, participants were asked to rate its level of difficulty.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;task-list&#34;&gt;Task List:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Login to the app. Create a repo and add three apps that are useful for the journalists you train.&lt;/li&gt;
&lt;li&gt;Add the Twitter app.&lt;/li&gt;
&lt;li&gt;Add the Courier app from the Guardian Project’s repo.&lt;/li&gt;
&lt;li&gt;Add a description to the Courier app.&lt;/li&gt;
&lt;li&gt;Remove an app from your repo.&lt;/li&gt;
&lt;li&gt;Create a second repo. You don’t need to add any apps.&lt;/li&gt;
&lt;li&gt;Reopen your first repo.&lt;/li&gt;
&lt;li&gt;Share your first repo with your journalists.&lt;/li&gt;
&lt;li&gt;Open the page you just shared.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Talk through how your journalists would add this repo to their android phone.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Debrief.&lt;/strong&gt; The following questions were discussed. &lt;ol type=&#34;a&#34;&gt;
&lt;li&gt;
Would the individuals you train feel comfortable downloading F-Droid in order to get access to the apps in a repo? (Note: F-droid cannot be downloaded from the Google Play store. It can be downloaded directly from the fdroid.org website or received over bluetooth from someone in the same room. Also, downloading F-Droid requires you to enable unknown sources on your phone.)
&lt;/li&gt;
&lt;li&gt;
Please tell me how Repomaker would be useful for you?
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Survey.&lt;/strong&gt; Users were asked to complete the survey immediately after the video call:&lt;a href=&#34;https://goo.gl/forms/Acq4zYB3KOtQPxBa2&#34;&gt;https://goo.gl/forms/Acq4zYB3KOtQPxBa2&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;what-was-tested-link-to-youtube-video-https-youtu-be-do9bxqsex4g-p&#34;&gt;What was tested: &lt;a href=&#34;https://youtu.be/do9bxqSeX4g&#34;&gt;Link to youtube video&lt;/a&gt;. &lt;/p&gt;&lt;/h4&gt;

&lt;h1 id=&#34;participants&#34;&gt;Participants&lt;/h1&gt;

&lt;p&gt;9 people participated in the study from countries including Guyana, India, Pakistan, United States and Zimbabwe. 50% of have experience training. View Demographic stats&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Participants were thanked with a $20 gift card to Amazon or Google Play.&lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;main-takeaways&#34;&gt;Main Takeaways&lt;/h1&gt;

&lt;p&gt;In general, people are excited about this tool. A majority of the participants feel that the interface is straight-forward and easy to use. 8 of 9 participants felt that Repomaker is a useful tool and would use it. It is most useful for distributing apps in cases where there is no internet connection. See notable survey results &lt;a href=&#34;#heading=h.paz3gb4hmvya&#34;&gt;Biggest Challenge&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Users need a core understanding of F-Droid and how it works&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The majority of participants felt that they would need to understand F-Droid first before using Repomaker. More info in task 10&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;

&lt;h4 id=&#34;suggested-improvements&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;We need to talk about F-Droid in a way that is familiar to non-technical users.

&lt;ul&gt;
&lt;li&gt;For example: F-Droid is an independent, community-sourced app store. You can customize it by adding repos, collections of apps shared by sources you trust.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Make a strong brand connection between Repomaker and F-Droid. Users need to understand that Repomaker is part of F-Droid.&lt;/li&gt;
&lt;li&gt;Provide step-by-step instructions for installing F-Droid and installing apps from a repo on an Android phone.&lt;/li&gt;
&lt;li&gt;Consider the touchpoints for a first time user—

&lt;ul&gt;
&lt;li&gt;Goes to the F-Droid website&lt;/li&gt;
&lt;li&gt;Views Repomaker page (on the F-Droid website)&lt;/li&gt;
&lt;li&gt;Launches Repomaker&lt;/li&gt;
&lt;li&gt;Opens in a new tab to Login/Signup view.&lt;/li&gt;
&lt;li&gt;Select Sign Up. Enter info. Action button says “Create my first repo”&lt;/li&gt;
&lt;li&gt;New repo view&lt;/li&gt;
&lt;li&gt;Single repo empty view
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;p&#34;&gt;&lt;/p&gt;&lt;/h2&gt;

&lt;h2 id=&#34;2-repo-is-an-abstract-concept&#34;&gt;2. Repo is an abstract concept&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Most participants understood this after they started using the app. Link to survey result&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Though, upon first use, many participants tapped the ‘Add’ button instead of ‘Add from repos’ because they were unsure what ‘Add from repos’ meant. More info in task 1&lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;

&lt;h4 id=&#34;suggested-improvements-1&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use the wording “Browse gallery” instead of “Add from repos”.&lt;/li&gt;
&lt;li&gt;Indicate how much stuff is there (2,000 apps, …)&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Use less words in the single repo empty state view. **TICKET #120&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide blurbs about what a repo and and what they can be used for.&lt;/ul&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-participants-had-questions-and-concerns-about-editing&#34;&gt;3. Participants had questions and concerns about editing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Many participants were surprised they could edit apps from other people and commented that they wouldn’t have known they could do it if we hadn’t asked them to do so.&lt;/li&gt;
&lt;li&gt;One participant was unsure if the editing function worked like a Wiki and would update everywhere, or if it would only appear in her repo.&lt;/li&gt;
&lt;li&gt;One participant commented that liked that she could add her own translations.&lt;/li&gt;
&lt;li&gt;Some participants expressed their concern about the security of this feature.&lt;/li&gt;
&lt;li&gt;UI for editing is confusing. Description box takes a long time to load and requires scrolling to see.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#heading=h.om0y9gk1w74z&#34;&gt;More info in task 4&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;suggested-improvements-2&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Address questions and concerns in a FAQ page&lt;/li&gt;
&lt;li&gt;Show bar on editing page, when editing a file from another repo. Ticket ..&lt;/li&gt;
&lt;li&gt;Allow the name and developer to be entered only when the first version of a file is added. Do not allow this to be changed afterward.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add hints to summary and description field. **TICKET #103&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide ‘save’ buttons under text sections rather than one ‘done’ button for the entire page.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Offer translation option within Repomaker **TICKET #58&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If it comes from a remote repository AND there is text in the field, then make it read-only.&lt;/li&gt;
&lt;li&gt;Hook into FAQ about why you can edit things.&lt;/ul&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-people-have-concerns-about-the-security-of-repomaker&#34;&gt;4. People have concerns about the security of Repomaker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Some participants shared concern about people being able to masquerade an app with the editing feature.&lt;/li&gt;
&lt;li&gt;One participant was unsure how public the repo was when she was creating it, and was hesitant about how she named it.&lt;/li&gt;
&lt;li&gt;One participant commented that she didn’t want to be responsible for sharing non-secure apps.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;suggested-improvements-3&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Allow the name and developer to be entered only when the first version of a file is added. Do not allow this to be changed afterward.&lt;/li&gt;
&lt;li&gt;Provide clear information when a repo is created about who has access to the repo.&lt;/li&gt;
&lt;li&gt;Provide a clear ‘publish’ step, so that users know when I repo is made visible to others.&lt;/li&gt;
&lt;li&gt;Address concerns in a FAQ.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-ui-for-search-and-filters-in-the-other-repo-browse-view-is-unclear&#34;&gt;5. UI for search and filters in the ‘Other Repo/Browse’ view is unclear&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It’s unclear that you’re searching within a category if you have one selected.&lt;/li&gt;
&lt;li&gt;Most participants commented that they wanted a clear way to go back from this view. Some would tap back in the browser and changes wouldn’t be saved.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#heading=h.iximbencraon&#34;&gt;More info in task 2&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;suggested-improvements-4&#34;&gt;Suggested Improvements:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Redesign how search and filters work together in the UI **TICKET #119&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add apps immediately once selected. Offer the option to remove rather than being able to ‘uncheck’.&lt;/li&gt;
&lt;li&gt;Count apps when added.&lt;/ul&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;****&lt;/p&gt; &lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;page-break-pagebreak&#34;&gt;PAGE_BREAK: PageBreak&lt;/h1&gt;

&lt;h1 id=&#34;usability-metrics&#34;&gt;Usability Metrics&lt;/h1&gt;

&lt;p&gt;Usability metrics refers to participant performance when completing the assigned tasks. This is includes completion success rates, error rates, time to task completion and subjective evaluations/interviews. &lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Critical Errors&lt;/strong&gt;: Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal; help from the test facilitator or others is to be marked as a critical error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Non-critical Errors&lt;/strong&gt;: Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No Problem&lt;/strong&gt;: A qualitative analysis of users ability to complete the task with seemingly ‘no problems’. However, this does not mean that non-critical errors were &lt;em&gt;not&lt;/em&gt; made while completing the task. &lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Level of Difficulty:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The participants were asked to rate the level of difficulty per task as they completed them.&lt;/p&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null2.png&#34; width=&#34;624&#34; height=&#34;393&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
&lt;/p&gt;
                            

&lt;ul&gt;
&lt;li&gt;Task 1: Create a repo and add 3 apps.

&lt;ul&gt;
&lt;li&gt;Users becoming familiar with interface also many believed once they hit ‘add’ and saw the blue button their app had been added or saved to their repo.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 3: Add the Courier app from the Guardian Project’s repo.

&lt;ul&gt;
&lt;li&gt;Rated lowest level of difficulty because users have become familiar with the interface.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 5: Remove an app.

&lt;ul&gt;
&lt;li&gt;Rated highest level of difficulty because users felt there were too many steps involved and most expected to be able to remove an app from the repos view.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 6: Create a second repo.&lt;/li&gt;
&lt;li&gt;Task 8: Share your first repo with the journalist you train.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Average Critical Error Rate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal. Help from the test facilitator or others is to be marked as a critical error. &lt;/p&gt;&lt;/p&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null3.png&#34; width=&#34;624&#34; height=&#34;390&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;p style=&#34;text-align:center;&#34;&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Task 1: One participant unable to complete the task without help from the facilitator. &lt;ul&gt;
          &lt;li&gt;
            Participant thought she could add anything from her applications folder on her computer. 
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 3: One participant unable to compete the task without her from the facilitator. &lt;ul&gt;
          &lt;li&gt;
            The Courier app was already in their repo and they didn’t see the error so when clicking the ‘done’ button they were not brought back to their repo.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 4: Two participants unable to complete the task. &lt;ul&gt;
          &lt;li&gt;
            Added the description to the summary field only (instead of the correct text box).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 5: One participant unable to complete the task. &lt;ul&gt;
          &lt;li&gt;
            Opened and closed app index and app details twice.
          &lt;/li&gt;
          &lt;li&gt;
            Couldn’t figure it out from the repo view and didn’t choose ‘edit’ in the app details view because they weren’t making edits to the app just the repo.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
                                  
      &lt;li&gt;
        Task 8: One person was unable to complete the task. &lt;ul&gt;
          &lt;li&gt;
            They tried to get the repo added to their phone first, but was technically unable to do so because of storage limitations.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
                                
    &lt;p&gt;
      &lt;b&gt;&lt;/b&gt;
    &lt;/p&gt;
                                

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
  &amp;lt;b&amp;gt;Average Non-critical Error Rate:&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step. 
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p style=&#34;text-align:center;&#34;&gt;
    &lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null4.png&#34; width=&#34;612&#34; height=&#34;354&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
  &lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Task 1 &amp;amp; 2: Participants learning the interface and multiple steps required to complete the task.

&lt;ul&gt;
&lt;li&gt;Unfamiliar with the word repo.&lt;/li&gt;
&lt;li&gt;Were distracted by the ‘add’ button on repo page.&lt;/li&gt;
&lt;li&gt;Issues with adding from other repos-See details in tasks 1 &amp;amp; 2.&lt;/li&gt;
&lt;li&gt;Blue check didn’t conform to their expectations.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task 5: Too many steps involved. Many thought this action would be found within the repo view.&lt;/li&gt;
&lt;li&gt;Task 8: Participants tapped the ‘copy link’ button and after seeing the blue check thought they were finished, but not confident in what just happened. Afterwards, copying and pasting the link in a new tab.&lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;page-break-pagebreak-1&#34;&gt;PAGE_BREAK: PageBreak&lt;/h1&gt;

&lt;h1 id=&#34;task-specific-findings-p&#34;&gt;Task Specific Findings&lt;/p&gt;&lt;/h1&gt;

&lt;h2 id=&#34;task-1-login-to-the-app-create-a-repo-and-add-three-apps-that-are-useful-for-the-journalists-you-train&#34;&gt;Task 1: Login to the app. Create a repo and add three apps that are useful for the journalists you train.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Difficulty&lt;/strong&gt;: 1.83&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No problem&lt;/strong&gt; – &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (44%)&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image.png&#34; width=&#34;693&#34; height=&#34;381&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;i&gt;“I wouldn’t actually put the country name, because I’m not sure how public this is.” (Participant 9)&lt;/i&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;i&gt;&lt;/i&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  &lt;i&gt;“I don’t want to be responsible for sending out non-secure apps.” &lt;/i&gt;
&lt;/p&gt;
                            

&lt;p style=&#34;text-align:center;&#34;&gt;
  (Participant 5)
&lt;/p&gt;
                            

&lt;h4 id=&#34;observations&#34;&gt;Observations:&lt;/h4&gt;

&lt;p&gt;Apps Index View – Before Apps are Added&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clicked ‘add’ first – &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (44%)&lt;/li&gt;
&lt;li&gt;Thought the ‘+’ in the nav bar was to add apps – &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (22%)&lt;/li&gt;
&lt;li&gt;Unclear that this was only for Android apps; Was confused about which apps could be added; thought she could add things from her applications folder on her computer – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)&lt;/li&gt;
&lt;li&gt;Confused about adding .apk files – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)&lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add from Repos View&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thought when they tapped ‘add’ it would add the app, but it didn’t until they tapped done&lt;/li&gt;
&lt;li&gt;The problem was that people went to the next page or changed the filter and their selections were cleared- &lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (33%)&lt;/li&gt;
&lt;li&gt;Users noticed that some apps showed up multiple times – &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (22%)&lt;/li&gt;
&lt;li&gt;Some left the page without hitting done (ie. used the back button in the browser) – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;participant-feedback&#34;&gt;Participant Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Wanted to sign up using a google account – &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (11%)&lt;/li&gt;
&lt;li&gt;Participants glad to see the apps they wanted are available&lt;/li&gt;
&lt;li&gt;Be specific about what file types can be added&lt;/li&gt;
&lt;li&gt;&lt;em&gt;“Can I add my own files?” (Participant 9)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Create buttons appears to ‘lag’ – &lt;sup&gt;7&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; or (77%)&lt;/li&gt;
&lt;li&gt;How do I ensure my repo is private?&lt;/p&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-2-add-the-twitter-app&#34;&gt;Task 2: Add the Twitter app.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Difficulty&lt;/strong&gt;: 1.55&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No problem&lt;/strong&gt; – &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt; (44%)
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image1.png&#34; width=&#34;702&#34; height=&#34;356&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“I don’t know what ‘other repos’ means.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;(Participant 9)&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        #### Observations:

                        Apps Index View – After (task 2)

                          * Big shiny add button was distracting; thought they would click there to add more apps – 2/9 (22%)
                          * Were confused or didn’t like that the initial action cards merged – 4/9 (44%)

                        #### Participant Feedback:

                          * ‘Add from repos’ button needs to be more visual and bigger
                          * Thought the explore icon looked like an eyeball

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;“I wasn’t sure how to get back to the page I was on.” &amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;(22% of Participants)&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;

                          &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                            &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                          &amp;lt;/p&amp;gt;
                        &amp;lt;/p&amp;gt;

                        Add from Repos View

                          * Need better categories (ex: ‘internet’ category is a little abstract – includes browser’s, privacy twitter and facebook) A social media category would be more relevant __– 2/9 (22%)
                          * It’s not immediately clear that categories filter – 2/9 (22%) 
                              * Participant chose a category filter, then searched. The app didn’t show up, because it was searching within the category.
                          * Search was not easy to find- 1/9 (11%) 

                        #### Participant Feedback:

                          * “Categories aren’t specifically clear.” (Participant 1)
                          * _“I’m used to finding search on the right side.” (Participant 7)_

                        #### Bugs:

                          * Bug filed for adding an app that is already in your repo #108 &amp;lt;/p&amp;gt; 

                        ## 

                        ## PAGE_BREAK: PageBreak

                        ## Task 3: Add the Courier app from the Guardian Project’s repo.

                          * **Average Difficulty**: 1.22
                          * **Number of Participants with Critical Errors**: 1
                          * **No problem** – 8/9 (88%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image2.png&#34; width=&#34;714&#34; height=&#34;340&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        #### Observations:

                          * Participants familiar enough with interface to easily complete task

                        #### Participant Feedback:

                          * One participant made 7 redundant taps on the ‘done’ button during this task. They assumed the page was stalling or the internet connection was unreliable. When in fact, they already had the app in their repo and didn’t see the error/warning message at the top of the page. Wasn’t able to get out of this view unless they reloaded the page or unchecked the blue check mark. &amp;lt;/p&amp;gt; 

                        ## 

                        ## PAGE_BREAK: PageBreak

                        ## Task 4: Add a description to the Courier app.

                          * **Average Difficulty**: 1.5
                          * **Number of Participants with Critical Errors**: 2
                          * **No problem**– 5/9 (55%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image3.png&#34; width=&#34;692&#34; height=&#34;348&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“It seems really strange to be able to edit someone else’s app. I’m really concerned about the security feature of publishing repos. People putting out virtually similar apps, but changing just slightly. Because I can edit almost everything except for the icon. I can upload my own app file but still use their icon. Suggest ways to have warnings about masquerading.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;(Participant 1) &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“Does it work like a wiki when I make changes, or does it only change it in my repo?” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;(Participant 5)&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        #### Observations:

                          * Added description to the summary field – 3/9 (33%)
                          * Commented that they wouldn’t have known they could edit an app, unless we asked them to do it – 3/9 (33%)
                          * Description view takes too long to load – 2/9 (22%)
                          * No indication in the description text box that this is where you add a description – 2/9 (22%)
                          * Want a ‘save’ button with the description box – 2/9 (22%)
                          * Want a back button on this page (wants it to say ‘back to repo’) – 2/9 (22%)

                        __

                        #### Participant Feedback:

                          * If you tap back in the browser, your changes are not saved.
                          * Attach save buttons to sections that are edited, rather than having 1 ‘done’ button
                          * Talk about editing in the FAQ or overview of the app
                          * Simplify edit view&amp;lt;/p&amp;gt; 

                        ## Task 5: Remove an app from your repo.

                          * **Average Difficulty**: 2.16
                          * **Number of Participants with Critical Errors**: 1
                          * **No problem** – 4/9 (44%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image4.png&#34; width=&#34;713&#34; height=&#34;328&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“Edit makes me think that I would edit something within it, rather than removing it.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          (Participant 3)
                        &amp;lt;/p&amp;gt;

                        #### Observations

                          * Expected to be able to remove apps from the main apps index view – 7/9 (77%) 
                              * Most people searched main page, but remembered that they had seen something in the edit view previously.
                              * _I’m not making any changes to the app._ 
                              * _Wasn’t immediately apparent_ 
                              * _Not difficult, just requires a lot of clicks_
                              * I would expect to hover over or long press an app and get the option to remove
                              * I want a ‘remove app’ button on the app page
                          * Likes confirmation to remove the app – 1/9 (11%)&amp;lt;/p&amp;gt; 

                        ## Task 6: Create a second repo. You don’t need to add any apps.

                          * **Average Difficulty**: 1.72
                          * **Number of Participants with Critical Errors**: 0
                          * **No problem**– 6/9 (66%)

                        ####&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/image5.png&amp;quot; width=&amp;quot;740&amp;quot; height=&amp;quot;333&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt; 

                        #### Observations:

                          * Not completely clear, but figured it out – 3/9 (33%)
                          * Trying to find empty state of My Repo view – 2/9 (22%)
                          * Many had tapped + by mistake already (thought it was to add apps)- 2/9 (22%)
                          * Wanted to tap on the name of the repo or near it – 1/9 (11%)

                        Participant Feedback:

                          * Would help to have the option in the My Repos home view
                          * Hover label for new repo (near +)
                          * “Add button says it all.” (Participant 4)
                          * Would like a visual notification that the first repo was saved

                        ## 

                        ## Task 7: Reopen your first repo.

                          * **Average Difficulty**: 1.44
                          * **Number of Participants with Critical Errors**: 0
                          * **No problem** – 8/9 (88%)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/image6.png&#34; width=&#34;709&#34; height=&#34;324&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          &amp;lt;i&amp;gt;“Home conformed to my expectations.” &amp;lt;/i&amp;gt;
                        &amp;lt;/p&amp;gt;

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          (Paricipant 5)
                        &amp;lt;/p&amp;gt;

                        #### Observations:

                          * Had figured out how to do it in a previous task – 1/9 (11%)
                          * Tapped back in browser – 1/9 (11%)

                        #### Bug:

                          * Bug with duplicate repos appearing in home screen 1/9 (11%)&amp;lt;/p&amp;gt; 

                        ## 

                        ## Task 8: Share your first repo with your journalists.

                          * **Average Difficulty**: 1.72
                          * **Number of Participants with Critical Errors**: 1
                          * **No problem**– 3/9 (33%)&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/image7.png&amp;quot; width=&amp;quot;716&amp;quot; height=&amp;quot;305&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt;

                        #### 

                        #### Observations:

                          * Copy and pasted the link in a new tab (without prompting) – 4/9 (44%)
                          * Went to share right away – most everyone
                          * Participants tapped ‘copy link,’ saw a blue check and did nothing else – 2/9 (22%)
                          * Used Facebook – 1/9 (11%) 
                          * Used Twitter – 1/9 (11%)
                          * Opened the public link right away. Was going to add it to F-Droid then share with people from there 1/9 (11%)
                          * Not clear how to publish the repo – 1/9 (11%)

                        #### Participant Feedback:

                          * Wants to make sure the link is secure
                          * Don’t want to make it public (Password protection, unlisted?)
                          * Check doesn’t go away after copying link
                          * _“Sending a QR or link doesn’t do anything.” (Participant 1)_
                          * “What does the blue check mean?” (22% of Participants)
                          * Would be nice to be able to email from this page, maybe linkedin
                          * Like the QR code, because very familiar using these
                          * Steps aren’t extremely clear
                          * Likes that it shows how many apps are in your repo
                          * Step by step — this is how you share it with journalists (3 step process)
                          * Having the QR code and link on the same page is helpful
                          * Would like to see a reminder about F-Droid on the share screen
                          * Need to have a clear understanding about F-Droid and how it works

                        ## 

                        ## Task 9: Open the page you just shared.

                          * **Average Difficulty**: 1
                          * **Number of Participants with Critical Errors**: 0
                          * **No problem**– 9/9 (100%)&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/image8.png&amp;quot; width=&amp;quot;704&amp;quot; height=&amp;quot;320&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt;

                        #### Observations:

                          * Everyone highlighted link, copied and pasted it in a new tab to view &amp;lt;/p&amp;gt; 

                        ## 

                        ## PAGE_BREAK: PageBreak

                        ## Task 10: Talk through how your journalists would add this repo to their android phone.

                        #### Main Takeaways:&amp;lt;/p&amp;gt; 

                          1. **The majority of participants felt that they needed a core understanding of F-Droid first**

                        __

                        _“Most people wouldn’t have a problem installing F-Droid. The biggest challenge is knowing how F-Droid works.” (Participant 3)_

                        __

                        _“The concept of a repo is very abstract – the hardest part would be understanding what it is.” (Participant 6)_

                        __

                          * First need to understand F-Droid in order to install a repo
                          * Understood that you need F-Droid first, but believe you would need to spend time explaining FDroid to someone before setting up a repo
                          * Relationship between F-Droid and repomaker is unclear
                          * Might be a challenge if F-Droid is not already adopted into their workflow
                          * People need to be comfortable and familiar with F-Droid first in trainings
                          * If they are educated about F-Droid and info comes from a trusted source, they will be likely to use it
                          * How do I get it if I only have one device

                          1. **Step-by-step instructions needed (beginning with F-Droid installation)**

                        __

                        “Most of the journalists I work with are lazy. They would need step by step instructions.” (Participant 8)&amp;lt;/p&amp;gt; 

                          * Step-by- step instructions would help
                          * If I share it on Facebook, they will have it on their phone. 
                          * Provide info up front that you need F-Droid for it to work
                          * QR code scanner in F-Droid would be helpful. Participant didn’t have a QR code scanner or room to download it
                          * The Pakistani testers liked QR code option for sharing
                          * Wants to make sure the link is secure &amp;lt;/p&amp;gt; 

                        # 

                        # PAGE_BREAK: PageBreak

                        # Is it Useful?

                        &amp;lt;p style=&amp;quot;text-align:center;&amp;quot;&amp;gt;
                          8 out of 9 participants agreed Repomaker is a useful tool and would utilize it
                        &amp;lt;/p&amp;gt;

                        ##### YES 

                          * Yes! Participant does multiple trainings in rural areas with students who couldn’t download apps prior to trainings, making talking about the specific apps during the actual trainings too abstract. 
                          * Repomaker is a great idea! Very, very useful! 
                          * See this being a very useful tool for trainings. Easily send a link to trainees prior to the training/conference ask them to install FDroid and download this repo with all the materials needed for our training. 
                          * In a context where people don’t have Google Play, F-Droid makes a lot of sense. 
                          * Yes, because when teaching labs (at university) we must download a few network simulators and apps, but because of the proxies network (restrictions on the internet, sites or apps being blocked) we aren’t able to use wifi in this way, making it difficult or impossible to get the needed materials for lab. Therefore, we could utilize Repomaker in these instances (Nearby tool or bluetooth)
                          * Some people would find it very useful! 
                          * Very useful to host trainings, give people a landing page with a customized repo!
                          * If there is some prior education about FDroid and Repomaker and this education/introduction comes from a trusted source, believes many people would not hesitate to use the tool.
                          * Participant is really struggling with the problem of unreliable internet connectivity, so they are very interested in this app specifically for training purposes and the ability to share repos with people whenever needed.

                        ##### NO OR MAYBE

                          * Not sure, I’m not an Android user. 
                          * How does this make my use case easier? 
                          * Want to know more about F-Droid

                        ##### COUNTRY-SPECIFIC POINTS

                        #### Pakistan

                          * In Pakistan everyone uses Android.
                          * In Pakistan mobile data is expensive and not all areas have good coverage, however, about 70-90% of people have mobile phones with airdrop being a very familiar sharing tool. 
                          * In big cities within Pakistan people are very familiar and comfortable using QR scanners and codes, however, within the smaller, rural areas people are skeptical. 
                          * Access to mobile phones ubiquitous, so mobile platforms really useful.

                        #### Sri Lanka

                          * In Sri Lanka, physical and device checks (army checkpoints) are very common. The guards will check your phone apps and photos, but people would be storing these repos in F-Droid, so apps wouldn’t appear on their home screen. 
                          * F-Droid doesn’t look attractive, so it won’t attract officials attention. 
                          * The galaxy y doesn’t have very much capacity. Storage space is an issue.
                          * If there’s patchy network, people use bluetooth, to save data, because data is money and also to save data.
                          * Most people are using phones that are given by organizations—like World Vision. Some organizations feel that it can be used as a personal device, so they block things so they won’t use data (ex: some block facebook or IMO apps). Sometimes they come with their own apps (like World Nation); blocking other apps. 

                        #### Zimbabwe

                          * Challenge of internet very real in Zimbabwe. Repomaker is very practical and useful. Being able to store apps all in one location. 
                              * Too many people using Google Play at once.

                        #### Participant Feedback:

                          * Could offer a FAQ’s section
                          * On home screen have a few quick questions and answers regarding Repomaker– _What’s a repo? What would I use repomaker for? Learn more here.&amp;lt;/li&amp;gt; 

                              * Additional verification step?
                              * How much will it cost to run the apps? 
                              * How much data will repomaker require?
                              * What about storage? Will repos be able to store on external storage devices?&amp;lt;/ul&amp;gt; &amp;lt;/p&amp;gt; 

                            # 

                            # PAGE_BREAK: PageBreak

                            # Survey Results&amp;lt;/p&amp;gt; 

                            ## Follow-Up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null5.png&#34; width=&#34;624&#34; height=&#34;316&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null6.png&#34; width=&#34;624&#34; height=&#34;357&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null7.png&#34; width=&#34;624&#34; height=&#34;356&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null8.png&#34; width=&#34;624&#34; height=&#34;404&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null9.png&#34; width=&#34;624&#34; height=&#34;312&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null10.png&#34; width=&#34;624&#34; height=&#34;410&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null11.png&#34; width=&#34;624&#34; height=&#34;404&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null12.png&#34; width=&#34;624&#34; height=&#34;310&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ## 

                            ## PAGE_BREAK: PageBreak

                            ## App Distribution&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null13.png&#34; width=&#34;624&#34; height=&#34;309&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null14.png&#34; width=&#34;624&#34; height=&#34;469&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null15.png&#34; width=&#34;624&#34; height=&#34;300&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            #### Notable: How many app?

                            From our responses, a majority of trainers share 2-5 apps during trainings.&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null16.png&#34; width=&#34;624&#34; height=&#34;345&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null17.png&#34; width=&#34;624&#34; height=&#34;330&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ####&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/null18.png&amp;quot; width=&amp;quot;624&amp;quot; height=&amp;quot;340&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt; 

                            #### Notable: Biggest challenge?

                            _**The biggest challenge this set of trainers face is that ‘Participants can’t connect to the internet during a training (75%).&amp;lt;/i&amp;gt;**&amp;lt;/p&amp;gt; 

                            _**Second to that (50%), ‘Participants can’t connect to the internet before the training’ and ‘Sharing an app requires unknown sources to be turned on in the phone settings’.&amp;lt;/i&amp;gt;**&amp;lt;/p&amp;gt; 

                            _**&amp;lt;/i&amp;gt;**&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null19.png&#34; width=&#34;624&#34; height=&#34;313&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ## 

                            ## PAGE_BREAK: PageBreak

                            ## Basic Info&amp;lt;/p&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null20.png&#34; width=&#34;624&#34; height=&#34;304&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null21.png&#34; width=&#34;624&#34; height=&#34;294&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null22.png&#34; width=&#34;624&#34; height=&#34;313&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null23.png&#34; width=&#34;624&#34; height=&#34;352&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null24.png&#34; width=&#34;624&#34; height=&#34;317&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null25.png&#34; width=&#34;624&#34; height=&#34;325&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null26.png&#34; width=&#34;613&#34; height=&#34;329&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null27.png&#34; width=&#34;624&#34; height=&#34;422&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                            ## 

                            ## PAGE_BREAK: PageBreak

                            ## Would you do it again?&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/null28.png&amp;quot; width=&amp;quot;624&amp;quot; height=&amp;quot;324&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt;

                            ###&amp;lt;img src=&amp;quot;https://guardianproject.info/wp-content/uploads/2017/06/null29.png&amp;quot; width=&amp;quot;624&amp;quot; height=&amp;quot;278&amp;quot; alt=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; /&amp;gt; PAGE_BREAK: PageBreak

                            # Possible FQA’s&amp;lt;/p&amp;gt; 

                            How much data will repomaker require?

                            How much data is required to install F-Droid?

                            How much storage needed?

                            Will repos be able to store on external storage devices?

                            What is F-Droid?

                            What is a repo?

                            What files can I add to my repo?

                            Can apps be downloaded directly from the public repo view?

                            Why do I need F-droid?

                            Can I edit any app?

                            Can others edit my apps?

                            Can others edit my personal repo?

                            How can I customize to a specific training?

                            How public is my repo? Who has access to my repo?

                            How secure is my repo?

                            How do I verify the apps I’m adding to my repo?

                            How do I know apps are coming from the original source?

                            How do I guard against malware?

                            If there are two of the same app, how do I know which one to trust?

                            Can other people masquerade my apps?

                            Is it safe to enable unknown sources?

                            How do I install apps from my repo?

                            Is this a secure tool? Is it safe to use?

                            How much storage will Repomaker and F-Droid need?

                            Can the apps from my repo be downloaded onto an external storage device?&amp;lt;/p&amp;gt; 

                            **How to use F-Droid Repos**

                            – how to add one / how to get a repo on your phone

                            – how to get a repo from the desktop computer to your phone

                            – how to share a repo link

                            – how to share a repo from F-Droid when there’s no internet; how to share one offline / how to share apps with peers when there’s no internet.

                            – how to remove one

                            – how do I update files and apps I add?
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Tracking usage without tracking people</title>
      <link>https://guardianproject.github.io/info/2017/06/08/tracking-usage-without-tracking-people/</link>
      <pubDate>Thu, 08 Jun 2017 10:58:53 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/08/tracking-usage-without-tracking-people/</guid>
      <description>&lt;p&gt;One thing that has become very clear over the past years is that there is a lot of value in data about people. Of course, the most well known examples these days are advertising and spy agencies, but tracking data is useful for many more things. For example, when trying to build software that is intuitive and easy to use, having real data about how people are using the software can make a massive difference when developers and designers are working on improving their software. Even in the case of advertisers, they mostly do not care exactly who you are, they want to know what you are interested in so that they can more effectively promote things to you.&lt;/p&gt;

&lt;p&gt;From the beginning Guardian Project has focused on privacy, and worked to practice what we preach in our own software. For example, we have entirely disabled Apache web logs on our website for the past couple of years, so that we would not even have access to that rich data. We felt that we could not even store that data without fear of violating people’s privacy, let alone working with it.&lt;/p&gt;

&lt;p&gt;Things have changed in the past few years, and there are now a number of well tested techniques for tracking how people are using software without actually tracking who they are. It is now possible to keep some usage data while feeling safe that no one who might get that data could use it to identify individuals. One good example of this is the &lt;a href=&#34;https://metrics.torproject.org/&#34; target=&#34;_blank&#34;&gt;Tor Project’s tracking data&lt;/a&gt;. They provide a wide variety of tracking data to follow how Tor is being used, and how well the Tor network is operating.&lt;/p&gt;

&lt;p&gt;So we believe that it is now possible to responsibly track usage without violating anyone’s privacy. One piece of work along these lines is the new &lt;a href=&#34;https://github.com/cleaninsights/cleaninsights-android-sdk&#34; target=&#34;_blank&#34;&gt;Clean Insights Android SDK&lt;/a&gt;. Nathan is leading the development of that effort. And this blog post announces another new development that we are starting: tracking usage data from F-Droid app repositories.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry-300x133.png&#34; alt=&#34;tracking by country&#34; width=&#34;300&#34; height=&#34;133&#34; class=&#34;aligncenter size-medium wp-image-13632&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry-300x133.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/bycountry.png 747w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To start with, the Apache web logs for this site will be configured to store, but only information that is not fine-grained enough to identify people:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;only the date is stored, not the time or time zone&lt;/li&gt;
&lt;li&gt;Referer, IP Addresses, User Agent are never stored&lt;/li&gt;
&lt;li&gt;country is stored by looking up the IP Address in the &lt;em&gt;geoip&lt;/em&gt; database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Normally, a log entries look like:&lt;/p&gt;

&lt;pre&gt;189.4.73.81 testy.at.or.at - [08/Jun/2017:13:55:46 +0200] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;F-Droid&#34;
119.29.81.134 199.119.112.126 - [08/Jun/2017:14:46:48 -0400] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;http://testy.at.or.at/fdroid/repo/index-v1.jar&#34; &#34;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)&#34;
&lt;/pre&gt;

&lt;p&gt;This stripped version looks like:&lt;/p&gt;

&lt;pre&gt;0.0.0.0 - - [08/Jun/2017:00:00:00 +0000] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;-&#34; AT
0.0.0.0 - - [08/Jun/2017:00:00:00 +0000] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;-&#34; ZH
&lt;/pre&gt;

&lt;p&gt;Since the raw data is processed by the webserver, the extra information will be discarded and never written to disk. Only the sanitized usage tracking information is ever stored. This is based on Tor Project’s &lt;a href=&#34;https://gitweb.torproject.org/webstats.git/tree/src/sanitize.py&#34; target=&#34;_blank&#34;&gt;web tracking&lt;/a&gt;. It is possible to do this with &lt;em&gt;Apache&lt;/em&gt;, &lt;em&gt;lighttpd&lt;/em&gt;, &lt;em&gt;nginx&lt;/em&gt;, and probably other webservers. For &lt;em&gt;Apache&lt;/em&gt;, &lt;a href=&#34;https://github.com/maxmind/geoip-api-mod_geoip2/blob/master/INSTALL.md#configuration&#34;&gt;&lt;i&gt;mod_geoip&lt;/i&gt;&lt;/a&gt; needs to be installed, then only a single line is needed to configure this private logging mode:&lt;/p&gt;

&lt;pre&gt;LogFormat &#34;0.0.0.0 - %u %{[%d/%b/%Y:00:00:00 %z]}t \&#34;%r\&#34; %&gt;s %b \&#34;%{Referer}i\&#34; \&#34;-\&#34; %{GEOIP_COUNTRY_CODE}e&#34; privacy+geo
CustomLog ${APACHE_LOG_DIR}/access.log privacy+geo
&lt;/pre&gt;

&lt;p&gt;Now, we hope that we can work towards providing value from tracking data, without violating anyone’s privacy. Indeed, we are still prioritizing privacy over any value derived from tracking data. So anyone else who also wants to go follow this route needs to be fully aware that any tracking must be very carefully done, since it can easily result in inadvertent leaks. Do not take this as a stamp of approval on any tracking activity!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fdroidserver UX Testing Report</title>
      <link>https://guardianproject.github.io/info/2017/06/01/fdroidserver-ux-testing-report/</link>
      <pubDate>Thu, 01 Jun 2017 04:36:14 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/01/fdroidserver-ux-testing-report/</guid>
      <description>

&lt;p&gt;We ran user tests of &lt;a href=&#34;https://gitlab.com/fdroid/fdroidserver&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;fdroidserver&lt;/em&gt;&lt;/a&gt;, the tools for developers to create and manage F-Droid repositories of apps and media. This test was set up to gather usability feedback about the tools themselves and the related documentation. These tests were put together and run by Seamus Tuohy/Prudent Innovation.&lt;/p&gt;

&lt;h1 id=&#34;methodology&#34;&gt;Methodology&lt;/h1&gt;

&lt;p&gt;Participants completed a pretest demographic/background information questionnaire. The facilitator then explained that the amount of time taken to complete the test task will be measured and that exploratory behavior within the app should take place after the tasks are completed. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The participant was then provided a laptop with a browser window open to the F-Droid documentation. The facilitator let the participant know that if they felt they need anything external that they could ask the facilitator for that. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;At the start of each task, the participant was provided the task, and shown the resources that were available for them to use on a USB stick provided by the facilitator. The participant was then instructed to read the task description from the printed copy and begin the task. Time-on-task measurement began when the participant started the task. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The facilitator instructed the participant to ‘think aloud’ so that they could capture their otherwise internal thoughts about interactions with the F-Droid server software. The facilitator observed and entered participant behavior, participant comments, and system actions into their record of the event. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;After each task, the participant spoke with the facilitator about the task. After all task scenarios were attempted, the participant completed a post-test satisfaction questionnaire.&lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-completion-p&#34;&gt;Task Completion&lt;/p&gt;&lt;/h1&gt;

&lt;p&gt;Each participant was asked to complete six specific tasks. At the start of each task, the participant was read the task, and shown the resources that are available for them to use. The participant was then instructed to read the task description from the printed copy and begin the task. &lt;/p&gt;&lt;/p&gt;

&lt;h2 id=&#34;tasks&#34;&gt;Tasks&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Set Up an F-Droid application repository with the applications on this USB Drive.&lt;/li&gt;
&lt;li&gt;Connect to that repository using the F-Droid client.&lt;/li&gt;
&lt;li&gt;Group the applications under your repositories name in the F-Droid interface.&lt;/li&gt;
&lt;li&gt;Download the barcode scanner application using the F-Droid client.&lt;/li&gt;
&lt;li&gt;Update your F-Droid repository with an update to the barcode scanner app.&lt;/li&gt;
&lt;li&gt;Download the update using the phone.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tasks are marked as “complete” after the participant says they have completed the task or after the test facilitator has enough evidence that the task has been completed. Tasks are marked as “uncompleted” after the participant says they cannot complete the task and requests assistance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://annoyingtechnicaldetails.files.wordpress.com/2017/06/null2.png&#34; width=&#34;574&#34; height=&#34;353&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-completion-time&#34;&gt;Task Completion Time&lt;/h1&gt;

&lt;p&gt;Test time will begin after the participant says they have understood the task and will begin. Testing time will end after the participant says they have completed the task or after the test facilitator has enough evidence that the task has been completed. In the case of a critical error, test time will stop after the participant says they cannot complete the task and request assistance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null3.png&#34; width=&#34;577&#34; height=&#34;356&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;usability-metrics&#34;&gt;Usability Metrics&lt;/h2&gt;

&lt;p&gt;Usability metrics refers to participant performance when completing the assigned tasks. This is includes completion success rates, error rates, time to task completion and subjective evaluations/interviews. &lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Critical Errors&lt;/strong&gt;: Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal; help from the test facilitator or others is to be marked as a critical error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Non-critical Errors&lt;/strong&gt;: Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exploratory Behavior&lt;/strong&gt;: Errors that are off task from the main task attempting to be completed will be marked as exploratory behavior.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null4.png&#34; width=&#34;600&#34; height=&#34;370&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It should be noted that many of the errors that were encountered in tasks two, four, and six were the result of configuration decisions and non-critical errors in tasks one and five. More information about why this is the case can be found in the “Task Specific Findings.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null5.png&#34; width=&#34;600&#34; height=&#34;370&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-specific-findings-p&#34;&gt;Task Specific Findings&lt;/p&gt;&lt;/h1&gt;

&lt;h2 id=&#34;task-1-set-up-an-f-droid-application-repository-with-the-applications-on-this-usb-drive&#34;&gt;Task 1: Set Up an F-Droid application repository with the applications on this USB Drive.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 53 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;docs-needed-for-configuring-the-remote-server&#34;&gt;Docs needed for configuring the remote server&lt;/h3&gt;

&lt;p&gt;The participants were provided a remote server that was pre-configured to host F-Droid applications. The research team did this because setting up a web-server to host an F-Droid repository seemed out of scope, and it would increase the length of the UX session to an unacceptable length.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;During this activity the participants were consistently confused by the documentation related to setting up the F-Droid host server (even though the server was pre-configured for them.) Documentation around file permissions on the remote server were especially troublesome.FOOTNOTE: Footnote&lt;/p&gt;

&lt;h4 id=&#34;feedback&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant was confused about where the documentation begins to start deploying the server.&lt;/li&gt;
&lt;li&gt;The participant stated that there is not enough information on how to configure the remote server.&lt;/li&gt;
&lt;li&gt;It is missing in the documentation that before doing “fdroid server update” the permissions of the files to be served can be changed locally since they are transmitted to the remote server with the same local permissions.&lt;/li&gt;
&lt;li&gt;In the documentation, the information about the file permissions and configuration of the server at Fdroid level is missing. The documentation should say what permissions contain the generated files, (or what permissions they should contain).&lt;/li&gt;
&lt;li&gt;It is missing in the documentation that before doing “fdroid server update” the permissions of the files to be served can be changed locally since they are transmitted to the remote server with the same local permissions.&lt;/li&gt;
&lt;li&gt;The participant did not use the command fdroid server update to push the apps to the remote server, instead of that, he used the command SCP to send the data of manually.&lt;/li&gt;
&lt;li&gt;The participant was confused about the location of the files hosted on the web server. Doubt resolved after reviewing the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;confusing-ordering-of-documentation&#34;&gt;Confusing ordering of documentation&lt;/h3&gt;

&lt;p&gt;The participants felt that the documentation was confusingly ordered. While a few noted that the individual pieces of documentation were correct, and even clear once a participant is familiar with themFOOTNOTE: Footnote, the overall organization and ordering of documentation made it made it difficult to use.&lt;/p&gt;

&lt;h4 id=&#34;feedback-1&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;There were many doubts regarding the order of the steps, there was also a sensation of ordered list of steps when in practice the information were related to different activities (eg. Local Demo and Real World setup)&lt;/li&gt;
&lt;li&gt;The documentation is not understandable, not in terms of language but in the way of explaining, it should be more detailed. It feels difficult to understand for entry level people.&lt;/li&gt;
&lt;li&gt;The way information is presented and how it is structured seems to be disconcerting and overloaded.&lt;/li&gt;
&lt;li&gt;In outlines, poorly structured, getting started should have the section “set repo” and “install”, should not make emphasis on FAQs.&lt;/li&gt;
&lt;li&gt;The participant considers that documentation is confusing as to the step by step, he ends up diverting from the task received.&lt;/li&gt;
&lt;li&gt;The participant said that the content of the list in the overview section is not detailed in subsequent sections in the Setup an Fdroid App Repo page.&lt;/li&gt;
&lt;li&gt;It seems more logical for him if in the main page of the documentation are placed first the tutorials and in the end the FAQs.&lt;/li&gt;
&lt;li&gt;The participant had to use the Ctrl + F function several times to find keywords in the index file of the documentation. It seemed unclear and messy to him.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;metadata&#34;&gt;MetaData&lt;/h3&gt;

&lt;p&gt;All but one of the participants left their app and repository metadata empty during this task. There is a possibility that this is because it was not explicitly stated in the tasks requirements, because it is not clearly marked in the instructions, or because the overall difficulty of the other components of this task distracted them from this component of the task.&lt;/p&gt;

&lt;h4 id=&#34;feedback-2&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant did not complete the repository or application metadata.&lt;/li&gt;
&lt;li&gt;The metadata of the apps and the server was not configured, however the server was running with the given applications.&lt;/li&gt;
&lt;li&gt;The participant did not place the metadata of applications or repository.&lt;/li&gt;
&lt;li&gt;The participant generated the skeleton metadata and did not update the information.&lt;/li&gt;
&lt;li&gt;The participant modifies the metadata files in the visual environment of the local machine (Nautilus and Gedit) because it was more comfortable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;docs-to-help-address-errors&#34;&gt;Docs to help address errors&lt;/h3&gt;

&lt;p&gt;When participants did encounter errors there was little assistance to be found in the existing documentation. The current documentation assumes success. Participants who encountered errors desired that the documentation also included guidance about what could have gone wrong when they encounter errors.&lt;/p&gt;

&lt;h4 id=&#34;feedback-3&#34;&gt;Feedback&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant felt frustrated because he did not find a place in the documentation where he could consult errors.In many times, he wanted to use Google to help with the debug process but would not find relevant information there either. The participant wanted a section in the documentation showing how to validate the steps of the process and again a section with common problems in the implementation and configuration.&lt;/li&gt;
&lt;li&gt;Documentation should have a guide of error messages which can be received, e.g. those related to the metadata.&lt;/li&gt;
&lt;li&gt;The participant says that it could be useful a section in the documentation for Troubleshooting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;android-dependencies&#34;&gt;Android Dependencies&lt;/h3&gt;

&lt;p&gt;Multiple participants were unclear about what android related dependencies were required and how to obtain them.&lt;/p&gt;

&lt;h4 id=&#34;feedback-4&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant seeks for information on how to download Android Studio&lt;/li&gt;
&lt;li&gt;The participant was confused about the need to install the dependencies related to Android in order to complete the task. After reviewing the documentation, the participant decided not to install these dependencies.&lt;/li&gt;
&lt;li&gt;Documentation should be more evident regarding to dependency management. e.g. If the binary installation includes Android dependencies.&lt;/li&gt;
&lt;li&gt;The participant doubts whether to do the setup to create app builds, and if the installation of the corresponding dependencies is covered with the installation itself of Fdroid server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-2-connect-to-that-repository-using-the-f-droid-client&#34;&gt;Task 2: Connect to that repository using the F-Droid client.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 13 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 2&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;https-defaults-on-repository-address&#34;&gt;HTTPS Defaults on Repository Address&lt;/h3&gt;

&lt;p&gt;Even though the developers thought the client was relatively easy to use some encountered issues related to the assumptions that F-Droid makes around the security of a repository. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;When adding a new repository to the client application if the participant leaves the protocol blank (e.g. no HTTP or HTTPS) the client defaults to using HTTPS. If the server does not support HTTPS the repository will fail to set up. A repository that does not support HTTPS is clearly undesirable. But, even so, F-Droid’s implicit assumption, without accompanying documentation and/or errors to alert the developer and participant, caused issues for participants.&lt;/p&gt;

&lt;h4 id=&#34;feedback-5&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The error the participant was experiencing was that the client by default adds the HTTPS protocol to URLs that don’t explicitly state HTTP(s), and the server used for the task did not support HTTPS.&lt;/li&gt;
&lt;li&gt;It should have had documentation on how to input the URL of the repository to be properly recognized.&lt;/li&gt;
&lt;li&gt;The participant received errors when setting the repository address incorrectly with HTTPS as was suggested by default on the client application on the android phone. Then the participant noticed the situation and changed the address to HTTP.&lt;/li&gt;
&lt;li&gt;The client is intuitive to use.&lt;/li&gt;
&lt;li&gt;The solution to the issue presented does not seem complex to the participant but is not documented and is liable to make mistakes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;interconnected-documentation-needed&#34;&gt;Interconnected Documentation Needed&lt;/h3&gt;

&lt;p&gt;When switching from building a repository to using the repository the participants had to search for client documentation in other parts of the F-Droid website and online. Multiple participants suggested that client documentation related to the use of the F-Droid server being set up should be more easily accessed from the server setup documentation. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;It should be noted that the participants were using a development build of the new documentation, and, as such it was not directly linked to the F-Droid website where the client documentation is available.&lt;/p&gt;

&lt;h4 id=&#34;feedback-6&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;In the documentation, there was no information about how setup the client’s app.&lt;/li&gt;
&lt;li&gt;The client documentation should be accessible in the server-setup documentation. For example, including how to install and setup the client.&lt;/li&gt;
&lt;li&gt;The participant claimed the task was completed, however the connection was not successful because he wrongly placed the URL repository in the Android client (root@1xx.1xx.1xx.1xx:/var/www/html /). The participant was then assisted to move on to the next activity.He explains that in the client FAQ does not appear how to fill the URL of new repositories in the client&lt;/li&gt;
&lt;li&gt;Very confused about how to get started.&lt;/li&gt;
&lt;li&gt;Within the app was easy to complete the task, since it is an intuitive application. It becomes necessary to have a step-by-step list of how to set the repositories in the client, especially the URLs.&lt;/li&gt;
&lt;li&gt;A link to home of fdroid.org could be placed in the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-3-group-the-applications-under-your-repositories-name-in-the-f-droid-interface&#34;&gt;Task 3: Group the applications under your repositories name in the F-Droid interface.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 1 Minute&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;metadata-1&#34;&gt;MetaData&lt;/h3&gt;

&lt;p&gt;Participants had quick success and no critical errors during this task. But, the participants achieved this by circumventing the aim of the test. Instead of appropriately setting the metadata of their app, and searching for it within the Client, they disabled all other repositories to make it so that only their apps showed in the client. This rapid and common adoption of this specific method of circumventing the need to set, and use, metadata is specifically troubling.&lt;/p&gt;

&lt;h4 id=&#34;feedback-7&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant felt confused about what was expected in the task. However, he thought that disabling other repositories on the client list could be enough.&lt;/li&gt;
&lt;li&gt;There should be an option to disable all repositories included in the software.&lt;/li&gt;
&lt;li&gt;At the beginning, it was confusing to understand which switches had to be disabled and which ones to enabled in order to see the applications of the own repository. It was simple a few seconds later but it should be specified in the documentation.&lt;/li&gt;
&lt;li&gt;There should be in the documentation an instructive manual on the use of the client to manage repositories.&lt;/li&gt;
&lt;li&gt;The participant found very easy to disable other repositories in order to see only the applications of the server used&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-4-download-the-barcode-scanner-application-using-the-f-droid-client&#34;&gt;Task 4: Download the barcode scanner application using the F-Droid client.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 15 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The issues that the participants faced in this task were actually related to earlier tasks with “critical issues” that were undetectable until this point. Without the file permission issues, described below, downloading apps was seen as a very easy task. This highlights the overall feeling by the developer participants that the client is generally easy and intuitive to use.&lt;/p&gt;&lt;/p&gt;

&lt;h3 id=&#34;server-permissions&#34;&gt;Server Permissions&lt;/h3&gt;

&lt;p&gt;The participants encountered multiple difficult to diagnose issues related to file permissions on the remote server. These issues only appear once a participant is attempting to download an application from a F-Droid repository. As such, permission issues can easily slip past a repo maker who merely updates their repository and checks to ensure that it can be connected to.&lt;/p&gt;

&lt;h4 id=&#34;feedback-8&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The participant received in the Android client the error “Unsuccessful Non-critical error download”, understood at the time as a permissions error on the (min 1) remote server, which he modified directly at the time by accessing through SSH before re-testing the download.&lt;/li&gt;
&lt;li&gt;Extremely comfortable and fast if the operation of permissions on the Subjective remote server is known. The participant works with this permissions evaluation management every day and says that’s why it became so easy, but perhaps for another person without such familiarity on web servers could be more complicated.&lt;/li&gt;
&lt;li&gt;“It’s easy once you know how to configure file permissions.”&lt;/li&gt;
&lt;li&gt;The participant did not locate any documentation about remote server configuration, especially related to file permissions on the web server. The participant suggests that for many people this would be necessary.&lt;/li&gt;
&lt;li&gt;In the documentation, the information about the file permissions and configuration of the server at Fdroid level is missing. The documentation should say what permissions contain the generated files, (or what permissions they should contain).&lt;/li&gt;
&lt;li&gt;The participant understood how to resolve the permissions problem on the remote server and corrected it by placing 775 permissions on the remote server’s files. However other actions meant that the activity could not be completed successfully.&lt;/li&gt;
&lt;li&gt;The client displayed the error “Connection refused”, the participant concluded that it was due to a problem of permissions on the remote server, however decided to address it by modifying the nginx configuration file, resulting in the inability to read and download files from the remote server.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-5-update-the-f-droid-repository-with-an-update-to-the-barcode-scanner-app&#34;&gt;Task 5: Update the F-Droid repository with an update to the barcode scanner app.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 9 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;updating-the-server&#34;&gt;Updating the Server&lt;/h3&gt;

&lt;p&gt;Some participants had continued difficulty working with the server during updates. While some of this was related to difficulty differentiating tasks that should be conducted on the client vs. those that should be conducted on the server when reading the documentation, others were related to the behavior of the software.&lt;/p&gt;

&lt;h4 id=&#34;feedback-9&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The upgrade process is better documented compared to other parts of the documentation, but still could be more detailed.&lt;/li&gt;
&lt;li&gt;The terminal was giving an error on the local machine when running the update command saying “CRITICAL: Failed to get repo pubkey!”, later the participant discovered that the update was pushed anyway to the server saying that the task was completed.&lt;/li&gt;
&lt;li&gt;The participant felt confused about which commands must be executed in the local machine and which commands in the remote evaluation server. The participant says that if he needs to configure an exclusively local instance he would not know how to do it. The participant says that it could be useful a section in the documentation for Troubleshooting&lt;/li&gt;
&lt;li&gt;The participant does not know exactly where to place the update files.&lt;/li&gt;
&lt;li&gt;The participant is not clear whether it is necessary to run the command fdroid update and then fdroid server update, or just by running fdroid server update would both of the commands run automatically.&lt;/li&gt;
&lt;li&gt;The participant cannot read the update from the client and doubts whether to run a command on the remote server as part of the update process, then he solves by doing update of the local repository before pushing the remote server.&lt;/li&gt;
&lt;li&gt;The participant was not clear if Fdroid update, actually updates the remote server, then after running it he was able to access via SSH to the remote server in order to check if the updated application was present, when seeing that it was not updated, the participant understood that he also had to run Fdroid server update&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;documentation-is-intuitive-once-understood&#34;&gt;Documentation is Intuitive Once Understood&lt;/h3&gt;

&lt;p&gt;Once participants got comfortable with the documentation, server setup, and/or updating process they felt that it was relatively easy to use.&lt;/p&gt;

&lt;h4 id=&#34;feedback-10&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Very well designed software to handle the updates, it ends up being very easy to use.&lt;/li&gt;
&lt;li&gt;The task was easy once you understand the file structure in the repository.&lt;/li&gt;
&lt;li&gt;The task was very pleasant to complete at the software level.&lt;/li&gt;
&lt;li&gt;Documentation is clear but yet confusing at first reading.&lt;/li&gt;
&lt;li&gt;The upgrade process is better documented compared to other parts of the documentation, but still could be more detailed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;task-6-download-the-update-using-the-phone&#34;&gt;Task 6: Download the update using the phone.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Average Time&lt;/strong&gt;: 7 Minutes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of Participants with Critical Errors&lt;/strong&gt;: 1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;permissions-cont&#34;&gt;Permissions Cont.&lt;/h3&gt;

&lt;p&gt;Permissions issues that went unaddressed in task 5 caused issues during the, otherwise very easy task, of downloading updates to an application.&lt;/p&gt;

&lt;h4 id=&#34;feedback-11&#34;&gt;Feedback:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Once understood the issue of file permissions on the remote server, is easy to address the download of the update.&lt;/li&gt;
&lt;li&gt;It’s easy once you know how to configure file permissions.&lt;/li&gt;
&lt;li&gt;Replaying of the same issue of permissions and the error “Download unsuccessful”, then resolved by knowing how permissions are handled on the remote server.&lt;/li&gt;
&lt;li&gt;It is missing in the documentation that before doing “fdroid server update” the permissions of the files to be served can be changed locally since they are transmitted to the remote server with the same local permissions.&lt;/li&gt;
&lt;li&gt;Very pleasant on the Android client side, but it should be documented the type of permissions that the files on the remote server should contain.&lt;/li&gt;
&lt;li&gt;The update is loaded in the remote repo but it does not show on the&lt;/li&gt;
&lt;li&gt;Fdroid client, then the participant suspects it is because of the file permissions. After 12 minutes the participant says that he does not know how to fix the issue and stopped the task. The participant suspects before notifying the failure in the task completion that the issue could be related to some commands and files created as root that creating conflicts with the tasks triggered by the server update command.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;miscellaneous-feedback-and-requests&#34;&gt;Miscellaneous Feedback and Requests&lt;/h2&gt;

&lt;h3 id=&#34;complexity-of-language-in-the-documentation&#34;&gt;Complexity of Language in the Documentation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One participant used Google Translator for a better understanding of some terms within the documentation. This participant was also the only participant who speaks English as their primary language. All other participants speak Spanish as their primary language.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;documentation-requests&#34;&gt;Documentation requests&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One participant wanted example configuration files in the Gitlab repository of F-Droid-server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;more-explicit-documentation&#34;&gt;More explicit documentation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The documentation must specify that a set of files has been created when fdroid init runs&lt;/li&gt;
&lt;li&gt;It should have specified that commands with Fdroid should be executed in the main directory of the repository (e.g. ~/fdroid) and not in other directories within it (e.g. ~/fdroid /repo).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Announcing new libraries: F-Droid Update Channels</title>
      <link>https://guardianproject.github.io/info/2017/05/31/announcing-new-libraries-f-droid-update-channels/</link>
      <pubDate>Wed, 31 May 2017 11:40:27 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/05/31/announcing-new-libraries-f-droid-update-channels/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/05/refresh-525698_640.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/05/refresh-525698_640-150x150.png&#34; alt=&#34;&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignleft size-thumbnail wp-image-13626&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/05/refresh-525698_640-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2017/05/refresh-525698_640-300x297.png 300w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
In many places in the world, it is very common to find Android apps via a multitude of sources: third party app stores, Bluetooth transfers, swapping SD cards, or directly downloaded from websites. As developers, we want to make sure that our users get secure and timely update no matter how they got our apps. We still recommend that people get apps from trusted sources like F-Droid or Google Play.&lt;/p&gt;

&lt;p&gt;Building upon the F-Droid distribution ecosystem, there is a new suite of libraries: “&lt;a href=&#34;https://gitlab.com/fdroid/update-channels/&#34; target=&#34;_blank&#34;&gt;F-Droid Update Channels&lt;/a&gt;“. It is a suite of libraries for making sure your that your app can always find updates, no matter where someone got it from. Currently, there are two specific libraries: “Get F-Droid” and “App Updater”.&lt;/p&gt;

&lt;h4 id=&#34;get-f-droid-aka-org-fdroid-getfdroid&#34;&gt;“Get F-Droid” aka &lt;code&gt;org.fdroid.getfdroid&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Checks whether F-Droid is installed. If not, it will help the user to download and install F-Droid. F-Droid then provides the update channel. This is the preferred method of getting updates since F-Droid provides strong privacy protection and lets the user control when and where updates happen. Also, if F-Droid came pre-installed on the device or was “flashed” onto it as part of a custom Android ROM, then F-Droid does not need “Unknown Sources” enabled.&lt;/p&gt;

&lt;h4 id=&#34;app-updater-aka-org-fdroid-appupdater&#34;&gt;“App Updater” aka &lt;code&gt;org.fdroid.appupdater&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Keeps the app current by checking the hard-coded app repository set up by the developer. This is similar to the popular “App Updater” library, but is secure due to the F-Droid signed metadata. The _&lt;a href=&#34;https://gitlab.com/fdroid/fdroidserver&#34; target=&#34;_blank&#34;&gt;fdroidserver&lt;/a&gt;_ tools handle the creation and maintenance of the app repository.&lt;/p&gt;

&lt;p&gt;Both of these libraries also check whether Google Play is installed, if so, will disable itself. This allows apps to include this library in APKs that are uploaded to Google Play since it will not violate the Google Play Terms of Service.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New research report on the challenges developers face</title>
      <link>https://guardianproject.github.io/info/2017/05/15/new-research-report-on-the-challenges-developers-face/</link>
      <pubDate>Mon, 15 May 2017 05:07:17 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/05/15/new-research-report-on-the-challenges-developers-face/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/tccw.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-13792&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/tccw.png&#34; alt=&#34;&#34; width=&#34;845&#34; height=&#34;375&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/tccw.png 845w, https://guardianproject.info/wp-content/uploads/2017/06/tccw-300x133.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/tccw-768x341.png 768w&#34; sizes=&#34;(max-width: 845px) 100vw, 845px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Guardian Project has been working with the &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;F-Droid&lt;/a&gt; community to make it a secure, streamlined, and verifiable app distribution channel for high-risk environments. While doing this we have started to become more aware of the challenges and risks facing software developers who build software in closed and closing spaces around the world.&lt;/p&gt;

&lt;p&gt;There are a wealth of resources available on how to support and collaborate with high-risk users. Surprisingly, we could not find any guidance on how to support and collaborate with developers where the internet is heavily monitored and/or filtered, let alone developers who might be at risk because of the software they develop.&lt;/p&gt;

&lt;p&gt;This report explores some key challenges that developers in closed and closing spaces face when collaborating with international groups who support Human Rights and freedom (IHRFG). These groups include privacy and security software projects, civil society focused donors, and non-governmental organizations (NGOs).&lt;/p&gt;

&lt;p&gt;IHRFG can benefit greatly from collaborations with local developers. IHRFGs who are trying to design or localize software for a specific region often have difficulty&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;understanding the types of technologies that are needed to address the problems IHRDGs are trying to solve,&lt;/li&gt;
&lt;li&gt;addressing the local economic, social, infrastructural, and/or legal challenges that software of its type often faces in the local context,&lt;/li&gt;
&lt;li&gt;identifying the interaction and design patterns that will drive initial adoption,&lt;/li&gt;
&lt;li&gt;evaluating the quality of the translations of software into the local language,&lt;/li&gt;
&lt;li&gt;finding local individuals for focus groups, and testing, and&lt;/li&gt;
&lt;li&gt;conducting testing and troubleshooting to identify and address issues caused by the speed, availability, and/or censoring of local fixed or mobile networks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Local developers, on the other hand, are often more than able to accomplish these tasks.&lt;/p&gt;

&lt;p&gt;Beyond identifying these challenges this report provides guidance on how to take these challenges into account when IHRFGs collaborate with local developers. To do this the report also contains a set of developer user-personas. These personas can be used by IHRFGs as an aid when they are designing collaborating with local developers.&lt;/p&gt;

&lt;p&gt;We hope that the results of this research will help international privacy and security focused software projects and NGOs better understand and respond to the unique needs of different international developer communities so that their collaborations with these developers will be safer, more strategic, and sustainable.&lt;/p&gt;

&lt;h2 id=&#34;research-methodology&#34;&gt;Research Methodology&lt;/h2&gt;

&lt;p&gt;This report is the result of two interconnected streams of research. The initial themes were identified in a series of in-depth interviews. These themes were further explored in an online “developer challenges survey.” The challenges and user personas found in this report were refined from the combined results of these research efforts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interviews&lt;/strong&gt;: interviews with 14 developers, technologists, and digital defenders from 11 different countries where the internet is heavily monitored and filtered as well as 5 interviews with IHRFGs who work in similar regions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Surveys&lt;/strong&gt;: an &lt;a href=&#34;https://challenges.tech/&#34;&gt;online developer survey&lt;/a&gt; in Chinese, Spanish, Farsi, Russian, French, and English that received 118 responses from developers in 28 countries around the world.&lt;/p&gt;

&lt;h2 id=&#34;user-personas&#34;&gt;User Personas&lt;/h2&gt;

&lt;p&gt;The user personas created for this report were developed to allow readers to think more concretely about the motivations and challenges that were identified during this project. In an effort to combat the inclusion of possible implicit biases the author might hold based upon the nationality, race, or gender of the personas the nationality, names, genders, and photos used for all the personas were generated at random.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/seamustuohy/user_profile_randomizer&#34;&gt;source code of the &lt;strong&gt;User Profile Randomizer&lt;/strong&gt;&lt;/a&gt; is available and permissively licensed under the &lt;a href=&#34;https://github.com/seamustuohy/user_profile_randomizer/blob/master/LICENSE&#34;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;. It randomizes the gender pronoun, name (chosen from a random language family), and photo on a set of markdown based user personas.&lt;/p&gt;

&lt;h3 id=&#34;the-full-report&#34;&gt;The Full Report&lt;/h3&gt;

&lt;p&gt;Download the full report, including developer profiles, here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/Technological-Collaboration-in-a-Closing-World-1.pdf&#34;&gt;Technological Collaboration in a Closing World.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>F-Droid User Testing, Round 2</title>
      <link>https://guardianproject.github.io/info/2017/05/01/f-droid-user-testing-round-2/</link>
      <pubDate>Mon, 01 May 2017 04:51:24 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/05/01/f-droid-user-testing-round-2/</guid>
      <description>

&lt;p&gt;#&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null14.png&#34; width=&#34;624&#34; height=&#34;164&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;by Hailey Still and Carrie Winfrey&lt;/p&gt;&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;****&lt;/h1&gt;

&lt;p&gt;Here we outline the User Testing process and plan for the &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt; app store for Android. The key aims of F-Droid are to provide users with a) a comprehensive catalogue of open-source apps, as well as b) provide users with the the ability to transfer any app from their phone to someone in close physical proximity. With this User Test, we are hoping to gain insights into where the product design is successful and what aspects need to be further improved. Main goals are obtaining a baseline user performance and identifying potential design concerns regarding ease of use. An additional goal is to promote F-Droid as an alternative to the Google Play app store.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;The usability test objectives are to determine usability problem areas within the user interface and content areas. Key focus points include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App navigation: failure to locate functions, excessive clicks to complete a task or failure to complete task&lt;/li&gt;
&lt;li&gt;Presentation errors: selection errors due to labeling ambiguities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The usability test also aims to gain a deeper understanding of our users, what needs they are hoping to meet by using F-Droid, and a basic user-satisfaction level. Our participants for this round of testing will represent a range of ages, backgrounds and technological literacy levels. All tests will be performed with guidance and support of a test facilitator.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;methodology&#34;&gt;Methodology&lt;/h2&gt;

&lt;p&gt;Users will be tested with the assistance of screen and audio recordings, which are to be analyzed post-test. A pre-test questionnaire will record basic demographic data and a post-test survey will gather insight on overall usability experience. The test will include a standard task completion portion as well as a desirability card sorting (to capture qualitative data on user experience).&lt;/p&gt;

&lt;p&gt;Participants will be asked to fill out a demographic and background information survey. The facilitator will explain that the amount of time taken to complete the task will be measured and that they should remain focused on the task. The participant will read the task description, ask any questions they may have and begin the task. Measurement begins when the participant begins the task.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Participants will be encouraged to think aloud. The facilitator will minimally assist the participants during task completion. The facilitator will observe and enter user behavior, comments, and actions.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;After all task scenarios are attempted, the participant will complete the post-test desirability card activity and survey. This activity will comprise of asking participants to choose 5 cards they feel reflect their overall experience and elaborate on their choices. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usability Tasks:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The tasks were randomly administered, with the exception of the “Last Task” which was always administered last.&lt;/p&gt;

&lt;p&gt;TASK A. Search for an app that you would like to download. Install the app you have selected.&lt;/p&gt;

&lt;p&gt;TASK B. There is an app that needs to be updated. Find the app and install the update.&lt;/p&gt;

&lt;p&gt;TASK C. Find a game app that looks interesting to you. Install the app.&lt;/p&gt;

&lt;p&gt;TASK D. Search for a crossword puzzle app within the games category.&lt;/p&gt;

&lt;p&gt;TASK E. If you had no internet, how would you download an app?&lt;/p&gt;

&lt;p&gt;TASK F. Your friend emails you a link to a collection of their favorite apps. Open gmail and click on the link they have sent you. Add the collection of apps that your friend emailed to you to F-Droid. Locate an app called Habitica from the collection you just downloaded.&lt;/p&gt;

&lt;p&gt;LAST TASK. Add the collection of apps displayed on the computer to F-Droid.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desirability Cards:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null15.png&#34; width=&#34;624&#34; height=&#34;213&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Metrics&lt;/p&gt;

&lt;p&gt;Tests hosted in two locations, Vienna, Austria and Lubbock, Texas. These charts represent the combined metrics for all tests at both locations.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level of Difficulty:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The participants were asked to rate the level of difficulty per task as they completed them.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null16.png&#34; width=&#34;624&#34; height=&#34;457&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Critical Error Rate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Critical errors are reported as errors that result in failure to complete the task. Participants may or may not be aware that the task goal is incorrect or incomplete. Independent completion of the task is the goal. Help from the test facilitator or others is to be marked as a critical error. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null17.png&#34; width=&#34;624&#34; height=&#34;420&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Non-critical Error Rate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Non-critical errors are errors that the participant recovers from alone and are not such that the participant can no longer complete the task. They can include errors such as excessive steps taken to complete a task or initially using an incorrect function but recovering from that incorrect step. &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Non-critical errors do not include exploratory behavior. Exploratory behavior includes errors that are&lt;/p&gt;

&lt;p&gt;off task from the main task attempting to be completed.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null18.png&#34; width=&#34;624&#34; height=&#34;440&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desirability Toolkit Responses&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Vienna:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null19.png&#34; width=&#34;624&#34; height=&#34;194&#34; alt=&#34;&#34; title=&#34;&#34; /&gt; &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lubbock:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/null20.png&#34; width=&#34;624&#34; height=&#34;160&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;detailed-testing-reports&#34;&gt;Detailed Testing Reports&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1Y7AV3N8cmqm7yMPFuK6_qbyO86IXYoAJuTuhwCHmnK4/?ts=5905d383#heading=h.sz9pxldla478&#34; target=&#34;_blank&#34;&gt;Detailed Report from Vienna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1Wavy1Kce7WAmrM277e6QV6ziTvM05uMCsvGSdzi-Uzg&#34; target=&#34;_blank&#34;&gt;Detailed Report from Lubbock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/forms/d/1wbAoganpj9KpE00qQj0uOAPETkV9xodV4ubA2UZxbn8/#responses&#34; target=&#34;_blank&#34;&gt;Demographic Survey Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/forms/d/1jflue3U1mV-ht55gfkdHPYvOjVernCmdbUdXn26DikU#responses&#34; target=&#34;_blank&#34;&gt;Follow-up Survey Results&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>F-Droid: A new UX 6 years in the making</title>
      <link>https://guardianproject.github.io/info/2017/04/17/f-droid-a-new-ux-6-years-in-the-making/</link>
      <pubDate>Mon, 17 Apr 2017 10:19:19 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/04/17/f-droid-a-new-ux-6-years-in-the-making/</guid>
      <description>&lt;p&gt;_(post by &lt;a href=&#34;http://peter.serwylo.com/&#34; target=&#34;_blank&#34;&gt;Peter Serwylo&lt;/a&gt;)_&lt;/p&gt;

&lt;p&gt;F-Droid has been a part of the Android ecosystem for over 6 years now.&lt;br /&gt;
Since then, over 2000 apps have been built for the main repository,&lt;br /&gt;
many &lt;a href=&#34;https://gitlab.com/fdroid/fdroidclient/blob/master/CHANGELOG.md&#34; target=&#34;_blank&#34;&gt;great features have been added&lt;/a&gt;, the client has been translated into over 40 different languages, and much more.&lt;/p&gt;

&lt;p&gt;However, the F-Droid UX has never changed much from &lt;a href=&#34;https://f-droid.org/posts/f-droid-repository-alpha&#34; target=&#34;_blank&#34;&gt;the original three tab layout&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/0.11.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/0.11.png&#34; alt=&#34;&#34; width=&#34;320&#34; height=&#34;427&#34; class=&#34;size-full wp-image-13585&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/0.11.png 320w, https://guardianproject.info/wp-content/uploads/2017/04/0.11-225x300.png 225w&#34; sizes=&#34;(max-width: 320px) 100vw, 320px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/0.102.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/0.102.png&#34; alt=&#34;&#34; width=&#34;323&#34; height=&#34;427&#34; class=&#34;size-full wp-image-13584&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/0.102.png 323w, https://guardianproject.info/wp-content/uploads/2017/04/0.102-227x300.png 227w&#34; sizes=&#34;(max-width: 323px) 100vw, 323px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will change with the coming release of F-Droid client v0.103.&lt;/p&gt;

&lt;p&gt;Over the past 6 months, the F-Droid team has been busy redesigning a modern UX which will help bring F-Droid into the present.&lt;br /&gt;
Some of the big ticket items include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Screenshots and feature graphics&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Bulk download and install&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Offline “queue for download”&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Ability to translate apps metadata&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Improved notifications for downloads and pending updates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/appdetails-b.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/appdetails-b.png&#34; alt=&#34;&#34; width=&#34;318&#34; height=&#34;570&#34; class=&#34;size-full wp-image-13593&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/appdetails-b.png 318w, https://guardianproject.info/wp-content/uploads/2017/04/appdetails-b-167x300.png 167w&#34; sizes=&#34;(max-width: 318px) 100vw, 318px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/appdetails-a.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/appdetails-a.png&#34; alt=&#34;&#34; width=&#34;318&#34; height=&#34;570&#34; class=&#34;size-full wp-image-13594&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/appdetails-a.png 318w, https://guardianproject.info/wp-content/uploads/2017/04/appdetails-a-167x300.png 167w&#34; sizes=&#34;(max-width: 318px) 100vw, 318px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/updates.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/updates.png&#34; alt=&#34;&#34; width=&#34;318&#34; height=&#34;570&#34; class=&#34;size-full wp-image-13595&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/updates.png 318w, https://guardianproject.info/wp-content/uploads/2017/04/updates-167x300.png 167w&#34; sizes=&#34;(max-width: 318px) 100vw, 318px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/nearby.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/nearby.png&#34; alt=&#34;&#34; width=&#34;318&#34; height=&#34;570&#34; class=&#34;size-full wp-image-13596&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/nearby.png 318w, https://guardianproject.info/wp-content/uploads/2017/04/nearby-167x300.png 167w&#34; sizes=&#34;(max-width: 318px) 100vw, 318px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/categories.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/categories.png&#34; alt=&#34;&#34; width=&#34;318&#34; height=&#34;570&#34; class=&#34;size-full wp-image-13597&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/categories.png 318w, https://guardianproject.info/wp-content/uploads/2017/04/categories-167x300.png 167w&#34; sizes=&#34;(max-width: 318px) 100vw, 318px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/04/latest.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/04/latest.png&#34; alt=&#34;&#34; width=&#34;318&#34; height=&#34;570&#34; class=&#34;size-full wp-image-13598&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/04/latest.png 318w, https://guardianproject.info/wp-content/uploads/2017/04/latest-167x300.png 167w&#34; sizes=&#34;(max-width: 318px) 100vw, 318px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition, we have been redesigning some of the smaller, but equally as important parts of the app, such as better support for visually impaired users who make use of tools such as Talkback, and better support for donating to open source app developers.&lt;/p&gt;

&lt;p&gt;This has involved extensive design input from UX designers and the community.&lt;br /&gt;
In addition to the user tests that were conducted early on in the design process, further field tests are currently being conducted to ensure that usability issues with the new design are identified and resolved.&lt;/p&gt;

&lt;p&gt;Over the coming weeks you will see alpha releases for v0.103. We encourage your feedback and suggestions about how to continually improve the F-Droid client. This is one of the many improvements happening to the broader F-Droid ecosystem in 2017, so keep an eye out for more!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>F-Droid Lubbock Report – What We Want to Know</title>
      <link>https://guardianproject.github.io/info/2017/04/17/f-droid-lubbock-report-what-we-want-to-know/</link>
      <pubDate>Mon, 17 Apr 2017 08:07:47 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/04/17/f-droid-lubbock-report-what-we-want-to-know/</guid>
      <description>

&lt;hr /&gt;

&lt;h1 id=&#34;f-droid-lbk-usability-study-report-what-we-want-to-know-p&#34;&gt;F-Droid LBK Usability Study Report – What We Want to Know&lt;/p&gt;&lt;/h1&gt;

&lt;p&gt;Prepared by Carrie Winfrey&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Preliminary Version – April 17, 2017&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;When planning this user test, the team outlined features and flows within the app on which we wanted feedback. From there, we created tasks for participants to complete that would access these areas, and produce insights related to our inquires.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;This document is organized by the tasks participants completed. Initial inquiry questions are outlined under each task, followed by the feedback and observations gained from the test. Last, within each section, I’ve listed suggestions for improvement related to the task.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;In the Lubbock sessions, 11 people participated in this focused usability study. More information on participant demographics, test methodology, metrics, and follow-up activities and insights will be provided soon.&lt;/p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-a-search-for-an-app-that-you-would-like-to-download-install-the-app-you-have-selected&#34;&gt;TASK A – Search for an app that you would like to download. Install the app you have selected.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 1.9&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“App won’t install. Found the game easily, though.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to locate the search button?

&lt;ul&gt;
&lt;li&gt;Yes. Most users found the search button right away.&lt;/li&gt;
&lt;li&gt;Some (3 out of 10) browsed through the latest or category view to find an app instead of using search.&lt;/li&gt;
&lt;li&gt;One participant said he never saw the search button.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Are they able to effectively use search?

&lt;ul&gt;
&lt;li&gt;Yes.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Are they able to find what they’re looking for?

&lt;ul&gt;
&lt;li&gt;Not always. Searching for mainstream apps like Gmail, ESPN, Facebook and Twitter returns no relevant results.&lt;/li&gt;
&lt;li&gt;“It took about 10 tries to find an app I searched for. It might be difficult for users to find the app they have an interest in.”&lt;/li&gt;
&lt;li&gt;One participant searched for recipes, but misspelled it, so no relevant results were displayed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other insights:&lt;/li&gt;
&lt;li&gt;Many users expressed that it was difficult to know if and app had installed.

&lt;ul&gt;
&lt;li&gt;“I found it difficult to figure out if the apps had installed. No notification?”&lt;/li&gt;
&lt;li&gt;Some participants searched on the home screen of the phone, then in the apps on their phone to see if the app had installed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4 participants were unable to install apps all together due to a bug in the app version being tested.&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Location of search&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Though most people didn’t have trouble locating search, a majority are most familiar with finding it at the top of the screen.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Search results&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Display more relevant search results. Ex: If someone searches for Gmail and we don’t have it, offer alternative email apps.&lt;/li&gt;
&lt;li&gt;Use suggestive results to help users avoid spelling errors and to make the action of searching quicker.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feedback once installed&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Provide better feedback once an app is installed for views within the app (installed from list view, app details and updates views).&lt;/li&gt;
&lt;li&gt;Show a system notification when an app is installed.&lt;/li&gt;
&lt;li&gt;Give the option to add installed apps to the home screen of the phone.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fix bugs&lt;/strong&gt; Fix bugs with installing apps.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-b-there-is-an-app-that-needs-to-be-updated-find-the-app-and-install-the-update&#34;&gt;TASK B – There is an app that needs to be updated. Find the app and install the update.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 2.3&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“The update icon at the bottom with red number notifications was easy to find.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“It took me multiple attempts to update the applications.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Is it clear where to go to find updates?

&lt;ul&gt;
&lt;li&gt;Yes. Every participant easily located the updates tab.&lt;/li&gt;
&lt;li&gt;“It was very easy to spot apps that need updating.”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Can users successfully update an app?

&lt;ul&gt;
&lt;li&gt;No.&lt;/li&gt;
&lt;li&gt;The difference in word choice on app details than in updates view confused multiple users.

&lt;ul&gt;
&lt;li&gt;“The update icon at the bottom with red number notifications was easy to find. Once I clicked on the specific app to update it gave the option to uninstall or upgrade. I wasn’t sure if upgrade was the same as update or not – it sounded like something I’d have to pay for.”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Every participant that tried to update an app from the updates view had problems.

&lt;ul&gt;
&lt;li&gt;“Took me multiple attempts to update the applications. Not positive the update occurred. There was no indication of completion.”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;It was unclear if an app had successfully updated. Participants were not confident that they had updated the app.&lt;/li&gt;
&lt;li&gt;We need to provide better feedback once an update is complete and successful.&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Word Choice&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Change ‘upgrade’ to updates in app details.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feedback&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Provide better feedback once an update is complete and successful within the updates view.&lt;/li&gt;
&lt;li&gt;Give a system notification when an update is successful.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fix bugs&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;I’ve shared a screen record that reveals the problems.&lt;/li&gt;
&lt;li&gt;For some users, the red badge indicator didn’t change after they updated the app. This behavior needs to be tested internally.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PAGE_BREAK: PageBreak&lt;/p&gt;

&lt;h1 id=&#34;task-c-find-a-game-app-that-looks-interesting-to-you-install-the-app&#34;&gt;TASK C – Find a game app that looks interesting to you. Install the app.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 1.7&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How do users browse when looking for a specific kind of app, like a game? Do they search, look in categories, browse, etc.

&lt;ul&gt;
&lt;li&gt;Most participants looked through the games category. Some browsed latest. Some used search.&lt;/li&gt;
&lt;li&gt;Many people found the categories view appealing, and spent more time there than on the latest view, when looking for apps. One participant compared it to the iTunes Store, but commented that it was even easier.&lt;/ul&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;task-d-search-for-a-crossword-puzzle-app-within-the-games-category&#34;&gt;TASK D – Search for a crossword puzzle app within the games category.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 1.1&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to effectively search within categories?

&lt;ul&gt;
&lt;li&gt;We saw a variety of behaviors with this task. But, overall, people were able to do this without problems.

&lt;ul&gt;
&lt;li&gt;4 participants searched in within categories&lt;/li&gt;
&lt;li&gt;2 participants searched from search&lt;/li&gt;
&lt;li&gt;2 participants browsed in horizontal view of the category&lt;/li&gt;
&lt;li&gt;2 participants opened category and scrolled down to find &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easier use of chip&lt;/strong&gt; Once you clear a chip, there’s no easy way to get it back if you want to search within that category.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-e-if-you-had-no-internet-how-would-you-download-an-app&#34;&gt;TASK E – If you had no internet, how would you download an app?&lt;/h1&gt;

&lt;p&gt;Average difficulty: 3.1&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 7 of 10 that attempted the task were unable to identify the nearby feature as the place to download apps without internet.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Nearby didn’t give me the idea of downloading while offline.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to discover how to download apps offline?

&lt;ul&gt;
&lt;li&gt;A few. But not the majority.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is it clear that you use they nearby feature to do this?

&lt;ul&gt;
&lt;li&gt;No.&lt;/li&gt;
&lt;li&gt;70% of participants never identified the nearby feature as the means for doing this.&lt;/li&gt;
&lt;li&gt;“Nearby didn’t give me the idea of downloading while offline.”&lt;/li&gt;
&lt;li&gt;30% successfully identified nearby. Though, most after looking several other places?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;What other behaviors are observed?

&lt;ul&gt;
&lt;li&gt;Turning WiFi off to see if the interface changed&lt;/li&gt;
&lt;li&gt;Going into airplane mode&lt;/li&gt;
&lt;li&gt;Downloading an airplane mode app&lt;/li&gt;
&lt;li&gt;Opening settings and looking in WiFi options&lt;/li&gt;
&lt;li&gt;Searching google.&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Additional Observations&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;People did not make the connection between ‘nearby’ and downloading apps offline.&lt;/li&gt;
&lt;li&gt;Not one participant read the text on the Nearby view when they initially tapped on it.&lt;/li&gt;
&lt;li&gt;Multiple people compared nearby to Air Drop on iOS&lt;/li&gt;
&lt;li&gt;“It’s going to airdrop a virus to your phone.”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Word choice&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Reconsider the word choice.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Offline mode&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The experience of the app should be obviously different when there’s no internet connection.&lt;/li&gt;
&lt;li&gt;Guide users toward the nearby feature if there’s no connection.&lt;/li&gt;
&lt;li&gt;Consider providing info in settings&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;More engaging visuals&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;If we want people to pay attention to the Nearby view, it needs to be more engaging.&lt;/li&gt;
&lt;li&gt;If we keep the language about offline, consider using iconography that communicates that.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-f-your-friend-emails-you-a-link-to-a-collection-of-their-favorite-apps-open-gmail-and-click-on-the-link-they-have-sent-you-add-the-collection-of-apps-that-your-friend-emailed-to-you-to-f-droid-locate-an-app-called-habitica-from-the-collection-you-just-downloaded&#34;&gt;TASK F – Your friend emails you a link to a collection of their favorite apps. Open gmail and click on the link they have sent you. Add the collection of apps that your friend emailed to you to F-Droid. Locate an app called Habitica from the collection you just downloaded.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 2.2&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: Every participant was able to add add the repo. 4 of 11 participants were unable to locate the Habitica app that was added from the repo.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;“I was able to find the link the email and accept the apps, but have no idea where to find the collection from my friend in F-Droid.”&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to add a repo from a link opened on mobile?

&lt;ul&gt;
&lt;li&gt;Yes. No one had problems with this.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is the webpage for adding a repo clear?

&lt;ul&gt;
&lt;li&gt;Yes.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Are users able to find the apps from a repo they have added?

&lt;ul&gt;
&lt;li&gt;No. Participants were very confused.&lt;/li&gt;
&lt;li&gt;100% participants didn’t know if they had added the repo successfully after completing the steps.&lt;/li&gt;
&lt;li&gt;“I was able to find the link in the email and accept the apps, but I have no idea where to find the collection from my friend in F-Droid.”&lt;/li&gt;
&lt;li&gt;Some were able to find one app by searching for it.&lt;/li&gt;
&lt;li&gt;Average non-critical errors for finding the app—2

&lt;ul&gt;
&lt;li&gt;5 users were able to locate the app; most after multiple attempts&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Average critical errors for finding the app—3.73

&lt;ul&gt;
&lt;li&gt;3 users were unable to locate the app added from the repo&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other places people looked

&lt;ul&gt;
&lt;li&gt;In categories thinking the latest apps added would be shown first&lt;/li&gt;
&lt;li&gt;In the latest view&lt;/li&gt;
&lt;li&gt;In settings &amp;gt; Manage installed apps&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do users understand that the apps added from a repo are only made available to them, and not auto-downloaded and installed?

&lt;ul&gt;
&lt;li&gt;Not really. It was hard to know for sure since the users never saw a list of those apps on the phone once they added the repo.&lt;/li&gt;
&lt;li&gt;It seemed that some participants were surprised to see that they still had to download the app Habitica after finding it via search.&lt;/li&gt;
&lt;li&gt;Many participants assumed the apps from a repo would download.&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feedback&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Currently, there’s no indication of completion.&lt;/li&gt;
&lt;li&gt;The experience of adding an app cannot end after they tap add. People are way too confused. Also, currently after tapping add, the app returns to the screen they were previously on within the app, which could be anything.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make apps accessible&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The user needs to immediately be able to see the apps they just added to their phone. Note: it should be clear that these are made available, but not downloaded automatically.&lt;/li&gt;
&lt;li&gt;The user needs to be able to access the apps within a repo later on.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Handle delay&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Is there a delay in the repo updating? We noticed that some people tried to search for an app that was within a repo they added, but even then, it didn’t show up.&lt;/li&gt;
&lt;li&gt;Update only the repo that was added instead of all. Not sure what the current behavior is.&lt;/p&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;task-g-last-task-add-the-collection-of-apps-displayed-on-the-computer-to-f-droid&#34;&gt;TASK G (Last Task) – Add the collection of apps displayed on the computer to F-Droid.&lt;/h1&gt;

&lt;p&gt;Average difficulty: 2.6&lt;/p&gt;

&lt;p&gt;Number of participants with critical errors: 0&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PARTICIPANT QUOTES&lt;/p&gt;

&lt;p&gt;“I followed the steps on the computer but wasn’t sure where the code from the QR scanner went. I added a new repository and there was a link already in it so I just clicked add, but have no idea what it did.”&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What we want feedback on&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are users able to add a repo from a collection they view on desktop?

&lt;ul&gt;
&lt;li&gt;Yes. Surprisingly, the majority of participants did not have trouble scanned the QR code and adding the repo.&lt;/li&gt;
&lt;li&gt;Same confusions as mentioned above about knowing if it worked and locating the repo.&lt;/li&gt;
&lt;li&gt;“I don’t know if it worked. How do I know if it worked?”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Is the word choice clear?

&lt;ul&gt;
&lt;li&gt;Somewhat. It didn’t trip people up from completing the task.&lt;/li&gt;
&lt;li&gt;Multiple people commented that the word repository didn’t resonate with them. They preferred the word Collections.&lt;/ul&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;u&gt;Suggestions for improvement:&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fix bugs&lt;/strong&gt; F-Droid crashed a lot after people scanned the code, opened F-Droid and tapped add. I think this was due to the phone being in landscape then portrait mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrate QR code scanner&lt;/strong&gt; within the add repo view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Word choice&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;PAGE_BREAK: PageBreak&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;additional-observations&#34;&gt;Additional Observations&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Concerns of Malware&lt;/strong&gt; While most participants were not keen on security and the potential risk of downloading apps from a source other than Google Play, one participant was keenly aware. He made multiple comments about how the app is an open door for malware.

&lt;ul&gt;
&lt;li&gt;**We need to address the security risks, and what F-Droid does to mitigate those risks. We need to be open and transparent in our communications to build trust.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tablet&lt;/strong&gt; Optimize the latest view for tablet. Show more grid tiles horizontally (i.e. display 3 instead of 2 in portrait mode) and increase font size.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;more-information-coming-soon&#34;&gt;More information coming soon!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Methodology (Note: All tasks were completed in different orders by the participants with the exception of Task G, which was always completed last.)&lt;/li&gt;
&lt;li&gt;Participant demographic&lt;/li&gt;
&lt;li&gt;Desirability toolkit&lt;/li&gt;
&lt;li&gt;Follow-up survey results&lt;/li&gt;
&lt;li&gt;Usability metrics &amp;amp; stats&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Build Android apps with Debian: apt install android-sdk</title>
      <link>https://guardianproject.github.io/info/2017/03/13/build-android-apps-with-debian-apt-install-android-sdk/</link>
      <pubDate>Mon, 13 Mar 2017 10:03:30 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/03/13/build-android-apps-with-debian-apt-install-android-sdk/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/04/debian.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/04/debian-150x150.jpg&#34; alt=&#34;&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12920&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/04/debian-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2015/04/debian-300x300.jpg 300w, https://guardianproject.info/wp-content/uploads/2015/04/debian-270x270.jpg 270w, https://guardianproject.info/wp-content/uploads/2015/04/debian-230x230.jpg 230w, https://guardianproject.info/wp-content/uploads/2015/04/debian.jpg 600w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
In Debian stretch, the upcoming new release, it is now possible to build Android apps using only packages from Debian. This will provide all of the tools needed to build an Android app targeting the “platform” &lt;tt&gt;android-23&lt;/tt&gt; using the SDK &lt;tt&gt;build-tools&lt;/tt&gt; 24.0.0. Those two are the only versions of “platform” and “build-tools” currently in Debian, but it is possible to use the Google binaries by installing them into &lt;tt&gt;/usr/lib/android-sdk&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;This doesn’t cover yet all of the libraries that are used in the app, like the Android Support libraries, or all of the other myriad libraries that are usually fetched from jCenter or Maven Central. One big question for us is whether and how libraries should be included in Debian. All the Java libraries in Debian can be used in an Android app, but including something like Android Support in Debian would be strange since they are only useful in an Android app, never for a Debian app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building apps with these packages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here are the steps for building Android apps using Debian’s Android SDK on Stretch.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo apt install android-sdk android-sdk-platform-23&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export ANDROID_HOME=/usr/lib/android-sdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In &lt;em&gt;build.gradle&lt;/em&gt;, set &lt;em&gt;compileSdkVersion&lt;/em&gt; to 23 and &lt;em&gt;buildToolsVersion&lt;/em&gt; to 24.0.0&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;gradle assembleDebug&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The Gradle Android Plugin is also packaged. Using the Debian package instead of the one from online Maven repositories requires a little configuration before running Gradle. In the &lt;em&gt;buildscript&lt;/em&gt; block:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add &lt;tt&gt;maven { url &amp;lsquo;file:///usr/share/maven-repo&amp;rsquo; }&lt;/tt&gt; to repositories&lt;/li&gt;
&lt;li&gt;use &lt;tt&gt;compile &amp;lsquo;com.android.tools.build:gradle:debian&amp;rsquo;&lt;/tt&gt; to load the plugin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Currently there is only the target platform of API Level 23 packaged, so only apps targeted at &lt;em&gt;android-23&lt;/em&gt; can be built with only Debian packages. We will add more API platform packages via backports. Only &lt;em&gt;build-tools&lt;/em&gt; 24.0.0 is available, so in order to use the SDK, build scripts need to be modified. Beware that the Lint in this version of Gradle Android Plugin is still problematic, so running the :lint tasks might not work. They can be turned off with &lt;tt&gt;lintOptions.abortOnError&lt;/tt&gt; in &lt;em&gt;build.gradle&lt;/em&gt;. Google binaries can be combined with the Debian packages, for example to use a different version of the platform or build-tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why include the Android SDK in Debian?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While Android developers could develop and ship apps right now using these Debian packages, this is not very flexible since only &lt;tt&gt;build-tools-24.0.0&lt;/tt&gt; and &lt;tt&gt;android-23&lt;/tt&gt; platform are available. Currently, we are not aiming to cover the most common use cases. Those are pretty well covered by Google’s binaries (except for the proprietary license on the Google binaries), and are probably the most work for the Debian Android Tools Team to cover. We are first working on use cases that are poorly covered by the Google binaries, for example, like where only specific parts of the whole SDK are used. Here are some we have in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tools for security researchers, forensics, reverse engineering, etc. which can then be included in live CDs and distros like Kali Linux&lt;/li&gt;
&lt;li&gt;a hardened APK signing server using &lt;em&gt;apksigner&lt;/em&gt; that uses a standard, audited, public configuration of all reproducibly built packages&lt;/li&gt;
&lt;li&gt;Replicant is a 100% free software Android distribution, so of course &lt;a href=&#34;http://blog.replicant.us/2017/02/replicant-6-0-development-updates/&#34; target=&#34;_blank&#34;&gt;they want to have a 100% free software SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;high security apps need a build environment that matches their level of security, the Debian Android Tools packages are &lt;a href=&#34;https://reproducible-builds.org&#34; target=&#34;_blank&#34;&gt;reproducibly built&lt;/a&gt; only from publicly available sources&lt;/li&gt;
&lt;li&gt;dead simple install with strong trust path with mirrors all over the world&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the long run, the &lt;a href=&#34;https://wiki.debian.org/AndroidTools&#34; target=&#34;_blank&#34;&gt;Debian Android Tools Team&lt;/a&gt; aims to cover more use cases well, and also building the Android NDK. This all will happen more quickly if we have more contributors! Android is the most popular mobile OS, and can be 100% free software like Debian. Debian and its derivatives are one of the most popular platforms for Android development.&lt;/p&gt;

&lt;p&gt;Last but not least, we want feedback on how this should all work. For example, we need ideas for how to nicely integrate Debian’s Java libraries into the Android &lt;em&gt;gradle&lt;/em&gt; workflow. And ideally, the Android Support libraries would also be reproducibly built and packaged somewhere that enforces only free software.&lt;/p&gt;

&lt;p&gt;For anyone interested in tools for working with Android apps and APKs, including for reverse engineering, inspection, auditing, etc. there are quite a few tools included now in Debian:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apt install android-sdk androguard apktool diffoscope dummydroid enjarify gplaycli libsmali-java libscout repo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>F-Droid now supports APK Expansion Files aka OBB</title>
      <link>https://guardianproject.github.io/info/2017/02/22/f-droid-now-supports-apk-expansion-files-aka-obb/</link>
      <pubDate>Wed, 22 Feb 2017 10:24:53 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/02/22/f-droid-now-supports-apk-expansion-files-aka-obb/</guid>
      <description>&lt;p&gt;Many games, mapping, and other apps require a large amount of data to work. The APK file of an Android app is limited to 100MB in size, yet it is common for a single country map file to be well over 100MB. Also, in order to get users running as quickly as possible, they should not have to wait for huge amounts of data to download in order to just start the app for the first time.&lt;/p&gt;

&lt;p&gt;Google created OBB aka “&lt;a href=&#34;https://developer.android.com/google/play/expansion-files.html&#34; target=&#34;_blank&#34;&gt;APK Expansion&lt;/a&gt;” files to provide a flexible means of delivering large amounts of data. This arragement also saves lots of bandwidth since app updates since the APK file and the OBB file can be updated separately. For example, a game’s assets do not need to change often, so they can be shipped as an OBB. Then when the app itself is updated (i.e. the APK), it does not need to include all those assets that are in the OBB file.&lt;/p&gt;

&lt;p&gt;OBB files are used by lots of apps like games and MAPS.ME. F-Droid supports OBB by downloading and installing the OBB before the APK, so that once the APK is installed, the OBB files are already in place and ready to use. F-Droid also provides an &lt;em&gt;Intent&lt;/em&gt; method for apps to fetch the OBB download URLs in case the app itself needs to handle the OBB download/update. That is similar to how it works in Google Play.&lt;/p&gt;

&lt;p&gt;In order to use the OBB support, users need at least F-Droid v0.102, and the repo must use &lt;em&gt;fdroidserver&lt;/em&gt; v0.7.0 or newer. Adding OBB files to a repo is very easy: just copy them to the same folder where the APKs go, i.e. &lt;em&gt;/path/to/fdroid/repo/&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer Usage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the details about using OBB files in apps is that OBB files are not guaranteed to be installed by the app store. That means the app could start, and the expected OBB files will not be there. In that case, the app must download and install the OBB file itself. Google Play recommends using their proprietary &lt;a href=&#34;https://developer.android.com/google/play/licensing/index.html&#34; target=&#34;_blank&#34;&gt;Application Licensing&lt;/a&gt; service for this, F-Droid provides a simple method that is all free software.&lt;/p&gt;

&lt;p&gt;To get the URL for the two possible OBB files, send an &lt;code&gt;Intent&lt;/code&gt; to F-Droid using these &lt;em&gt;Actions&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;org.fdroid.fdroid.action.GET_OBB_MAIN_URL&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.fdroid.fdroid.action.GET_OBB_PATCH_URL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then download that URL using your favorite method, and make sure that the file ultimately ends up in &lt;em&gt;Android/obb/&amp;lt;packageName&amp;gt;&lt;/em&gt; on the device’s External Storage.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build Your Own App Store: Android Media Distribution for Everyone</title>
      <link>https://guardianproject.github.io/info/2017/02/22/build-your-own-app-store-android-media-distribution-for-everyone/</link>
      <pubDate>Wed, 22 Feb 2017 09:45:11 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/02/22/build-your-own-app-store-android-media-distribution-for-everyone/</guid>
      <description>

&lt;p&gt;Most people get their Android apps from Google Play. It is usually the simplest and most secure option for them. But there are also many people who do not have access to Google Play. This might be due to lack of a proper internet connection or simply because Google Play is blocked within their country.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://f-droid.org/&#34;&gt;F-Droid&lt;/a&gt; project already offers &lt;a href=&#34;https://guardianproject.github.io/info/2015/06/02/building-a-trustworthy-app-store-that-respects-privacy/&#34;&gt;tools to create independent app distribution channels for Android apps&lt;/a&gt;. These tools are ready for production, but require expert knowledge and the command-line to be used. Now, we want to build upon this foundation and develop curation tools that can also be used by people with little technical knowledge, thus making the app distribution technology more broadly available.&lt;/p&gt;

&lt;h3 id=&#34;use-cases&#34;&gt;Use-Cases&lt;/h3&gt;

&lt;p&gt;The primary use-case we want to address is to circumvent app store censorship and blocking. But there are other use-cases that benefit from easy-to-setup app stores as well.&lt;/p&gt;

&lt;p&gt;There are Android phones and tablets that do not have Google Play available, either because their manufacturer did not get a license from Google or because their owners prefer their phones Google-free.&lt;/p&gt;

&lt;p&gt;Similar to Apple’s app store, the terms of service of Google Play exclude certain apps from being distributed and these are being removed on a regular basis. Having alternative means for distribution of apps is often the only way to bring those apps to people.&lt;/p&gt;

&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;

&lt;h4 id=&#34;core-features&#34;&gt;Core Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create a new app repository&lt;/li&gt;
&lt;li&gt;Add new apps/media to the repository&lt;/li&gt;
&lt;li&gt;Update existing apps/media to the repository&lt;/li&gt;
&lt;li&gt;Update the description and metadata of apps/media&lt;/li&gt;
&lt;li&gt;Remove apps/media from the repository&lt;/li&gt;
&lt;li&gt;Automatic generation of repository website with QR Code (and instructions)&lt;/li&gt;
&lt;li&gt;Import apps directly from other repositories&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;optional-future-features&#34;&gt;Optional Future Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Archive apps/media to archive repository&lt;/li&gt;
&lt;li&gt;Remove installed apps/media from user’s devices&lt;/li&gt;
&lt;li&gt;Provide hosted web-app with user-management (Sign-Up, Lost Password) as a service&lt;/li&gt;
&lt;li&gt;Allow multiple curators to manage the same repository&lt;/li&gt;
&lt;li&gt;Import apps (and their description) from Google Play&lt;/li&gt;
&lt;li&gt;Check for updates from Google Play periodically and automatically import them&lt;/li&gt;
&lt;li&gt;Making the repository available through the Tor network&lt;/li&gt;
&lt;li&gt;Generate custom white-labelled repository app (based on F-Droid)&lt;/li&gt;
&lt;li&gt;App security scanner for vulnerable libraries and Virus Total (opt-in) upload&lt;/li&gt;
&lt;li&gt;App browsing and download on generated repository website&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;target-audience&#34;&gt;Target Audience&lt;/h3&gt;

&lt;p&gt;The main audience for this work are activists and trainers with moderate technical knowledge who need to securely distribute apps and updates to their community. This is especially a concern in countries where the official app store is blocked. Organizations like Amnesty International for example still need to enable people in those countries to securely receive their apps and updates.&lt;/p&gt;

&lt;p&gt;The person maintaining the repository might use any operating system and in some cases might not even have a laptop/desktop computer available. They might be targeted by advanced attackers that can intercept and insert arbitrary traffic, but do not have the ability to compromise large service providers such as Amazon.&lt;/p&gt;

&lt;p&gt;Furthermore, this work might also be used by the following groups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;service providers (who want own distribution and update mechanism for their apps)&lt;/li&gt;
&lt;li&gt;individual software developers (who want to distribute beta releases for e.g. user-testing)&lt;/li&gt;
&lt;li&gt;everybody else who needs full control of the entire distribution and update process&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;implementation-options&#34;&gt;Implementation Options&lt;/h3&gt;

&lt;p&gt;There are roughly four different ways, the app store curation tool could be implemented. Each has their own pro and cons as well as different implications for the usability.&lt;/p&gt;

&lt;h4 id=&#34;command-line-interface&#34;&gt;Command-line interface&lt;/h4&gt;

&lt;p&gt;The current app repository tools are already used via the command-line, but they require some setup and several non-intuitive commands to be executed. The goal here would be to reduce the number of required commands as much as possible and make them easy to understand and remember. This would be similar to how Letsencrypt’s Certbot simplified SSL certificate management.&lt;/p&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;least amount of work building directly on existing tools&lt;/li&gt;
&lt;li&gt;signing key could be created and stored on local device&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;too difficult to use for people with no prior command-line experience&lt;/li&gt;
&lt;li&gt;off-putting and not inviting for potential non-expert curators&lt;/li&gt;
&lt;li&gt;adds little benefit to existing solution&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;cross-platform-desktop-application&#34;&gt;Cross-Platform Desktop Application&lt;/h4&gt;

&lt;p&gt;A graphical user interface (GUI) could be added to the existing tools to make them easier to use. Existing UI toolkits such as Qt, Gtk or Tcl/Tk could be used for this.&lt;/p&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;can make use of existing python tools&lt;/li&gt;
&lt;li&gt;signing key could be created and stored on local device&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;requires a desktop computer and installation procedure (possibly of dependencies as well)&lt;/li&gt;
&lt;li&gt;need to maintain and support install packages for Windows and MacOS&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;android-app&#34;&gt;Android App&lt;/h4&gt;

&lt;p&gt;The free software &lt;a href=&#34;https://f-droid.org&#34;&gt;F-Droid app&lt;/a&gt; already includes repository functionality used for direct app swapping. This could be modified to publish repositories to remote servers and extended by curation functionality. Alternatively, a new app could be developed that is dedicated to repository curation and could contrary to F-Droid even be distributed via Google Play.&lt;/p&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple installation&lt;/li&gt;
&lt;li&gt;No desktop computer required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Needs reimplementation of existing Python code in Java&lt;/li&gt;
&lt;li&gt;Signing key stored on potentially less secure mobile device&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;web-app&#34;&gt;Web App&lt;/h4&gt;

&lt;p&gt;The user interface for repository curation could be implemented as a web application that is accessed through a web browser. Low-risk curators could use a hosted instance for maximum simplicity while others could also access the interface through a local (built-in) web-server. Powerful web frameworks such as Flask or Django might be a good choice for that job.&lt;/p&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Very easy to use from every device&lt;/li&gt;
&lt;li&gt;Does not need installation (lower usage barrier)&lt;/li&gt;
&lt;li&gt;Can make use of existing python tools&lt;/li&gt;
&lt;li&gt;Makes multi-curator feature potentially easier to implement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In hosted mode: signing keys need to be stored permanently on a web server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;security-considerations&#34;&gt;Security Considerations&lt;/h3&gt;

&lt;h4 id=&#34;repository-attacks&#34;&gt;Repository Attacks&lt;/h4&gt;

&lt;p&gt;The technology used for app distribution needs to ensure the integrity and authenticity of apps provided in the repository. It can not prevent malicious apps from being &lt;em&gt;intentionally&lt;/em&gt; distributed, but can offer a security scanner to reduce the risk of unintentional distribution. An attack is considered successful when the content provided by the curator of the repository can be altered so that the changes propagate to users’ devices.&lt;/p&gt;

&lt;p&gt;Malicious apps might compromise the targeted application or the entire phones (root exploit). There are two defenses against unintentional distribution of malicious apps:&lt;/p&gt;

&lt;ol type=&#34;1&#34;&gt;
  &lt;li&gt;
    app package signatures: clients trust the provided app signature on first installation (TOFU) and refuse updates with a different signature.
  &lt;/li&gt;
  &lt;li&gt;
    repository signature: clients check signature when repository is installed and with every update. They warn and refuse operations with the repository when the signature is invalid.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first defense is out of scope for this work, because app packages are signed when the app is built so that they are already signed when added to the repository. The repository curation should still not allow to publish an update that carries a different signature.&lt;/p&gt;

&lt;p&gt;The second defense needs to be provided automatically by the curation tools. A repository signing key needs to be created and securely stored. If this key is compromised, an attacker can modify app metadata and can inject modified apps for specific or all users when they install them for the first time. Malicious updates of already installed apps are prevented by above package signature.&lt;/p&gt;

&lt;p&gt;If the repository key is created and stored automatically by a service (see implementation option 4), the curator needs to trust the service and the hosting provider. Both need to be out of reach of attackers from the curators’ threat-model. For example, if the Guardian Project provides a repository service hosted in Amazon’s Cloud, this service should be out of reach of most attackers that have neither the ability to compromise the Guardian Project, nor Amazon. Advanced nation-state adversaries could compromise both and thus the repository. Recipients of apps need to trust their distributors/curators and their ability to keep their own system secure.&lt;/p&gt;

&lt;p&gt;However, we can generally not protect against attackers who has the ability to directly compromise the users’ devices. All that can be done is to prevent malicious applications from being installed &lt;em&gt;via the repository&lt;/em&gt; (without knowledge of the curator). If the attacker can compromise users’ devices through other means, this defense does not matter anymore.&lt;/p&gt;

&lt;h4 id=&#34;root-and-unknown-sources&#34;&gt;Root and Unknown Sources&lt;/h4&gt;

&lt;p&gt;In order to get content from the provided repository onto a generic device, the user needs to install F-Droid which requires allowing the installation of apps from unknown sources. This can put the user at risk, because it makes installing malicious application very easy. Alternatively, super user privileges (root) can be used to install F-Droid’s system extension effectively trusting all apps installed via F-Droid. However, the security risks associated with super user privileges are even more severe as they can lead to compromise of the entire device.&lt;/p&gt;

&lt;h4 id=&#34;lack-of-updates&#34;&gt;Lack of Updates&lt;/h4&gt;

&lt;p&gt;If a repository is the user’s sole source for an application, any delay in providing updates might put the user at risk of an adversary exploiting a vulnerability in that application that would have otherwise been fixed by the missing update.&lt;/p&gt;

&lt;h3 id=&#34;what-we-will-do&#34;&gt;What We Will Do&lt;/h3&gt;

&lt;p&gt;The main goal of the curation tools is to make creating and maintaining repositories as easy as possible for our target audience.&lt;/p&gt;

&lt;p&gt;This rules out the command line and the desktop application, since today’s user experience expectations are no longer being fulfilled by these technologies. While a desktop application comes closer, the need for an installation procedure and for maintaining it for different operating systems makes it too difficult and error-prone compared to the two other remaining options.&lt;/p&gt;

&lt;p&gt;Implementing the curation tools within an Android application has its merits. It comes with an easy installation procedure, provides a familiar state-of-the-art user interface and allows apps to be added directly from the curators’ device. However, some existing functionality would need to be reimplemented in Java and maintained along-side the existing Python codebase. Also the curator needs to provide an external storage location for the repository which can be a barrier for many users and needs its own documentation.&lt;/p&gt;

&lt;p&gt;The easiest and most flexible solution is a web-application based on the existing Python tools. More advanced curators can use it on a local desktop computer with a built-in web-server just like a desktop application, only that the UI is in the browser. This usage scenario comes with the same pros and cons like the desktop application. The repository signing key for example is stored locally under the curator’s control.&lt;/p&gt;

&lt;p&gt;But it allows for other usage scenarios as well. If installed on a trusted web-server as a service, the curation tools can also be used by curators with little technical knowledge. The curators don’t need to install anything and can use them from any device. They can even switch devices without a data migration. However, they would need to give up control over the signing key.&lt;/p&gt;

&lt;p&gt;If time permits, the app store creator can be turned into a full repository service that allows user registrations and several repositories per user. A trusted organization such as the Guardian Project could host this as a service and provide it to an activist community. Software freedom would allow other organizations to host their own repository services as well. You can imagine the activist collective Riseup for example not only hosting its own repository of recommended apps, but also allowing its users to create and curate their own repositories.&lt;/p&gt;

&lt;p&gt;This becomes even more interesting when people fill their repositories not only with apps, but with all sorts of files such as books, music and photos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Imagining the challenges of developers in repressive environments</title>
      <link>https://guardianproject.github.io/info/2017/01/26/imagining-the-challenges-of-developers-in-repressive-environments/</link>
      <pubDate>Thu, 26 Jan 2017 09:56:59 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/01/26/imagining-the-challenges-of-developers-in-repressive-environments/</guid>
      <description>

&lt;p&gt;The Guardian Project team spends a lot of time thinking about users. In our work we focus on easy-to-use applications for users in high-risk scenarios. Because of this we are very focused on security. In our current work with the FDroid community to make it a secure, streamlined, and verifiable app distribution channel for high-risk environments we have started to become &lt;a href=&#34;https://guardianproject.info/2015/02/24/phishing-for-developers/&#34;&gt;more aware&lt;/a&gt; of the challenges and risks facing software developers who build software in high-risk environments.&lt;/p&gt;

&lt;p&gt;There are a wealth of resources available on how to support and collaborate with high-risk users. Unsurprisingly, we could not find any guidance on how to support and collaborate with developers in repressive environments, let alone developers who are put at high-risk because of the software they develop. So, we have started conducting “user research” with developers from a range of repressive environments.&lt;/p&gt;

&lt;p&gt;We started our user research by conducting surveys and interviews with Internet Freedom donors, developers, and CSOs about the challenges of being a, or working with, software developers in places where the internet is heavily monitored and filtered. We did this for two reasons. First, we want to make sure that the output produced is valuable to our target audience. Second, we wanted to see how this community viewed the challenges that these developers face. We are a little over ¾ done with our interviews and decided to share some initial thoughts from our interviews alongside that initial survey research.&lt;/p&gt;

&lt;h3 id=&#34;how-to-read-the-survey-results&#34;&gt;How to read the survey results&lt;/h3&gt;

&lt;p&gt;Each of the plots below shows how survey respondents ranked the level of challenge or negative impact specific factors had on the different phases of the development life-cycle. The survey split these rankings into categories that included the design (&lt;strong&gt;Des&lt;/strong&gt;) and development (&lt;strong&gt;Dev&lt;/strong&gt;) of software; deploying (&lt;strong&gt;Dep&lt;/strong&gt;) and maintaining (&lt;strong&gt;Maint&lt;/strong&gt;) software; and general threats (&lt;strong&gt;Thrt&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Participants were also asked to provide some basic information about their relationship to developers in repressive environments. We did this to explore the ways that experience might impact how some groups evaluate the challenges faced by developers in repressive environments. Using their answers we split the results into six groups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At Risk&lt;/strong&gt;: The type of of software development they, or those they interact with, could put either of them at risk.&lt;br /&gt;
&lt;strong&gt;Censor/Surv&lt;/strong&gt;: They are based in a place where the internet is heavily monitored filtered.&lt;br /&gt;
&lt;strong&gt;Not Censor/Surv&lt;/strong&gt;: They are not based in a place where the internet is heavily monitored filtered.&lt;br /&gt;
&lt;strong&gt;Collab&lt;/strong&gt;: They collaborate, support, or work with developers who are based in a place where the internet is heavily monitored or filtered.&lt;br /&gt;
&lt;strong&gt;Dev&lt;/strong&gt;: They develop Software&lt;br /&gt;
&lt;strong&gt;All&lt;/strong&gt;: Everyone who was surveyed.&lt;/p&gt;

&lt;p&gt;The initial survey was not designed to create accurate comparisons between groups who were surveyed and the data visualizations do not reflect the number of participants who declined to answer specific questions. It is also important to note that we asked participants to fill out the survey based upon the regions that they work in. Because of the possible identifying nature of participants responses we did not ask them to identify what regions those were. This had led to a wide variation in many of the responses.&lt;/p&gt;

&lt;h3 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h3&gt;

&lt;p&gt;Infrastructure plays a critical role in technological development. Software development, distribution, and use require an interconnected world of infrastructure. Only a small portion of this infrastructure is controlled and maintained by the developer. They also rely on a range of public and private infrastructure to provides power, connectivity, and financial support.&lt;/p&gt;

&lt;p&gt;To explore these topics we first asked about the challenge that barriers to Internet access played in the design (&lt;strong&gt;Des&lt;/strong&gt;) and development (&lt;strong&gt;Dev&lt;/strong&gt;) of software for developers in high-risk environments. Generally, respondents thought that it was a greater challenge for developers to design software for these environments than to conduct development in these environments.&lt;/p&gt;

&lt;div id=&#34;attachment_13476&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13476&#34; class=&#34;wp-image-13476 size-full&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/bandwidth-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/bandwidth-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13476&#34; class=&#34;wp-caption-text&#34;&gt;
    Internet/data bandwidth, connectivity, and/or cost
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;In our interviews we have heard that barriers to internet access can make it difficult to learn how to develop software and to easily get the libraries, documentation, and support that make developing software easier. It is not a universal challenge. Access varies widely depending upon the developer’s region. When it is a barrier it is often one of the largest barriers that is faced. We were happy to find that the challenges of designing software for users in areas with barriers to Internet access is one area where there is &lt;a href=&#34;https://developers.google.com/billions/&#34;&gt;existing guidance&lt;/a&gt; for developers in these regions.&lt;/p&gt;

&lt;p&gt;We also asked how a developer’s own infrastructure led to challenges when developing (&lt;strong&gt;Dev&lt;/strong&gt;), deploying (&lt;strong&gt;Dep&lt;/strong&gt;), and maintaining (&lt;strong&gt;Maint&lt;/strong&gt;) software.&lt;/p&gt;

&lt;div id=&#34;attachment_13477&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13477&#34; class=&#34;size-full wp-image-13477&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/dev_infra-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/dev_infra-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13477&#34; class=&#34;wp-caption-text&#34;&gt;
    Developer Infrastructure (e.g Hosting, setup, security, software)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;This topic, like barriers to internet access, had widely varying responses in the Interviews depending on the region the developer was based in. Unlike internet access, where technology was the root of the challenges the responses to these questions showed that legal challenges were the root of hosting challenges. In regions where international sanctions were in place this was a greater concern in the everyday experience of developers. Data localization was another more recent legal concern that was brought up in the interviews.&lt;/p&gt;

&lt;p&gt;Financial infrastructure and other economic challenges can impact various stages of the software lifecycle. Even FOSS developers need to make a living. To look at financial infrastructure we asked if access to payment systems was a challenge when designing (&lt;strong&gt;Des&lt;/strong&gt;) and developing (&lt;strong&gt;Dev&lt;/strong&gt;) software. We also asked about general challenges to monetizing and earning revenue when maintaining software and supporting users (&lt;strong&gt;Maint&lt;/strong&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_13478&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13478&#34; class=&#34;size-full wp-image-13478&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/money-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/money-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13478&#34; class=&#34;wp-caption-text&#34;&gt;
    Economics (payment, monetizing, &amp; earning revenue)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;As with many of the other questions payment and monetization challenges vary widely by region. Interviewers from areas with economic sanctions spoke of monetization as a greater challenge than any other group of interviewees. Because economic challenges vary so widely, we will hold off on discussing them in more depth until we are done with our analysis.&lt;/p&gt;

&lt;h3 id=&#34;localization&#34;&gt;Localization&lt;/h3&gt;

&lt;p&gt;Many developers face challenges far before they have to worry about their infrastructure. Not only are a majority of programming languages in English, many of the textbooks used to teach software development are in English as well. We asked our survey participants if localized software libraries, platforms, or developer documentation were a challenge for developers in high-risk environments when they were designing (&lt;strong&gt;Des&lt;/strong&gt;), developing (&lt;strong&gt;Dev&lt;/strong&gt;), and deploying (&lt;strong&gt;Dep&lt;/strong&gt;) software.&lt;/p&gt;

&lt;div id=&#34;attachment_13479&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13479&#34; class=&#34;size-full wp-image-13479&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/localization-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/localization-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13479&#34; class=&#34;wp-caption-text&#34;&gt;
    Localization of software libraries, platforms, or developer documentation
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Access to localized content was seen as a primary concern in almost every interview we have had with developers. In multiple interviews basic English language skills were even described as a requirement for any software development. Even developers with basic technical English skills spoke about the challenges of finding the appropriate tools and libraries because the descriptive documentation was difficult to skim. The lack of multi-language books, blog-posts, and forums also impedes access to best-practices and developer guidance.&lt;/p&gt;

&lt;h3 id=&#34;targeted-attacks&#34;&gt;Targeted Attacks&lt;/h3&gt;

&lt;p&gt;Attacks that focus on compromising the user through counterfeit software pirated by a user are not new. But, increased secondary and local markets for apps increase the possible otherwise legitimate locations where a malicious counterfeits of apps can be uploaded. We asked questions about impact of possible malicious counterfeit versions of their software being produced on how developers their design (&lt;strong&gt;Des&lt;/strong&gt;) and deploy (&lt;strong&gt;Dep&lt;/strong&gt;) their software. Targeted attacks against developers can be used to compromise their otherwise legitimate software to to deliver malicious content. We also asked about the challenges related to possible backdoors in the software or developer tools they used (&lt;strong&gt;Thrt&lt;/strong&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_13480&#34; style=&#34;width: 967px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13480&#34; class=&#34;size-full wp-image-13480&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png&#34; alt=&#34;&#34; width=&#34;957&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png 957w, https://guardianproject.info/wp-content/uploads/2016/12/malicious-300x89.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/malicious-768x229.png 768w&#34; sizes=&#34;(max-width: 957px) 100vw, 957px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13480&#34; class=&#34;wp-caption-text&#34;&gt;
    Malicious &amp; Counterfeit Software
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Only a couple of the developers we interviewed expressed concern about malicious counterfeit versions of their applications.&lt;/p&gt;

&lt;p&gt;While targeted attacks were acknowledged by some interviewees, most described the insertion of backdoors as less likely than targeted threats that aimed at stopping the developer from continuing development. The initial survey asked about the challenge of developer account shutdown and/or seizures during development (&lt;strong&gt;Dev&lt;/strong&gt;) and take-down requests (&lt;strong&gt;Thrt&lt;/strong&gt;) because of content restrictions, defamation laws, copyright claims, etc.&lt;/p&gt;

&lt;div id=&#34;attachment_13481&#34; style=&#34;width: 967px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13481&#34; class=&#34;size-full wp-image-13481&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png&#34; alt=&#34;&#34; width=&#34;957&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png 957w, https://guardianproject.info/wp-content/uploads/2016/12/takedown-300x89.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/takedown-768x229.png 768w&#34; sizes=&#34;(max-width: 957px) 100vw, 957px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13481&#34; class=&#34;wp-caption-text&#34;&gt;
    Account shutdown and/or seizures during development or software take-down requests
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The in-platform censorship we surveyed for was seen as far less a challenge in the interviews. Interviewees were far more concerned about the possibility of real-world legal censorship or harassment. When asked how developers addressed their perceived threats many of the interviewees noted that developers go beyond technological measures to protect themselves. Many also rely heavily on the strategic use of pseudonyms and other operational security measures.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;With our interviews nearly complete it is interesting to look back at, what seemed like, wide disagreement at the time of the survey as an indicator of how important local context is to the challenges and threats faced by developers in repressive societies. Over the next couple of months we will be building user personas that synthesize and codify our findings. We hope these personas will help other individuals and organizations working on internet freedom issues to think about how they can structure their projects to support and collaborate with developers in repressive environments in safe and productive ways.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building the most private app store</title>
      <link>https://guardianproject.github.io/info/2016/06/02/building-the-most-private-app-store/</link>
      <pubDate>Thu, 02 Jun 2016 11:08:52 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2016/06/02/building-the-most-private-app-store/</guid>
      <description>&lt;p&gt;&lt;em&gt;App stores can work well without any tracking at all&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/06/whichdoor.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/06/whichdoor-150x150.jpg&#34; alt=&#34;whichdoor&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-13337&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attackers are increasingly seeing app stores as a prime &lt;a href=&#34;https://guardianproject.info/2015/02/24/phishing-for-developers/&#34; target=&#34;_blank&#34;&gt;attack&lt;/a&gt; vector, whether it is aimed at the masses like &lt;a href=&#34;http://researchcenter.paloaltonetworks.com/2015/09/more-details-on-the-xcodeghost-malware-and-affected-ios-apps/&#34;&gt;XCodeGhost&lt;/a&gt; or very targeted like in FBI vs Apple. When we install software from an app store, we are placing a lot of trust in a lot of different parties involved in getting the source code from the original developer delivered to our device in a useful form. Most people are entirely unaware of how much trust they are putting into this system, which they are entrusting with their personal data. Even for people who do understand the technical details involved, figuring out whether the people and the system itself is trustworthy is difficult to do.&lt;/p&gt;

&lt;p&gt;We are building an app store that requires the bare minimum of trust: only the software developers themselves and the code they produce. We consider the app store operators and servers a threat. Building an ecosystem that enables automated, effective auditing lets the computers verify to make trust decisions easier. Effective external auditing requires an ecosystem that cannot deliver targeted content to just the auditing system, while feeding users something else (aka “binary transparency”).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Most app stores track as much as possible&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The vast majority of apps stores track their users actions in detail. Some is necessary when using the business model of the app store operator taking a percentage of sales, but none of the tracking is inherent to running an app store. For example, payment verification can be handled in the app itself like shareware. A software delivery system that tracks its users makes it simple to hide malware delivery since it can target any auditing system. Most app stores know a lot about their users:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;account name&lt;/li&gt;
&lt;li&gt;identity&lt;/li&gt;
&lt;li&gt;payment methods&lt;/li&gt;
&lt;li&gt;everything you search for in the app store&lt;/li&gt;
&lt;li&gt;everything you look at in the app store&lt;/li&gt;
&lt;li&gt;everything you download, install, uninstall&lt;/li&gt;
&lt;li&gt;which apps you actually run&lt;/li&gt;
&lt;li&gt;where you are, based on IP, declared preference, etc.&lt;/li&gt;
&lt;li&gt;your preferred language&lt;/li&gt;
&lt;li&gt;and more…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apps stores need to know very little in order to function: how to give you the files you request. That means indexes, descriptions, icons, apps, and install/delete requests (for “push” install/delete). Given that information, the client can do everything needed to provide a full app store user experience. For this work, we chose to build upon &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;, a community-run Android app store that distributes verified Free Software. The community has had an interest in privacy all along, and has always worked to avoid tracking. The security architecture is based on models proven by &lt;a href=&#34;https://wiki.debian.org/SecureApt&#34; target=&#34;_blank&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;https://github.com/theupdateframework/tuf/blob/develop/docs/tuf-spec.txt&#34; target=&#34;_blank&#34;&gt;The Update Framework&lt;/a&gt; , and others:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS connections by default&lt;/li&gt;
&lt;li&gt;pinned TLS certificate built into the client app&lt;/li&gt;
&lt;li&gt;updates verified based on the signature on the app itself&lt;/li&gt;
&lt;li&gt;file integrity protected by signed metadata&lt;/li&gt;
&lt;li&gt;signed metadata includes hashes of the app and its signing key&lt;/li&gt;
&lt;li&gt;signed metadata generated on a separate machine, which can be fully offline&lt;/li&gt;
&lt;li&gt;public key for verifying metadata signatures built into F-Droid client app&lt;/li&gt;
&lt;li&gt;signed metadata includes timestamp and expiry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the current setup is already a solid platform, we are implementing a number of improvements. The signed metadata will include list of official mirrors, then the client chooses mirrors based on availability and freshness based on local criteria like whether Tor is in use, closest on the internet, etc. We are also moving the standard HTTP “etag” cache check from the server to the client so it cannot be abused to track users.&lt;/p&gt;

&lt;p&gt;In order to defend against an attacker that holds the signing keys for the app repository, there must be a trustworthy source of information to compare against. Reproducible builds means that anyone with the same source code will produce the exact same binary. When paired with an auditing system, it is easy to catch malware inserted in the build process, rather than the source code, like XCodeGhost. Reproducible builds also makes it possible to have all builds of a release binary have the exact same hash. Then any app repository can build apps only from source code, and have a source of verification data from any other app repository building the same app. Building software from source has become cheap enough that many companies like gitlab.com and Travis CI are offering free, automated build services in the cloud. Since the whole F-Droid toolset is free software and designed to be easy to setup, the barriers to setting up automatic auditing are quite low. People in separate areas of the world with different risk profiles can run verification servers to provide more trustworthy information.&lt;/p&gt;

&lt;p&gt;Another key aspect of the F-Droid project is to provide the complete toolset needed to run an app store. This enables a more decentralized ecosystem. Therefore, one key goal is to lower the risks of running the services, so that more people can run their own app stores. If the app store does not track its users, then that removes the hassle of protecting personal data from any attacker. These services can be run without fear of responding to secret orders for personal information. It also means that the server setup is a lot simpler because it does not need dynamic content. The app store serve only needs to serve files (e.g. indexes, apps, etc.). The app repository is generated on a secure machine, or even a fully offline machine, and posted to the server. The main server is purely a mirror of the offline machine where the signed repository is generated. Mirrors just shuffle bits from place to place, they are no longer an attack vector.&lt;/p&gt;

&lt;p&gt;Putting all these pieces together provides a system where users need only audit the source code in order to verify a trustworthy app delivery. The file pipeline provides redundantly secure data transmission, the apps can be reproducibly from source code, the app repositories can be automatically audited. Of course, this system relies not only on the power of cryptography, but also the power of transparency. Debian provides a great example of the power of transparency: Debian gives a thousand volunteers root access to every Debian install (by virtue of their ability to upload signed packages that get installed as root). Yet this system has been proven over the past 20+ years to provide solid security. Ultimately we hope that this will de-emphasize the signing key as the sole protection against abuse. If malware has a decent change of being spotted, it makes it much less likely to be used since malware authors either rigorously defend their exploits, or use well known exploits that are not difficult to automatically detect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Future Work&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One attack vector that is not well covered is malware that installable by everyone, that then uses data on the local device to target specific users. That would be a way to target individuals using an app store that does not track its users. We are starting to implement automated dynamic analysis of every app using tools like &lt;a href=&#34;https://labs.mwrinfosecurity.com/tools/drozer&#34; target=&#34;_blank&#34;&gt;Drozer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are also working towards making as many apps as possible build reproducibly. Some of our quick checks show that a large number of the apps in f-droid.org already will build reproducibly, given the right build environment. We are working on making the process of setting up that build environment as automated as possible.&lt;/p&gt;

&lt;p&gt;The F-Droid “verification server” has been prototyped, and it will be further developed with the aim of making it dead simple to run in common cloud services.&lt;/p&gt;

&lt;p&gt;We already have the infrastructure in place to do verified double-signing, where the developer first signs the release bulid, then once f-droid.org reproduces that build, it adds its signature. Then Android would enforce that both signatures need to be present in order for it to be a valid update.&lt;/p&gt;

&lt;p&gt;As the full localization support is built out, the language that a user is using will not be reported to the server. While speaking Spanish in Spain does not provide much information, speaking Quechua in Uzbekistan can narrow it down to a single user. Instead of dividing the index metadata by language, it will instead be grouped by app. We will then group apps so that it is difficult to tell which app in the group is the one people are interested in. For example, if one very popular app is only grouped with apps that are rarely downloaded, then it is an easy assumption that someone getting info about that block of apps is most likely looking for that popular app.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Migrate Your Android App’s Signing Key</title>
      <link>https://guardianproject.github.io/info/2015/12/29/how-to-migrate-your-android-apps-signing-key/</link>
      <pubDate>Tue, 29 Dec 2015 12:03:54 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/12/29/how-to-migrate-your-android-apps-signing-key/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;It is time to update to a stronger signing key for your Android app! The old default RSA 1024-bit key is weak and officially deprecated.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;what&#34;&gt;What?&lt;/h2&gt;

&lt;p&gt;The Android OS requires that every application installed be signed by a digital key. The purpose behind this signature is to identify the author of the application, allow this author and this author alone to make updates to the app, as well as provide a mechanism to establish inter-application trust. The Android security model defines an app by two things: the package name (aka &lt;a href=&#34;https://developer.android.com/reference/android/content/Context.html#getPackageName%28%29&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;packageName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/applicationid-vs-packagename&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ApplicationID&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://developer.android.com/guide/topics/manifest/manifest-element.html#package&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;package&lt;/code&gt;&lt;/a&gt;) and the signing key. If either of those are different, then Android considers it a different app. When the package name and signing key of one APK match an installed app, then the APK is considered an update and Android will replace the installed app with the APK. If the APK is signed by a different key, then Android will prevent installing and updating.&lt;/p&gt;

&lt;p&gt;First thing is to see what the current signing key is. Check any app’s signing key using our free utility app &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.checkey&#34; target=&#34;_blank&#34;&gt;Checkey&lt;/a&gt;:&lt;/p&gt;

&lt;div id=&#34;attachment_13170&#34; style=&#34;width: 790px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/12/checkey-1.png&#34; rel=&#34;attachment wp-att-13170&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13170&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-1024x576.png&#34; alt=&#34;Lookout needs to generate a new key!&#34; width=&#34;780&#34; height=&#34;439&#34; class=&#34;size-large wp-image-13170&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-1024x576.png 1024w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-300x169.png 300w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-768x432.png 768w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-350x197.png 350w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1-860x484.png 860w, https://guardianproject.info/wp-content/uploads/2015/12/checkey-1.png 1280w&#34; sizes=&#34;(max-width: 780px) 100vw, 780px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13170&#34; class=&#34;wp-caption-text&#34;&gt;
    Lookout needs to generate a new key!
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The official Android docs have tons of useful information about what the signing keys are good for, how to generate them, and how to use them. Unfortunately, it doesn’t provide any instructions for migrating, and for many years, 1024-bit RSA was the default. But first, why would you want or need to migrate?&lt;/p&gt;

&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Depending on when you created your signing key, you might have a particularly weak key. The primary danger of a weak key is that an adversary could break your key in order to generate fake APK signatures. Then those malicious APKs can be installed as updates to your app. There are other nefarious purposes depending on how you use the signing key in your apps. Or if you are unfortunate enough to have suffered a loss of your private key material, then it is definitely time for a new signing key.&lt;/p&gt;

&lt;p&gt;According to our friends at the &lt;a href=&#34;https://androidobservatory.org/stats&#34; title=&#34;Android Observatory&#34;&gt;Android Observatory&lt;/a&gt;, over 64% of Android apps in their data store use 1024-bit signing keys (RSA or DSA).&lt;/p&gt;

&lt;div id=&#34;visualization&#34; style=&#34;width: 600px; height: 400px;&#34;&gt;
&lt;/div&gt;

&lt;p&gt;There are several good reasons to migrate off of 1024-bit RSA keys, even though there is no &lt;em&gt;public&lt;/em&gt; proof of a 1024 prime factorization required to generate any 1024-bit key at will. The evidence has been mounting for a decade.&lt;/p&gt;

&lt;p&gt;NIST’s &lt;a href=&#34;http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57_part1_rev3_general.pdf&#34;&gt;official guidelines&lt;/a&gt; (PDF, page 64 and 67) deprecated 1024-bit RSA keys at the end of 2013. This deprecation by NIST isn’t an indication that 1024-bit RSA is compromised, instead it is a preemptive move to stay ahead of attacks. Confidence in NIST might be shaken in light of &lt;a href=&#34;http://blog.cryptographyengineering.com/2013/09/on-nsa.html&#34;&gt;recent revelations&lt;/a&gt;, but in this case increasing the RSA key size is unlikely to trigger any secret NSA backdoors. If anything, the deprecation year could have been extended slightly to allow the NSA a window where they had the capacity to factor 1024-bit keys and everyone was still using them. So, it’s time to move on.&lt;/p&gt;

&lt;p&gt;For an example, a decade ago the cost of building special purpose hardware capable of breaking a single 1024-bit RSA key in one year was estimated at $10 million (&lt;a href=&#34;http://tau.ac.il/~tromer/papers/cbtwirl.pdf&#34;&gt;Adi Shamir, Eran Tromer, On the cost of factoring RSA-1024&lt;/a&gt;, 2003). Presumably the techniques have improved by orders of magnatude, and the hardware value depreciated. It is conceivable the cost has fallen enough to be affordable not only by nation-state actors, but by large criminal enterprises too.&lt;/p&gt;

&lt;p&gt;For a comprehensive talk on the state of the art (as of December 2012) when it comes to breaking 1024-bit RSA, check out the 29C3 talk &lt;a href=&#34;http://events.ccc.de/congress/2012/Fahrplan/events/5275.en.html&#34; title=&#34;FactHacks: RSA factorization in the real world&#34;&gt;FactHacks: RSA factorization in the real world&lt;/a&gt; with the cryptographers Daniel J. Bernstein, Nadia Heninger, and Tanja Lange (&lt;a href=&#34;http://events.ccc.de/congress/2012/wiki/Documentation#Recordings&#34; title=&#34;29C3 Recordings&#34;&gt;watch recording&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;

&lt;p&gt;Migrating to a strong key for an Android app is, unfortunately, not so simple. If you are publishing a &lt;em&gt;new&lt;/em&gt; app to the app store, then simply generate a new strong signing key and you’re done. Congratulations! However, there exists no easy way to update your signing key for an existing application, because an installed application can only take updates from an APK signed with &lt;em&gt;the same&lt;/em&gt; key.&lt;/p&gt;

&lt;p&gt;Here we outline a basic method with which you can use to fake an update to your signing key. This is not as user friendly as we would like. Some of the hard facts of performing this process is that for most app stores including Google Play, you will lose ratings and reviews since the app will show up with a new package name, and the app store will treat it like an entirely new app. Also, the user will have to manually uninstall the original app once they finish the procedure. Here is a rough outline of the process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;generate the new signing key, &lt;em&gt;RSA 4096&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Update the first app, &lt;em&gt;App1&lt;/em&gt;, with a mechanism for exporting private data, using &lt;a href=&#34;https://github.com/guardianproject/TrustedIntents&#34; target=&#34;_blank&#34;&gt;TrustedIntents&lt;/a&gt; with a signature pin of the new key, &lt;em&gt;RSA 4096&lt;/em&gt;, which &lt;a href=&#34;https://guardianproject.info/2014/07/30/introducing-trustedintents-for-android/&#34; target=&#34;_blank&#34;&gt;Checkey will generate for you&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a new version of the app with a different package name, &lt;em&gt;App2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;sign &lt;em&gt;App2&lt;/em&gt; with new key, &lt;em&gt;RSA 4096&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add method to &lt;em&gt;App2&lt;/em&gt; for receiving user data from &lt;em&gt;App1&lt;/em&gt;, including a signature pin of the old signing key, &lt;em&gt;RSA 1024&lt;/em&gt;, for use with TrustedIntents&lt;/li&gt;
&lt;li&gt;Publish &lt;em&gt;App2&lt;/em&gt; to the app stores&lt;/li&gt;
&lt;li&gt;From &lt;em&gt;App1&lt;/em&gt;, prompt user to install &lt;em&gt;App2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;runs and imports data from &lt;em&gt;App1&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;App2&lt;/em&gt; prompts user to uninstall &lt;em&gt;App1&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;, there will be some easier tools for handling this. The F-Droid system is already used to multiple signing keys per app since F-Droid uses its own signing key for many of the apps it releases, and that F-Droid signing key is different from the signing key that the original developer used in their Google Play uploads. F-Droid will likely be able to support APKs with the same package name but with multiple signing keys.&lt;/p&gt;

&lt;h3 id=&#34;a-note-on-compatibility&#34;&gt;A Note on Compatibility&lt;/h3&gt;

&lt;p&gt;There is security vs compatibility trade off a few might be interested in. Pre-4.3, Android did not support any signature algorithms except SHA1. With Android &amp;gt;= 4.3, SHA256 support was fixed, and SHA384, SHA512, and ECDSA were added (&lt;a href=&#34;https://code.google.com/p/android/issues/detail?id=38321&#34;&gt;source&lt;/a&gt;). There are still android 2.3.3 (&lt;code&gt;android-10&lt;/code&gt;) devices being sold, so anyone interested in backwards compatibility will have to heed this.&lt;/p&gt;

&lt;p&gt;Also, the larger the keysize and hashsize used, the longer it takes to install and update the application. So extremely large values might be unsuitable for slower hardware. The following probably doesn’t buy you a tremendous amount of additional security but cranks the paranoia to 11. It does so at the cost of compatibility and performance.&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
Gen with:&amp;lt;br /&amp;gt;
  keytool -genkey -v -keystore test.keystore -alias testkey -keyalg RSA -keysize 4096 -sigalg SHA512withRSA -dname &amp;quot;cn=Test,ou=Test,c=CA&amp;quot; -validity 10000&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Sign with:&amp;lt;br /&amp;gt;
  jarsigner -verbose -sigalg SHA512withRSA -digestalg SHA512 -keystore test.keystore test.apk testkey&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We have some scripts that we use to generate keys in our &lt;a href=&#34;https://github.com/guardianproject/smartcard-apk-signing&#34; target=&#34;_blank&#34;&gt;smartcard-apk-signing&lt;/a&gt; repo. It is also possible to generate an Android signing key using openssl or other libraries. It is often wise to use different software than standard for doing things like generating keys. Since the Java &lt;code&gt;keytool&lt;/code&gt; approach that is the standard, recommended method for Android, that makes it a target for adversaries that are interested in breaking keys. If a key was generated using &lt;code&gt;openssl&lt;/code&gt; or GNU TLS instead, for example, then that key would not be affected if &lt;code&gt;keytool&lt;/code&gt; had &lt;a href=&#34;https://freedom-to-tinker.com/blog/kroll/software-transparency-debian-openssl-bug/&#34; target=&#34;_blank&#34;&gt;a bug like Debian’s&lt;/a&gt; &lt;a href=&#34;https://security-tracker.debian.org/tracker/CVE-2008-0166&#34; target=&#34;_blank&#34;&gt;CVE-2008-0166&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Reproducible Builds Summit</title>
      <link>https://guardianproject.github.io/info/2015/12/09/first-reproducible-builds-summit/</link>
      <pubDate>Wed, 09 Dec 2015 05:02:48 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/12/09/first-reproducible-builds-summit/</guid>
      <description>&lt;p&gt;I was just in Athens for the “&lt;a href=&#34;https://reproducible-builds.org/events/athens2015/&#34;&gt;Reproducible Builds Summit&lt;/a&gt;“, an &lt;a href=&#34;https://aspirationtech.org/&#34; target=&#34;_blank&#34;&gt;Aspiration&lt;/a&gt;-run meeting focused on the issues of getting all software builds to be reproducible. This means that anyone starting with the same source code can build the &lt;em&gt;exact&lt;/em&gt; same binary, bit-for-bit. At first glance, it sounds like this horrible, arcane detail, which it is really. But it provides tons on real benefits that can save lots of time. And in terms of programming, it can actually be quite fun, like doing a puzzle or sudoku, since there is a very clear point where you have “won”.&lt;/p&gt;

&lt;p&gt;Here are some examples of real benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;makes it easy to ensure no malware was inserted into software during the build process (e.g. the &lt;a href=&#34;https://en.wikipedia.org/wiki/XcodeGhost&#34; target=&#34;_blank&#34;&gt;XCodeGhost&lt;/a&gt; malware we just saw)&lt;/li&gt;
&lt;li&gt;provides a QA tool to make sure that changes in the source code of a project produce only the expected results&lt;/li&gt;
&lt;li&gt;allows F-Droid to use the developer’s APK signature while still verifying that apps build from 100% free software&lt;/li&gt;
&lt;li&gt;make it possible to optimize and profile build processes while guaranteeing the results are exactly the same&lt;/li&gt;
&lt;li&gt;for large projects, it can greatly speed up the build process (think rebuilding Gmail)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Represented there was: &lt;a href=&#34;http://https//www.debian.org&#34; target=&#34;_blank&#34;&gt;Debian&lt;/a&gt;, Google, &lt;a href=&#34;https://www.freebsd.org/&#34; target=&#34;_blank&#34;&gt;FreeBSD&lt;/a&gt;, &lt;a href=&#34;https://getfedora.org/&#34; target=&#34;_blank&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;,&lt;br /&gt;
&lt;a href=&#34;http://brew.sh/&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://www.macports.org/&#34; target=&#34;_blank&#34;&gt;MacPorts&lt;/a&gt;, &lt;a href=&#34;https://www.netbsd.org/&#34; target=&#34;_blank&#34;&gt;NetBSD&lt;/a&gt;, &lt;a href=&#34;https://www.archlinux.org/&#34; target=&#34;_blank&#34;&gt;Arch Linux&lt;/a&gt;, &lt;a href=&#34;https://www.coreboot.org/&#34; target=&#34;_blank&#34;&gt;Coreboot&lt;/a&gt;, &lt;a href=&#34;https://openwrt.org/&#34; target=&#34;_blank&#34;&gt;OpenWRT&lt;/a&gt;, and a bunch of other&lt;br /&gt;
projects like an automotive Linux distro called &lt;a href=&#34;https://wiki.baserock.org/&#34; target=&#34;_blank&#34;&gt;Baserock&lt;/a&gt;, the &lt;a href=&#34;https://www.gnu.org/software/guix/&#34; target=&#34;_blank&#34;&gt;Guix&lt;/a&gt; package manager, a Linux distro called &lt;a href=&#34;https://nixos.org/&#34; target=&#34;_blank&#34;&gt;NixOS&lt;/a&gt;, &lt;a href=&#34;https://www.haskell.org/&#34; target=&#34;_blank&#34;&gt;Haskell&lt;/a&gt; hackers, etc.&lt;/p&gt;

&lt;p&gt;The organizers are already planning a second meeting, probably in April in Western Europe, and are looking to get more projects involved. Lots of people were talking about how it would be great to get some Android ROM developers involved. So if you are a contributor to CyanogenMod, Copperhead, &lt;a href=&#34;https://omnirom.org/&#34; target=&#34;_blank&#34;&gt;OmniROM&lt;/a&gt;, &lt;a href=&#34;http://www.replicant.us/&#34; target=&#34;_blank&#34;&gt;Replicant&lt;/a&gt;, Blackphone, etc. and would be interested in attending, please let us know!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CipherKit reproducible builds</title>
      <link>https://guardianproject.github.io/info/2015/09/21/cipherkit-reproducible-builds/</link>
      <pubDate>Mon, 21 Sep 2015 10:54:05 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/09/21/cipherkit-reproducible-builds/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk-150x150.jpg&#34; alt=&#34;alberti cipher disk&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-3079&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk.jpg 245w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have been on a kick recently with making our build process support “reproducible builds” aka “deterministic builds”. What is this reproducible thing? Basically, what that means is that you can run a script and end up with the &lt;em&gt;exact&lt;/em&gt; same binary file as our official releases, be it a APK, JAR, AAR, whatever. That lets anyone verify that our releases are produced only from the source in git, without including anything else, whether deliberately or accidentally (like malware).&lt;/p&gt;

&lt;p&gt;Our core CipherKit libraries are the more sensitive areas, so that’s where we’ve started. We generally work on Debian and Ubuntu and recommend that platform, but we recognized that OSX is a popular platform for Android developers also. So this process will work on OSX too, using your favorite package manager (e.g. Fink, MacPorts, or Homebrew).&lt;/p&gt;

&lt;p&gt;Then you will end up with &lt;code&gt;IOCipher-v0.3.zip&lt;/code&gt;, which includes the .jar and .so files. If your setup is close enough to our release build setup, the contents of that ZIP file will be the same as the official release. Right now, it is difficult to get the exact same binary file (e.g. the same sha256 sum) because of the timestamps in the .zip and varitions caused by using different versions of Java, and Android SDK and NDK. To check the contents of your build versus the official release:&lt;/p&gt;

&lt;pre&gt;sudo apt-get install faketime unzip wget meld
cd /tmp
wget https://guardianproject.info/releases/IOCipher-v0.3.zip
wget https://guardianproject.info/releases/IOCipher-v0.3.zip.sig
gpg --verify IOCipher-v0.3.zip.sig
git clone https://github.com/guardianproject/IOCipher
cd IOCipher
git checkout v0.3
./make-release-build
./compare-to-official-release IOCipher-v0.3.zip /tmp/IOCipher-v0.3.zip
&lt;/pre&gt;

&lt;h3 id=&#34;what-is-happening-here&#34;&gt;What is happening here?&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;meld&lt;/em&gt; (&lt;em&gt;FileMerge&lt;/em&gt; on OSX) will show a listing of all files listed, and which ones are different. You can see that the contents of the &lt;em&gt;.class&lt;/em&gt; files and &lt;em&gt;.so&lt;/em&gt; files all match, but there will be inevitable differences in some of the metadata. Native builds are much more sensitive to changes in the toolchain. The Java &lt;em&gt;.class&lt;/em&gt; files are usually reproducible even when using different versions of Java and the Android SDK. Native builds are almost never reproducible if the NDK version is at all different. Sometimes even the host platform where the NDK is running (e.g. Ubuntu vs OSX, or 64-bit vs 32-bit) will cause differences in the final binaries.&lt;/p&gt;

&lt;div id=&#34;attachment_13105&#34; style=&#34;width: 883px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-MANIFEST.MF-_tmp-IOCipher-v0.3-MANIFEST.MF-Meld.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13105&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-MANIFEST.MF-_tmp-IOCipher-v0.3-MANIFEST.MF-Meld.png&#34; alt=&#34;The NDK version and build platform are listed in the manifest.&#34; width=&#34;873&#34; height=&#34;591&#34; class=&#34;size-full wp-image-13105&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-MANIFEST.MF-_tmp-IOCipher-v0.3-MANIFEST.MF-Meld.png 873w, https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-MANIFEST.MF-_tmp-IOCipher-v0.3-MANIFEST.MF-Meld-300x203.png 300w&#34; sizes=&#34;(max-width: 873px) 100vw, 873px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13105&#34; class=&#34;wp-caption-text&#34;&gt;
    The NDK version and build platform are listed in the manifest.
  &lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;attachment_13104&#34; style=&#34;width: 883px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-_tmp-IOCipher-v0.3-Meld.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13104&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-_tmp-IOCipher-v0.3-Meld.png&#34; alt=&#34;The Java .class files are exactly the same, but the native .so files are not.&#34; width=&#34;873&#34; height=&#34;591&#34; class=&#34;size-full wp-image-13104&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-_tmp-IOCipher-v0.3-Meld.png 873w, https://guardianproject.info/wp-content/uploads/2015/09/Screenshot-.-IOCipher-v0.3-_tmp-IOCipher-v0.3-Meld-300x203.png 300w&#34; sizes=&#34;(max-width: 873px) 100vw, 873px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13104&#34; class=&#34;wp-caption-text&#34;&gt;
    The Java .class files are exactly the same, but the native .so files are not.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/09/1024px-End_CEST.svg_.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/09/1024px-End_CEST.svg_-150x150.png&#34; alt=&#34;faketime&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-13098&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/09/1024px-End_CEST.svg_-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2015/09/1024px-End_CEST.svg_-300x300.png 300w, https://guardianproject.info/wp-content/uploads/2015/09/1024px-End_CEST.svg_-200x200.png 200w, https://guardianproject.info/wp-content/uploads/2015/09/1024px-End_CEST.svg_.png 1024w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Timestamps are a very common issue when trying to reproduce a build. The release build process uses &lt;a href=&#34;https://github.com/wolfcw/libfaketime&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;faketime&lt;/code&gt;&lt;/a&gt; to provide consistent timestamps, which are picked from the git commit. &lt;code&gt;faketime&lt;/code&gt; freezes the clock entirely for native builds, so any timestamps from that process will always be exactly the same. Unfortunately, some parts of the &lt;code&gt;ant&lt;/code&gt; Java build rely on the clock moving forward, so freezing clock makes the build freeze forever. Instead, &lt;code&gt;faketime&lt;/code&gt; sets the clock using the time from the git commit, then moves time forward at 5% of the normal speed. That makes it much more likely that the timestamps will be the same, but usually what seems to happen is that the timestamps are 2 seconds off, which is the time resolution of the ZIP format. A better solution is needed here for JARs, they are easiest to verify using a sha256 sum. JAR signatures mostly seem not worth the pain they introduce. APKs signatures do not sign the whole APK, only the contents, so the varying timestamps do not matter when verifying using a APK signature. Another example of a difference: if comparing a debug build to a release build, then &lt;code&gt;BuildConfig.class&lt;/code&gt; will be difference because of the debug stuff. The sort order of the metadata in the jar MANIFEST.MF might also be different.&lt;/p&gt;

&lt;h3 id=&#34;the-end-goal&#34;&gt;The end goal&lt;/h3&gt;

&lt;p&gt;Reproducing builds is an arcane process, for sure. It is a means to an end. The goal is to get to the point where well known binaries, published in places like MavenCentral or jCenter, can easily be verified by anyone who cares to try. Or people could even set up &lt;a href=&#34;https://f-droid.org/wiki/page/Verification_Server&#34; target=&#34;_blank&#34;&gt;servers that automatically try&lt;/a&gt; to reproduce any JAR used in a project.&lt;/p&gt;

&lt;p&gt;Then people can verify those JARs in a fully decentralized manner, and publish certifications in their preferred format (GPG signatures, SHA256 sums for gradle-witness, etc). Then we can feel safe getting the release from anywhere on the internet, no matter the level of security or malware infestation.&lt;/p&gt;

&lt;p&gt;Towards that goal, we have been getting our libraries all nicely packaged up and submitted to jCenter (the default gradle repository for Android). Here are the relevant bits to include in your build.gradle:&lt;/p&gt;

&lt;pre&gt;compile &#39;info.guardianproject.cacheword:cachewordlib:0.1&#39;
compile &#39;info.guardianproject.iocipher:IOCipher:0.3&#39;
compile &#39;info.guardianproject.netcipher:netcipher:1.2&#39;
compile &#39;info.guardianproject.trustedintents:trustedintents:0.0&#39;

compile &#39;net.freehaven.tor.control:jtorctl:0.2&#39;
&lt;/pre&gt;

&lt;p&gt;SQLCipher-for-Android is coming soon:&lt;br /&gt;
&lt;a href=&#34;https://github.com/sqlcipher/android-database-sqlcipher/pull/197&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/sqlcipher/android-database-sqlcipher/pull/197&#34;&gt;https://github.com/sqlcipher/android-database-sqlcipher/pull/197&lt;/a&gt;&lt;/a&gt;&lt;br /&gt;
I hope to also get them up on MavenCentral as well, since that one is also quite common on Android, and is a community run resource versus Bintray’s jCenter, which is purely a for-profit company.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a trustworthy app store that respects privacy</title>
      <link>https://guardianproject.github.io/info/2015/06/02/building-a-trustworthy-app-store-that-respects-privacy/</link>
      <pubDate>Tue, 02 Jun 2015 16:38:03 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/06/02/building-a-trustworthy-app-store-that-respects-privacy/</guid>
      <description>&lt;p&gt;One core piece of our approach is thinking about very high risk situations, like Ai Weiwei or Edward Snowden, then making the tools for operating under that pressure as easy to use as possible. That means that we might occasionally come across as a little paranoid. It is important to dive into the depths of what might be possible. That is an essential step in evaluating what the risks and defenses are, and how to prioritize them. Making usable software is not just making things easy, but rather making tools for real world situations that are a simple as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/06/hrome-crash.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/hrome-crash.png&#34; alt=&#34;chrome crash&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-full wp-image-12966&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We recently received some vindication of our paranoia: we have been resistant to putting all of our trust into the Google Play app store, despite many obvious advantages. Even though Google Play is probably the most secure of the big app stores, its security approach is rather thin, &lt;a href=&#34;https://jon.oberheide.org/blog/2010/06/28/a-peek-inside-the-gtalkservice-connection/&#34; target=&#34;_blank&#34;&gt;relying mainly on HTTPS with no signature for verification&lt;/a&gt;, and the Five Eyes partnership (NSA, GCHQ, etc) noticed this, and &lt;a href=&#34;https://firstlook.org/theintercept/2015/05/21/nsa-five-eyes-google-samsung-app-stores-spyware&#34; target=&#34;_blank&#34;&gt;worked to exploit it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Android/Google Play security model is relatively simple, and that is mostly a good thing. There are two essential pieces: the signature on the APK file itself and the TLS connection to Google that provides the APK file. Once an app is installed, all APK files used to update an app must have a matching signing key. That provides a reasonably strong mechanism to defend against malware that wants to install over existing apps.&lt;/p&gt;

&lt;p&gt;Unlike package systems like Debian, there is no path to verify that the APK signing key. That means Google Play relies heavily on the TLS transport encryption to protect the APK files for when installing an Android apps for the first time. The first time an app is installed, the signing key in that app’s APK file is blindly trusted (this is called “Trust On First Use” or TOFU). It turns out that TOFU has a solid track record for security in the real world. One key aspect of implementing a good TOFU system is to make the first use indistinguishable from any other use, so that it is difficult to target only first uses while ignoring repeat uses. Intercepting repeat uses is very likely to trigger a warning and alert the user that something is wrong.&lt;/p&gt;

&lt;p&gt;Now let’s put together the pieces based on what the Chinese government can do. A few TLS certificate authorities have been caught &lt;a href=&#34;https://arstechnica.com//security/2010/03/govts-certificate-authorities-conspire-to-spy-on-ssl-users/&#34; target=&#34;_blank&#34;&gt;issuing &lt;/a&gt;&lt;a href=&#34;https://arstechnica.com//security/2011/08/earlier-this-year-an-iranian/&#34; target=&#34;_blank&#34;&gt;fake&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com//business/2012/02/critics-slam-ssl-authority-for-minting-cert-used-to-impersonate-sites/&#34; target=&#34;_blank&#34;&gt;certificates&lt;/a&gt;. A company affiliated with CNNIC &lt;a href=&#34;https://arstechnica.com/security/2015/04/google-chrome-will-banish-chinese-certificate-authority-for-breach-of-trust/&#34; target=&#34;_blank&#34;&gt;was caught issuing certificates for Google domains&lt;/a&gt;. A trusted certificate authority can issue usable certificates for any domain, so any computer that trusts CNNIC would trust their fake certificates for Google. That lets the Chinese government transparently Man-in-the-Middle traffic to Google servers. China could then use the Great Firewall to generate targeted malware on the fly, seeing the user credentials that Google Play requires, seeing the list of apps that each user has installed, etc. Then when the targeted user goes to install a new app, the APK file is intercepted, malware is added, then it is re-signed and transparently sent off to the user.&lt;/p&gt;

&lt;p&gt;This targeted malware can be designed to avoid the malware scanners in Google Play, Lookout, etc. since it would be direct addition of code rather than via an exploit. It would be just adding Java classes to the APK. Or alternatively, in combination with some of the signing exploits that have been discovered in Android, like &lt;a href=&#34;http://www.saurik.com/id/19&#34; target=&#34;_blank&#34;&gt;Master Key&lt;/a&gt;, the Great Firewall is able to inject malware into the real APK itself without changing the signature.&lt;/p&gt;

&lt;p&gt;Of course, when Google Play’s TLS connection includes X.509 &lt;a href=&#34;https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning&#34; target=&#34;_blank&#34;&gt;certificate pinning&lt;/a&gt;, then the above attack would not be possible since the client would have a whitelist of certificate authorities that it trusts for play.google.com, and CNNIC would probably not be on that whitelist. This highlights the importance of pinning certificate authorities in apps that need good security over TLS or HTTPS. All TLS connections &lt;a href=&#34;http://nelenkov.blogspot.com/2012/12/certificate-pinning-in-android-42.html&#34; target=&#34;_blank&#34;&gt;support pinning at the system level&lt;/a&gt; starting in Android 4.2. We are crazy enough to support down to Android 2.3 since there are lots of older Android devices in use, and even &lt;a href=&#34;https://arstechnica.com/gadgets/2014/12/android-2-3-gingerbread-four-years-later-the-os-just-wont-die/&#34; target=&#34;_blank&#34;&gt;new devices being sold with Android 2.3.3&lt;/a&gt;. That means we think about making apps self-contained in terms of security improvements like pinning.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/06/sadballs.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/sadballs-150x300.png&#34; alt=&#34;sad balls&#34; width=&#34;150&#34; height=&#34;300&#34; class=&#34;alignright size-medium wp-image-12969&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/sadballs-150x300.png 150w, https://guardianproject.info/wp-content/uploads/2015/06/sadballs.png 400w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It gets worse&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many indigenous app stores like &lt;a href=&#34;http://cafebazaar.ir&#34; target=&#34;_blank&#34;&gt;Cafe Bazaar&lt;/a&gt; and Xiaomi’s &lt;a href=&#34;http://app.mi.com&#34; target=&#34;_blank&#34;&gt;MiMarket&lt;/a&gt; lack basic protections like TLS, making targeted attacks trivial for governments, or even anyone who gains control of a piece of the network path. These days that is actually easy to do by exploiting home routers, which are &lt;a href=&#34;https://arstechnica.com/security/2015/05/researchers-uncover-self-sustaining-botnets-of-poorly-secured-routers/&#34; target=&#34;_blank&#34;&gt;generally&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com/security/2015/04/no-patch-for-remote-code-execution-bug-in-d-link-and-trendnet-routers/&#34; target=&#34;_blank&#34;&gt;easy&lt;/a&gt; to &lt;a href=&#34;https://arstechnica.com/security/2015/05/the-moose-is-loose-linux-based-worm-turns-routers-into-social-network-bots/&#34; target=&#34;_blank&#34;&gt;exploit&lt;/a&gt;. One of those botnets would easily start looking for app installs in the network traffic, then add exploits accordingly. As long as the first install is easy to detect and the user easy to track, then the malware can transparently inject malware designed to be difficult to detect by malware scanners and people alike.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png&#34; alt=&#34;fdroidheader3&#34; width=&#34;720&#34; height=&#34;180&#34; class=&#34;alignnone size-full wp-image-11906&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png 720w, https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3-300x75.png 300w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;The Alternative&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;FDroid&lt;/a&gt; also has the key advantage of being designed from the beginning to avoid tracking users, and to use proven methods of delivering software, following the signed repository model of Debian, Ubuntu, etc. but then served over a solid HTTPS channel for increased privacy and a backup layer of security. It is also possible to use privacy proxies like Tor or I2P via the proxy settings. There is no user credentials needed, it is all free software, so FDroid users can even hide themselves from the server delivering the apps, as well as any network observers. Since all APKs are delivered via signed metadata that is verified using a key built into the FDroid client app, there is no risk of getting served malware even if the HTTPS connection is completely and transparently broken.&lt;/p&gt;

&lt;p&gt;As part of our &lt;a href=&#34;https://dev.guardianproject.info/project/bazaar/wiki&#34; target=&#34;_blank&#34;&gt;Bazaar Project&lt;/a&gt;, we have been putting more and more efforts into the FDroid project, and working to make it much easier to use. All Guardian Project apps are available in FDroid, as well as all the core apps that you might need like Firefox, a Twitter client, K-9 email, etc. Tech journalist &lt;a href=&#34;https://medium.com/backchannel/why-i-m-saying-goodbye-to-apple-google-and-microsoft-78af12071bd&#34; target=&#34;_blank&#34;&gt;Dan Gillmor agrees&lt;/a&gt;: free software that respects privacy is not only for the über-geek anymore.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Android tools into Debian</title>
      <link>https://guardianproject.github.io/info/2015/04/30/getting-android-tools-into-debian/</link>
      <pubDate>Thu, 30 Apr 2015 11:13:26 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/04/30/getting-android-tools-into-debian/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/04/debian.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/04/debian-150x150.jpg&#34; alt=&#34;debian&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12920&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/04/debian-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2015/04/debian-300x300.jpg 300w, https://guardianproject.info/wp-content/uploads/2015/04/debian-270x270.jpg 270w, https://guardianproject.info/wp-content/uploads/2015/04/debian-230x230.jpg 230w, https://guardianproject.info/wp-content/uploads/2015/04/debian.jpg 600w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/04/android.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/04/android-150x150.png&#34; alt=&#34;android&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12919&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/04/android-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2015/04/android-270x270.png 270w, https://guardianproject.info/wp-content/uploads/2015/04/android-230x230.png 230w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As part of Debian’s project in Google &lt;a href=&#34;https://wiki.debian.org/SummerOfCode2015&#34; target=&#34;_blank&#34;&gt;Summer of Code&lt;/a&gt;, I’ll be working with two students, Kai-Chung Yan and Komal Sukhani, and another mentor from the &lt;a href=&#34;https://wiki.debian.org/Teams/JavaPackaging&#34; target=&#34;_blank&#34;&gt;Debian Java Team&lt;/a&gt; team, &lt;a href=&#34;https://&amp;#x71;a&amp;#x2e;d&amp;#x65;b&amp;#x69;a&amp;#x6e;.&amp;#x6f;r&amp;#x67;/dev&amp;#x65;l&amp;#x6f;p&amp;#x65;r&amp;#x2e;p&amp;#x68;p&amp;#x3f;l&amp;#x6f;gin=&amp;#x61;p&amp;#x6f;@&amp;#x67;a&amp;#x6d;b&amp;#x61;r&amp;#x75;.&amp;#x64;e&#34; target=&#34;_blank&#34;&gt;Markus Koschany&lt;/a&gt;. We are going to be working on getting the Android SDK and tools into Debian, as part of the Debian &lt;a href=&#34;https://wiki.debian.org/AndroidTools&#34; target=&#34;_blank&#34;&gt;Android Tools&lt;/a&gt; team, building upon the existing work already included from the Java and &lt;a href=&#34;https://wiki.debian.org/Teams/AndroidTools&#34; target=&#34;_blank&#34;&gt;Android Tools&lt;/a&gt; teams. This project is in conjunction with the Java team since there is overlap between Android and Java tools, like &lt;code&gt;gradle&lt;/code&gt;, &lt;code&gt;maven&lt;/code&gt;, etc. Since this work is in Debian, all of the Debian-derivatives will automatically inherit this work. That includes: Ubuntu, Mint, Elementary, and many more.&lt;/p&gt;

&lt;p&gt;The first question a lot of Android developers are probably asking is: why would we want to put the Android tools into Debian when there is already an official distribution from Google with it’s own update tools? It turns out there are many reasons, mostly centered around making things much easier to use, as well as addressing some key security concerns. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;automatic trustworthy downloads, no need to verify hash sums or think about HTTPS&lt;/li&gt;
&lt;li&gt;eliminate need for insecure wrapper scripts, like &lt;code&gt;./gradlew&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;easy install and update channel that all Debian users already know&lt;/li&gt;
&lt;li&gt;trivial install for specific tools, like &lt;code&gt;adb&lt;/code&gt;, &lt;code&gt;fastboot&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;setting up a Debian/Ubuntu/etc box for Android development is easier when everything is included&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing-150x150.jpg&#34; alt=&#34;320px-Trawling_Drawing&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12873&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing-230x230.jpg 230w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The most glaring issue from my point of view is the security issues in &lt;code&gt;gradle&lt;/code&gt;. It will happily download and execute code without any kind of verification whatsoever. It inherits this terrible practice from maven, which has been shown to be an &lt;a href=&#34;http://blog.ontoillogical.com/blog/2014/07/28/how-to-take-over-any-java-developer/&#34; target=&#34;_blank&#34;&gt;easy path to exploit anyone using it&lt;/a&gt;. This is especially concerning considering that developers are more and more &lt;a href=&#34;https://guardianproject.info/2015/02/24/phishing-for-developers/&#34; target=&#34;_blank&#34;&gt;being directly targeted&lt;/a&gt;. At least it is more common for &lt;code&gt;gradle&lt;/code&gt; configs to use HTTPS, but it is still quite easy mess up a config and force users to use HTTP instead. Fragile configs are really bad for security. Even if &lt;a href=&#34;https://github.com/WhisperSystems/gradle-witness&#34; target=&#34;_blank&#34;&gt;gradle-witness&lt;/a&gt; is used to pin the hash for the jars used in the project, &lt;code&gt;gradle-wrapper&lt;/code&gt; might still downloading insecure code an executing it immediately, giving attackers potential full user access to that machine. That is because &lt;code&gt;gradle-wrapper&lt;/code&gt; will download versions of &lt;code&gt;gradle&lt;/code&gt; that it needs, and &lt;code&gt;gradle-witness&lt;/code&gt; can not be used to pin the hash of the &lt;code&gt;gradle&lt;/code&gt; files. And the repositories that &lt;code&gt;gradle&lt;/code&gt; uses only provide methods to protect against network-based attacks. If the server that holds the jars is exploited, the attacker can replace the jars and the sum files at the same time. There is &lt;a href=&#34;https://github.com/gradle/gradle/pull/448&#34; target=&#34;_blank&#34;&gt;a pull request open for &lt;code&gt;gradle&lt;/code&gt;&lt;/a&gt; to allow pinning of the &lt;code&gt;gradle&lt;/code&gt; executables themselves, which will help this situation.&lt;/p&gt;

&lt;p&gt;On a different note, many people who are not developers at all want to use tools like &lt;code&gt;adb&lt;/code&gt; and &lt;code&gt;fastboot&lt;/code&gt; to access their Android device, or even root it. Having them in Debian means they are trivial for people to install, vastly easier than trying to figure out how to download and install the Android SDK. What lots of people end up doing instead is downloading random binaries from insecure internet forums and using those. For many devices, it is already possible to use only tools in Debian to root the device. As we get more of the Android tools packaged and updated in Debian, that will become the norm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updates when you need them, built upon a stable base&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One common complaint about packages in Debian is that they are old and outdated. It is part of the core mission of Debian/stable to provide an operating system that changes as little as possible. That mission is contrary to what most developers need from their SDKs and sometimes even the development tools. But stability is also important for developers as well. For example, tools like &lt;code&gt;make&lt;/code&gt;, used to build native code using the Android NDK (&lt;code&gt;ndk-build&lt;/code&gt; is a &lt;code&gt;make&lt;/code&gt; script) and even Android itself, has been around a long time and is used in so many projects. That is a tool that almost every developer wants to have very stable.&lt;/p&gt;

&lt;p&gt;For the packages that developers need to have completely up-to-date, like the Android SDK itself, there are many options for distribution. Ubuntu Personal Package Archives (PPA) have proven easy and useful for exactly this kind of thing, and Debian is working on adding support for PPAs. Official repositories for &lt;a href=&#34;http://backports.debian.org/&#34; target=&#34;_blank&#34;&gt;backports&lt;/a&gt; are another avenue for timely updates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Help us figure this out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We want lots of feedback on how to do this right! A great example is how to best support the various versions of &lt;code&gt;gradle&lt;/code&gt;. It seems to me that &lt;code&gt;gradle&lt;/code&gt; is starting to stabilize, and it is no longer necessary to track very specific releases of &lt;code&gt;gradle&lt;/code&gt;. For example, &lt;code&gt;gradle&lt;/code&gt; v2.2.1 will work well with projects that were setup with just about any v2.x version. And projects still using 1.x, they mostly seem to work using v1.12. So if this is the case, then this fits into a common pattern with build tools in Debian:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GNU Compiler Collection is packaged as &lt;code&gt;gcc4.8&lt;/code&gt;, &lt;code&gt;gcc4.7&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;Apache Maven is packaged as &lt;code&gt;maven&lt;/code&gt; and &lt;code&gt;maven2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GNU automake is packaged as &lt;code&gt;automake1.14&lt;/code&gt;, &lt;code&gt;automake1.13&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m currently thinking that the best solution for gradle is like Maven, with the package called &lt;code&gt;gradle&lt;/code&gt; (v2.3) being the most up-to-date in conjunction with specific packages to support older versions, like &lt;code&gt;gradle1&lt;/code&gt; (v1.12). But maybe it makes sense to do something like gcc, with a gcc meta-package to install the currently best supported version, then all versions packaged with name that includes that version, i.e. a gradle meta-package with &lt;code&gt;gradle1&lt;/code&gt;, &lt;code&gt;gradle2&lt;/code&gt;, &lt;code&gt;gradle3&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;Other issues that we will have to grapple with include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how to package various NDK versions?&lt;/li&gt;
&lt;li&gt;How do we best work with the upstream Android team?&lt;/li&gt;
&lt;li&gt;is packaging Android Studio feasible?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also hope to provide an example that any other packaging systems can learn from and build upon. GNU/Linux distros like Arch and Fedora are the obvious ones, but also projects like Homebrew, MacPorts, and Cygwin could also use this work to include Android tools as packages in their system. Indeed, some of the work already included in Debian was derived from &lt;a href=&#34;https://wiki.archlinux.org/index.php/Android#Android_SDK_core_components&#34; target=&#34;_blank&#34;&gt;some Arch packages&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Phishing for developers</title>
      <link>https://guardianproject.github.io/info/2015/02/24/phishing-for-developers/</link>
      <pubDate>Tue, 24 Feb 2015 04:41:29 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/02/24/phishing-for-developers/</guid>
      <description>&lt;p&gt;I recently received a very interesting phishing email directed at developers with apps in Google Play. One open question is, how targeted it was: did anyone else get this?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File:Trawling_Drawing.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing.jpg&#34; alt=&#34;320px-Trawling_Drawing&#34; width=&#34;320&#34; height=&#34;240&#34; class=&#34;alignright size-full wp-image-12873&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing.jpg 320w, https://guardianproject.info/wp-content/uploads/2015/02/320px-Trawling_Drawing-300x225.jpg 300w&#34; sizes=&#34;(max-width: 320px) 100vw, 320px&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
It turns out that Google has been recently stepping up enforcement of certain terms, so it looks like some people are taking advantage of that. It is a pretty sophisticated or manually targeted phishing email since they got the name of the app, email address, and project name all correct. The one detail that gives it away is that the &lt;code&gt;From:&lt;/code&gt; address uses the fake domain, even though it would have been possible to send the email using the actual Google account in the &lt;code&gt;From:&lt;/code&gt; field. But this likely would have triggered spam and malware detection algorithms. So they took a subtly different approach by using a real Google address in the &lt;code&gt;Reply-To:&lt;/code&gt;. But they were clever enough to use the same sub-domain, &lt;code&gt;gooogle.com.de&lt;/code&gt;, in the From: address as in the phishing link &lt;code&gt;accounts.gooogle.com.de&lt;/code&gt;, following a Google pattern of subdomains. They also included other real Google links for support and as a “follow up” URL.&lt;/p&gt;

&lt;p&gt;When I received this, I didn’t notice the clickable link in the email since I never view HTML email. I forwarded it on to our internal email list where others figured out it was fake. In the HTML version of the email, it has this link from the fake domain &lt;code&gt;accounts.gooogle.com.de&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;p&gt;&lt;b&gt;Your application will be removed&lt;/b&gt; if you do not sign in to the &lt;a
href=&#34;http://accounts.gooogle.com.de/ServiceLogin?service=androiddeveloper&amp;passive=1209600&amp;continue=https://play.google.com/apps/publish/&amp;followup=https://play.google.com/apps/publish/&amp;type=3days&amp;pkg=org.torproject.android&#34;&gt;Developer
Console&lt;/a&gt;
&lt;/pre&gt;

&lt;p&gt;This attacker might have been targeting anyone who would fall for the trick, without really caring what kind of app it was. For any accounts that the attacker got access to, they would be able to change the description text, home page, email address, etc. transparently without raising any particular warning signs. The attacker could place a recommendation in the app descriptions to also install another app, and that app would be the attacker’s malware.&lt;/p&gt;

&lt;p&gt;The attacker could not upload their own updates to an existing app, because Google Play checks uploaded APKs to make sure that the signing keys match the APKs that are already there. The attacker could create a whole new app in that developer’s account, and hope to gain installs since it would be related. Google Play has a standard view to show users apps by the same developer, for example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two-factor authentication and beyond&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a developer fell for this phishing attack, but had the forethought to have set up &lt;a href=&#34;https://support.google.com/accounts/answer/180744&#34; target=&#34;_blank&#34;&gt;Google 2-Step Verification&lt;/a&gt;, then even if the phisher got the username and password, they would be unable to log into that account since they would not have access to the two-factor SMS or &lt;a href=&#34;https://support.google.com/accounts/answer/1066447&#34; target=&#34;_blank&#34;&gt;Google Authenticator&lt;/a&gt; message. All developer accounts on Google Play should be required to use Google 2-Step Verification. Set it up &lt;strong&gt;now&lt;/strong&gt;, if you have not already!&lt;/p&gt;

&lt;p&gt;We also need to consider the kinds of sophisticated attacks from large state actors that are leaking out to the public. Indeed, many of these attacks are also available for any government to &lt;a href=&#34;https://netzpolitik.org/2014/gamma-finfisher-hacked-40-gb-of-internal-documents-and-source-code-of-government-malware-published/&#34; target=&#34;_blank&#34;&gt;purchase from companies like Finfisher&lt;/a&gt;. And it is only a matter of time before these techniques are widespread and easier, following the rule of “attacks never get worse; they only get better”. This phishing website could also contain malicious Javascript that installs malware that can both log all key strokes in search of passwords, as well as search for known secret caches like Java keystores for Android signing keys, and browser cookies that allow the user to skip two-factor authentication, like the &lt;a href=&#34;https://support.google.com/accounts/answer/2544838&#34; target=&#34;_blank&#34;&gt;cookie from Google’s two-step authentication&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One takeaway here: developers should &lt;strong&gt;never&lt;/strong&gt; keep or use their APK signing keys on a machine that they also use to read email and browse the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full source of the email&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the full source of the original email that I received, for those who might be interested in digging deeper. Another detail you can see there is that the email was not sent using Google infrastructure at all.&lt;/p&gt;

&lt;pre&gt;Return-Path: &lt;n&amp;#x6f;&amp;#x72;e&amp;#x70;&amp;#x6c;y&amp;#x2d;&amp;#x64;e&amp;#x76;&amp;#x65;l&amp;#x6f;&amp;#x70;e&amp;#x72;&amp;#x2d;g&amp;#x6f;&amp;#x6f;g&amp;#x6c;&amp;#x65;p&amp;#x6c;&amp;#x61;y&amp;#x40;&amp;#x67;o&amp;#x6f;&amp;#x6f;gl&amp;#x65;.c&amp;#x6f;m.&amp;#x64;e&gt;
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on
    rodolpho.mayfirst.org
X-Spam-Level: *
X-Spam-Status: No, score=1.3 required=5.0 tests=HTML_MESSAGE,RDNS_NONE
    autolearn=disabled version=3.3.2
X-Original-To: s&amp;#x75;p&amp;#x70;o&amp;#x72;t&amp;#x40;gu&amp;#x61;r&amp;#x64;i&amp;#x61;n&amp;#x70;ro&amp;#x6a;e&amp;#x63;t&amp;#x2e;i&amp;#x6e;f&amp;#x6f;
Delivered-To: gphan&amp;#x73;&amp;#x40;&amp;#x72;&amp;#x6f;&amp;#x64;olpho&amp;#x2e;&amp;#x6d;&amp;#x61;&amp;#x79;&amp;#x66;irst.&amp;#x6f;&amp;#x72;&amp;#x67;
Received: from rodolpho.mayfirst.org (localhost [127.0.0.1])
    by rodolpho.mayfirst.org (Postfix) with ESMTP id 4CFCD5E3D
    for &lt;&amp;#x73;&amp;#x75;&amp;#x70;port@&amp;#x67;&amp;#x75;&amp;#x61;&amp;#x72;dian&amp;#x70;&amp;#x72;&amp;#x6f;&amp;#x6a;ect.&amp;#x69;&amp;#x6e;&amp;#x66;&amp;#x6f;&gt;; Fri, 20 Feb 2015 04:30:50 -0500 (EST)
X-Greylist: delayed 543 seconds by postgrey-1.34 at rodolpho; Fri, 20 Feb 2015
04:30:49 EST
Received: from astra1695.startdedicated.com (unknown [85.25.194.40])
    by rodolpho.mayfirst.org (Postfix) with ESMTP id D74C83CD84
    for &lt;sup&amp;#x70;&amp;#x6f;&amp;#x72;t@g&amp;#x75;&amp;#x61;&amp;#x72;dia&amp;#x6e;&amp;#x70;&amp;#x72;ojec&amp;#x74;&amp;#x2e;&amp;#x69;nfo&gt;; Fri, 20 Feb 2015 04:30:48 -0500 (EST)
Received: from gooogle.com.de (astra1695 [85.25.194.40])
    by astra1695.startdedicated.com (Postfix) with ESMTPA id 209D57C0918
    for &lt;su&amp;#x70;&amp;#x70;or&amp;#x74;&amp;#x40;gua&amp;#x72;&amp;#x64;ia&amp;#x6e;&amp;#x70;ro&amp;#x6a;&amp;#x65;ct.&amp;#x69;&amp;#x6e;fo&gt;; Fri, 20 Feb 2015 10:21:32 +0100 (CET)
Date: Fri, 20 Feb 2015 09:21:32 +0000
To: The Tor Project &lt;&amp;#x73;u&amp;#x70;p&amp;#x6f;rt&amp;#x40;g&amp;#x75;ar&amp;#x64;i&amp;#x61;np&amp;#x72;o&amp;#x6a;e&amp;#x63;&amp;#x74;.&amp;#x69;n&amp;#x66;o&gt;
From: Google Play Developer Support &lt;n&amp;#x6f;r&amp;#x65;p&amp;#x6c;y&amp;#x2d;de&amp;#x76;e&amp;#x6c;o&amp;#x70;e&amp;#x72;-g&amp;#x6f;o&amp;#x67;l&amp;#x65;p&amp;#x6c;a&amp;#x79;@g&amp;#x6f;o&amp;#x6f;g&amp;#x6c;e&amp;#x2e;co&amp;#x6d;.&amp;#x64;e&gt;
Reply-To: Google Play Developer Support &lt;norepl&amp;#x79;&amp;#x2d;&amp;#x64;&amp;#x65;&amp;#x76;&amp;#x65;loper-g&amp;#x6f;&amp;#x6f;&amp;#x67;&amp;#x6c;&amp;#x65;&amp;#x70;lay@go&amp;#x6f;&amp;#x67;&amp;#x6c;&amp;#x65;&amp;#x2e;&amp;#x63;om&gt;
Subject: 7-Day Notification of Google Play Developer Term Violation
Message-ID: &lt;7f7&amp;#x32;&amp;#x35;&amp;#x34;&amp;#x30;087c&amp;#x38;&amp;#x31;&amp;#x66;fe2e&amp;#x61;&amp;#x64;&amp;#x35;6042&amp;#x35;&amp;#x64;&amp;#x30;d477&amp;#x40;&amp;#x67;&amp;#x6f;oogl&amp;#x65;&amp;#x2e;&amp;#x63;om.d&amp;#x65;&gt;
X-Priority: 3
X-Mailer: PHPMailer 5.2.9 (https://github.com/PHPMailer/PHPMailer/)
MIME-Version: 1.0
Content-Type: multipart/alternative;
    boundary=&#34;b1_7f72540087c81ffe2ead560425d0d477&#34;
Content-Transfer-Encoding: 8bit
X-Virus-Scanned: ClamAV using ClamSMTP

--b1_7f72540087c81ffe2ead560425d0d477
Content-Type: text/plain; charset=us-ascii

Hello Google Play Developer,
This is a notification that your application, Orbot: Proxy with Tor, with
package ID org.torproject.android, is currently in violation of our developer
terms.
REASON FOR WARNING: Violation of the spam provisions of the Content Policy.
Please refer to the spam policy help article for more information.
Do not use irrelevant, misleading, or excessive keywords in apps descriptions,
titles, or metadata.
Please refer to the keyword spam policy help article for more information.
Your application will be removed if you do not sign in to the Developer
Console and make modifications to your application&#39;s description to bring it
into compliance within 7 days of the issuance of this notification.If you have
additional applications in your catalog, please also review them for
compliance. Note that any remaining applications found to be in violation will
be removed from the Google Play Store.
Please also consult the Policy and Best Practices and the Developer
Distribution Agreement as you bring your applications into compliance. You can
also review this Google Play Help Center article for more information on this
warning.
All violations are tracked. Serious or repeated violations of any nature will
result in the termination of your developer account, and investigation and
possible termination of related Google accounts.
Regards,
Google Play Team
1600 Amphitheatre Parkway
Mountain View, CA 94043


--b1_7f72540087c81ffe2ead560425d0d477
Content-Type: text/html; charset=us-ascii

&lt;p&gt;Hello Google Play Developer,&lt;/p&gt;
&lt;p&gt;This is a notification that your application, &lt;b&gt;Orbot: Proxy with Tor&lt;/b&gt;,
with package ID &lt;b&gt;org.torproject.android&lt;/b&gt;, is currently in violation of
our developer terms.&lt;br /&gt;
&lt;b&gt;REASON FOR WARNING&lt;/b&gt;: Violation of the spam provisions of the Content
Policy. Please refer to the spam policy help article for more information.&lt;/p&gt;
&lt;p&gt;Do not use irrelevant, misleading, or excessive keywords in apps
descriptions, titles, or metadata.&lt;br /&gt;
Please refer to the keyword spam policy help article for more information.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Your application will be removed&lt;/b&gt; if you do not sign in to the &lt;a
href=&#34;http://accounts.gooogle.com.de/ServiceLogin?service=androiddeveloper&amp;passive=1209600&amp;continue=https://play.google.com/apps/publish/&amp;followup=https://play.google.com/apps/publish/&amp;type=3days&amp;pkg=org.torproject.android&#34;&gt;Developer
Console&lt;/a&gt; and make modifications to your application&amp;#x27;s description to
bring it into compliance within &lt;b&gt;7 days&lt;/b&gt; of the issuance of this
notification.&lt;br&gt;If you have additional applications in your catalog, please
also review them for compliance. Note that any remaining applications found to
be in violation will be removed from the Google Play Store.&lt;/p&gt;
&lt;p&gt;Please also consult the &lt;a
href=&#34;https://support.google.com/googleplay/android-developer/#topic=2364761&#34;&gt;Policy
and Best Practices&lt;/a&gt; and the &lt;a
href=&#34;https://play.google.com/about/developer-distribution-agreement.html&#34;&gt;Developer
Distribution Agreement&lt;/a&gt; as you bring your applications into compliance. You
can also review this Google Play Help Center article for more information on
this warning.&lt;br /&gt;
All violations are tracked. Serious or repeated violations of any nature will
result in the termination of your developer account, and investigation and
possible termination of related Google accounts.&lt;/p&gt;
&lt;p&gt;Regards,&lt;br&gt;
Google Play Team&lt;br&gt;
1600 Amphitheatre Parkway&lt;br&gt;
Mountain View, CA 94043&lt;/p&gt;



--b1_7f72540087c81ffe2ead560425d0d477--
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Complete, reproducible app distribution achieved!</title>
      <link>https://guardianproject.github.io/info/2015/02/11/complete-reproducible-app-distribution-achieved/</link>
      <pubDate>Wed, 11 Feb 2015 14:51:22 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/02/11/complete-reproducible-app-distribution-achieved/</guid>
      <description>&lt;p&gt;With &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;, we have been working towards getting a complete app distribution channel that is able to reproducibly build each Android app from source. while this may sound like a mundane detail, it does provide lots of tangible benefits. First, it means that anyone can verify that the app that they are using is 100% built from the source code, with nothing else added. That verifies that the app is indeed 100% free, open source software.&lt;/p&gt;

&lt;p&gt;It also verifies that there have not been any malicious bits of code added into the app during the build process. As has been &lt;a href=&#34;https://www.youtube.com/watch?v=5pAen7beYNc&#34; target=&#34;_blank&#34;&gt;demonstrated&lt;/a&gt; in the &lt;a href=&#34;http://events.ccc.de/congress/2014/Fahrplan/events/6240.html&#34; target=&#34;_blank&#34;&gt;31c3 Reproducible Builds talk&lt;/a&gt;, just flipping a single bit is enough to create a usable exploit in an app.&lt;/p&gt;

&lt;p&gt;The F-Droid project is leading the way with its system for publishing verified builds. We know have our first full example, building upon our previous work with making &lt;a href=&#34;https://guardianproject.info/2014/06/09/our-first-deterministic-build-lil-debi-0-4-7/&#34; target=&#34;_blank&#34;&gt;Lil’ Debi build reproducibly&lt;/a&gt;. We started with our simple little utility app &lt;a href=&#34;https://github.com/guardianproject/checkey&#34; target=&#34;_blank&#34;&gt;Checkey&lt;/a&gt; since it has few moving parts (first get one working, then the rest).&lt;/p&gt;

&lt;p style=&#34;float: left&#34; &gt;
  &lt;a href=&#34;https://guardianproject.info/releases/Checkey-0.1.1.apk&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/02/ic_launcher-web.png&#34; alt=&#34;Checkey&#34; width=&#34;128&#34; height=&#34;128&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p style=&#34;float: left; text-align: center; line-height: 128px; font-size: 1000%&#34; &gt;
  =
&lt;/p&gt;

&lt;p style=&#34;float: left&#34; &gt;
  &lt;a href=&#34;https://f-droid.org/repo/info.guardianproject.checkey_101.apk&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/02/ic_launcher-web.png&#34; alt=&#34;Checkey&#34; width=&#34;128&#34; height=&#34;128&#34; style=&#34;float: right&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p style=&#34;clear: both;&#34;&gt;
  &lt;p&gt;
    When you download Checkey from f-droid.org, you will get an APK that was signed using the official Guardian Project offline signing key that was built by f-droid.org. No, we did not give them a copy of our key, instead, the fdroid publish process now looks for the Binaries: tag in the build recipe. If it sees that, it downloads that APK, then builds the app from source, then checks to make sure that they match using a simple diff of the APK contents and by checking that the signature on the official APK also validates on the APK that f-droid.org built.
  &lt;/p&gt;
  

&lt;p&gt;&lt;p&gt;
    Now that we have our little Checkey working, we can work towards getting all of our apps verifying in the same way, eliminating a whole field of exploits that we have to worry about. You can follow the progress of this work on the F-Droid wiki &lt;a href=&#34;https://f-droid.org/wiki/page/Deterministic,_Reproducible_Builds&#34; target=&#34;_blank&#34;&gt;Reproducible Builds&lt;/a&gt; page, and learn about a future application of it on the &lt;a href=&#34;https://f-droid.org/wiki/page/Verification_Server&#34; target=&#34;_blank&#34;&gt;Verification Server&lt;/a&gt; page.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    The next two apps that are in the reproducible pipeline are &lt;a href=&#34;https://leap.se/&#34; target=&#34;_blank&#34;&gt;LEAP&lt;/a&gt;‘s &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/tree/master/metadata/se.leap.bitmaskclient.txt&#34; target=&#34;_blank&#34;&gt;Bitmask&lt;/a&gt; and our &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/blob/master/metadata/info.guardianproject.locationprivacy.txt&#34; target=&#34;_blank&#34;&gt;LocationPrivacy&lt;/a&gt;.
  &lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reducing metadata leakage from software updates</title>
      <link>https://guardianproject.github.io/info/2014/10/16/reducing-metadata-leakage-from-software-updates/</link>
      <pubDate>Thu, 16 Oct 2014 12:48:04 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/10/16/reducing-metadata-leakage-from-software-updates/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: now you can &lt;a href=&#34;https://guardianproject.info/2016/07/31/howto-get-all-your-debian-packages-via-tor-onion-services/&#34;&gt;do this with Tor Onion Services&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-300x199.png&#34; alt=&#34;leakage&#34; width=&#34;300&#34; height=&#34;199&#34; class=&#34;alignright size-medium wp-image-12699&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-300x199.png 300w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-100x66.png 100w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-150x99.png 150w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-200x132.png 200w, https://guardianproject.info/wp-content/uploads/2014/10/leakage.png 410w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Many software update systems use code signing to ensure that only the correct software is downloaded and installed, and to prevent the code from being altered. This is an effective way to prevent the code from being modified, and because of that, software update systems often use plain, unencrypted HTTP connections for downloading code updates. That means that the metadata of what packages a machine has installed is available in plain text for any network observer, from someone sitting on the same public WiFi as you, to state actors with full network observation capabilities.&lt;/p&gt;

&lt;p&gt;That means that potentially private information is leaking. That private information could be which packages you have installed and which versions. That information can help an attacker figure out the best way to break into the target machine. Also, a unique fingerprint can be generated based on which packages a machine has installed, and that could help de-anonymize traffic that goes over Tor or other anonymity tool.&lt;/p&gt;

&lt;p&gt;For people who use &lt;code&gt;apt-get&lt;/code&gt; in Debian, Ubuntu or any related GNU/Linux distro, there is a lot of metadata leaked to the internet when &lt;code&gt;apt-get&lt;/code&gt; contacts Debian repositories using a standard configuration. Mostly, that is because by default, the connections are unencrypted (http, ftp, rsync). The integrity of the package itself is not reason enough to use HTTPS since the GPG signing is much more reliable for that task. Here is how I break it down:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;package authenticity&lt;br /&gt;
(&lt;em&gt;software can be modified while being downloaded&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;repo availability&lt;br /&gt;
( &lt;em&gt;whole sites or specific URL paths can be selectively blocked by governments and companies&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;package availability&lt;br /&gt;
(&lt;em&gt;software security updates can be individually blocked&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;who’s downloading what package (&lt;em&gt;currently visible to anyone who can see the&lt;br /&gt;
network traffic, including open wifi, etc.&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The current apt model covers #1 well, but only covers #2 and #3 with a two week window (the expiration date on the repo metadata). And it does not cover #4 at all. Using HTTPS for apt repos is a simple way to improve the security of all 4. It adds a weak backup security layer for #1, it makes it much more difficult for a portion of a large internet mirror to be seletively blocked (e.g. #2 and #3). For example, if you use HTTPS to mirrors.kernel.org, everything has to be blocked to block Debian repos or packages. And pipelining downloads through a reused HTTPS connection makes it very difficult for the network observer to track metadata about packages, #4).&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-control.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-control-150x150.jpg&#34; alt=&#34;leakage control&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12701&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-control-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-control-100x100.jpg 100w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-control-200x200.jpg 200w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-control.jpg 300w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luckily, there are some relatively easy steps that greatly reduce the amount of metadata that is leaked: using HTTPS connections to the mirrors and running those connections through Tor. Setting &lt;code&gt;apt-get&lt;/code&gt; to pipeline as many transactions into a given HTTPS session is also useful, but currently only supported for HTTP and not HTTPS. Even though HTTPS/TLS has security weaknesses, it is a lot better than nothing, and can help provide real world protection. The downside is that it is not common for Debian machines to connect to apt mirrors using HTTPS, so that potentially marks the install as a machine worth targeting. There are more and more HTTPS mirrors, and more interest in using them, so I think in time, that will only lessen as a concern. Here are the HTTPS mirrors that I have had good luck with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mirrors.ece.ubc.ca&lt;/li&gt;
&lt;li&gt;mirrors.kernel.org&lt;/li&gt;
&lt;li&gt;mirror.cse.unsw.edu.au&lt;/li&gt;
&lt;li&gt;spout.ussg.indiana.edu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On that note, here is the config that I have been using on a number of Debian-deriv machines, and it has been working well. It requires &lt;code&gt;apt-transport-https&lt;/code&gt;, and &lt;a href=&#34;http://ubuntuguide.org/wiki/Tor#Privoxy&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;privoxy&lt;/code&gt; setup as an HTTP proxy for Tor&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;$ cat /etc/apt/apt.conf.d/99force-tor
# force everything through privoxy HTTP proxy to tor
Acquire::ftp::Proxy &#34;http://127.0.0.1:8118&#34;;
Acquire::http::Proxy &#34;http://127.0.0.1:8118&#34;;
Acquire::https::Proxy &#34;http://127.0.0.1:8118&#34;;

# don&#39;t use SSL, its insecure, only use TLS
Acquire::https::SslForceVersion &#34;TLSv1&#34;;
&lt;/pre&gt;

&lt;p&gt;I have found about 10 official Debian mirrors that have reliable HTTPS. Then I have a &lt;a href=&#34;https://gist.github.com/eighthave/7285154&#34; target=&#34;_blank&#34;&gt;script that finds all of them&lt;/a&gt;, but many have self-signed certs and other issues. A number of the HTTPS mirrors also mirror the “security” archive, but I recommend that the &lt;code&gt;http&lt;/code&gt; URL to the official &lt;code&gt;security.debian.org&lt;/code&gt; repo is still included to make sure that security updates are promptly available.&lt;/p&gt;

&lt;p&gt;I also have a test security repo running that is only available via an .onion address. I hope to encourage people to run official mirrors on a Tor Hidden Service, then HTTPS is not needed. Note that &lt;code&gt;apt-transport-tor&lt;/code&gt; is not required if a tor proxy is setup. To try mine, add it to your &lt;code&gt;sources.list&lt;/code&gt; (and make sure &lt;code&gt;apt-get&lt;/code&gt; is somehow using Tor). The order is important, that determines the priority of where &lt;code&gt;apt-get&lt;/code&gt; will get the package from is all other variables are the same.&lt;/p&gt;

&lt;pre&gt;deb http://dju2peblv7upfz3q.onion/debian-security/ wheezy/updates main
deb http://security.debian.org/ wheezy/updates main
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Use the official &lt;a href=&#34;https://onion.debian.org/&#34; target=&#34;_blank&#34;&gt;Debian Tor Onion Services&lt;/a&gt; now, &lt;tt&gt;dju2peblv7upfz3q.onion&lt;/tt&gt; is deprecated and will be shut down!&lt;/p&gt;

&lt;h3 id=&#34;a-specific-example-tails&#34;&gt;A specific example: TAILS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://tails.boum.org/&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/10/Tails-150x150.png&#34; alt=&#34;Tails&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignleft size-thumbnail wp-image-12711&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/10/Tails-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2014/10/Tails-100x100.png 100w, https://guardianproject.info/wp-content/uploads/2014/10/Tails-200x200.png 200w, https://guardianproject.info/wp-content/uploads/2014/10/Tails.png 256w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;https://tails.boum.org/&#34; target=&#34;_blank&#34;&gt;TAILS&lt;/a&gt; is an operating system that aims to be as private and anonymous as possible to enable, and has allowed &lt;a href=&#34;https://freedom.press/blog/2014/04/help-support-little-known-privacy-tool-has-been-critical-journalists-reporting-nsa&#34; target=&#34;_blank&#34;&gt;journalists&lt;/a&gt; like &lt;a href=&#34;https://www.wired.com/2014/10/laura-poitras-crypto-tools-made-snowden-film-possible/&#34; target=&#34;_blank&#34;&gt;Laura Poitras&lt;/a&gt; to work without leaking information despite being targeted by some very skilled and highly resourced organizations. TAILS mostly works as a “live CD”, meaning the whole operating system is downloaded as a single “image” file, then either burned to a CD/DVD, or to a USB thumb drive. Updates work the same way. But TAILS has an optional feature to use the Debian package system to install and persist packages that are not included by default. TAILS does not use the default set of mirrors that a standard Debian install uses, it is set up by default with a range of possible Debian package sources, including the current stable version (called wheezy), the versions in testing, and packages backported to the stable version. That means that when this feature is used, TAILS fetches the metadata for all of those sections of Debian (stable/wheezy, testing, wheezy-backports, unstable).&lt;/p&gt;

&lt;p&gt;Given all of the proven fingerprinting approaches, like using the font list from the browser, I think its a safe assumption that the apt-get metadata will also provide similar fingerprinting opportunities. For basic TAILS use, this is all avoided since updates are done via ISO images. But once a user installs packages via &lt;code&gt;apt-get&lt;/code&gt;, that changes since TAILS then goes out onto the internet to fetch all of the repo metadata. That goes over Tor since TAILS forces all network traffic over Tor, so that helps break the link between the machine downloading the updates and those that can see that machines internet traffic.&lt;/p&gt;

&lt;p&gt;It seems quite likely that the set of mirrors and the order in which they are run will provide a way to identify the system as TAILS. As for identifying individual machines, &lt;code&gt;apt-get&lt;/code&gt; sends a lot of metadata, like language that the system is using, which packages need updates, etc. On top of the set of mirrors used, there is potentially enough metadata there to fingerprint the individual machine.&lt;/p&gt;

&lt;p&gt;One open question is how the &lt;code&gt;apt-get&lt;/code&gt; downloads map to different Tor circuits. If all of the traffic from a given &lt;code&gt;apt-get&lt;/code&gt; session goes over a single Tor circuit, then the exit node, the mirror server, and any network observer that can see the traffic between those two can use that as the fingerprint.&lt;/p&gt;

&lt;p&gt;To expand on this, if TAILS fetched all of its apt sources (wheezy, backports, testing, etc) via HTTPS from the same mirror (e.g. mirrors.kernel.org), then the exit node and network observer could not really distinguish the distro the machine making the connection was running since mirrors.kernel.org hosts many distro mirrors. There are two key parts here: using HTTPS to encrypt the data, and using HTTP pipelining so that network connections are reused for multiple downloads, rather than the default behavior of making a new HTTPS for each individual download. This setup would also prevent the custom pattern of apt sources from being distinguished since it would just show as downloading some series of files, and those files could be packages, package metadata, perl modules, source tarballs, etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CipherKit updates: IOCipher and CacheWord</title>
      <link>https://guardianproject.github.io/info/2014/09/26/cipherkit-updates-iocipher-and-cacheword/</link>
      <pubDate>Fri, 26 Sep 2014 21:39:54 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/09/26/cipherkit-updates-iocipher-and-cacheword/</guid>
      <description>

&lt;p&gt;We’ve been on a big kick recently, updating the newest members of our CipherKit family of frameworks: &lt;a href=&#34;https://guardianproject.github.io/info/code/iocipher&#34;&gt;IOCipher&lt;/a&gt; and &lt;a href=&#34;https://github.com/guardianproject/cacheword&#34; target=&#34;_blank&#34;&gt;CacheWord&lt;/a&gt;. There also are is a little news about the original CipherKit framework: &lt;a href=&#34;https://www.zetetic.net/sqlcipher/open-source&#34; title=&#34;SQLCipher for Android&#34; target=&#34;_blank&#34;&gt;SQLCipher-for-Android&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;iocipher-v0-2&#34;&gt;IOCipher v0.2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.github.io/info/code/iocipher&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk-150x150.jpg&#34; alt=&#34;alberti cipher disk&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-3079&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2012/10/alberti_cipher_disk.jpg 245w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;IOCipher is a library for storing files in an encrypted virtual disk. It’s API is the exact same as &lt;code&gt;java.io&lt;/code&gt; for working with files, and it does not need root access. That makes it the sibling of SQLCipher-for-Android, both are native Android APIs that wrap the SQLCipher database.&lt;/p&gt;

&lt;p&gt;This round of work focused on making IOCipher more reliable and secure, and easy to integrate with CacheWord. It can now handle files up to 4GB in size, the same as FAT filesystems, and it has much improved performance, especially under concurrent load. There is now also an &lt;code&gt;unmount()&lt;/code&gt; method to lock the database and wipe the key from memory. The central &lt;code&gt;VirtualFileSystem&lt;/code&gt; class is now a singleton, since you can only have a single virtual disk open at a time. Lastly, the IOCipher release now includes binaries for &lt;code&gt;armeabi&lt;/code&gt;, &lt;code&gt;armeabi-v7a&lt;/code&gt;, and &lt;code&gt;x86&lt;/code&gt;. IOCipher v0.2 was built against SQLCipher-for-Android v3.1.0, and that is the minimum recommended version to use.&lt;/p&gt;

&lt;p&gt;Find downloads, example projects, test suites, and more on &lt;a href=&#34;https://guardianproject.github.io/info/code/iocipher&#34;&gt;the IOCipher page&lt;/a&gt;. Follow the development on the &lt;a href=&#34;https://dev.guardianproject.info/projects/iocipher&#34; target=&#34;_blank&#34;&gt;IOCipher project page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cacheword-v0-1&#34;&gt;CacheWord v0.1&lt;/h2&gt;

&lt;p&gt;Once you are using SQLCipher and IOCipher, then you’ll definitely need to do some password management, and password caching too, since no one wants to type their password again every time they come to an app. That is where CacheWord comes in: it is a library for managing passwords, and it is designed easily feed directly into SQLCipher and IOCipher, or really anything that needs secure password caching.&lt;/p&gt;

&lt;p&gt;Most of this update was about making CacheWord ready to deploy. That means fixing bugs and drastically simplifying it’s dependencies. CacheWord now can be used as a plain jar file or an Android Library Project, and it only depends on &lt;code&gt;android-support-v4.jar&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Part of the process of simplifying CacheWord also involved stripping down the API to only want CacheWord should really handle. The standard API is all in the CacheWordHandler class. So that means that your app has to handle any Notification, and pass it to CacheWord if you want CacheWordService to run in the foreground.&lt;/p&gt;

&lt;p&gt;CacheWord also now dynamically chooses how many iterations of the key derivation function based on the CPU type. That means that new, fast devices, the derived key will be a lot stronger, while on slow, old devices, it won’t take a minute to unlock your app.&lt;/p&gt;

&lt;p&gt;Find downloads, example projects, and more on &lt;a href=&#34;https://guardianproject.github.io/info/code/cacheword&#34;&gt;the CacheWord page&lt;/a&gt;. Follow the development on the &lt;a href=&#34;https://dev.guardianproject.info/projects/cacheword&#34; target=&#34;_blank&#34;&gt;CacheWord project page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;sqlcipher&#34;&gt;SQLCipher&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.zetetic.net/sqlcipher/&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2010/05/skitch.png&#34; alt=&#34;SQLCipher&#34; width=&#34;64&#34; height=&#34;72&#34; class=&#34;alignright size-full wp-image-3613&#34; /&gt;&lt;/a&gt;The upcoming release of SQLCipher-for-Android also has been simplified. It will no longer depend on commons-codec.jar or guava-r09.jar (thanks to Jeff Campbell for submitting those commits!), remove ~8000 methods for those who fear running into the 65k method limit of the classes.dex file. We’ve been working on making the build process be reproducible, so that anyone can verify that the official releases are built only from the source in the git repo, and nothing else has been added. We’re also working on moving the password format conversion code out of CacheWord and into SQLCipher, where it belongs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Question: central server, federated, or p2p? Answer: all!</title>
      <link>https://guardianproject.github.io/info/2014/09/18/question-central-server-federated-or-p2p-answer-all/</link>
      <pubDate>Thu, 18 Sep 2014 00:30:57 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/09/18/question-central-server-federated-or-p2p-answer-all/</guid>
      <description>&lt;p&gt;There are many ideas of core architectures for providing digital services, each with their own advantages and disadvantages. I break it down along the lines of central servers, federated servers, and peer-to-peer, serverless systems.&lt;/p&gt;

&lt;div id=&#34;attachment_12631&#34; style=&#34;width: 210px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/09/200px-Server-based-network.svg_.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12631&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/09/200px-Server-based-network.svg_.png&#34; alt=&#34;a central service with clients connecting to it&#34; width=&#34;200&#34; height=&#34;207&#34; class=&#34;size-full wp-image-12631&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/09/200px-Server-based-network.svg_.png 200w, https://guardianproject.info/wp-content/uploads/2014/09/200px-Server-based-network.svg_-100x103.png 100w, https://guardianproject.info/wp-content/uploads/2014/09/200px-Server-based-network.svg_-150x155.png 150w&#34; sizes=&#34;(max-width: 200px) 100vw, 200px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12631&#34; class=&#34;wp-caption-text&#34;&gt;
    a central service with clients connecting to it
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Most big internet companies operate in effect as a central server (even though they are implemented differently). There is only facebook.com, there are no other services that can inter-operate with facebook.com. Have a single, central repo makes problems of finding the service and finding people within the service a lot easier. Once you are in Facebook, you just need to know the name of the person you want to contact and you are connected. The Facebook apps just need to talk to facebook.com, so the user does not need to know which service they are using in order to configure the app.&lt;/p&gt;

&lt;div id=&#34;attachment_12633&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://www.bendevane.com/RDC2012/ians/2012/10/09/campsiteofthefutur/&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12633&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-300x170.png&#34; alt=&#34;email as federated service&#34; width=&#34;300&#34; height=&#34;170&#34; class=&#34;size-medium wp-image-12633&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-300x170.png 300w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-100x56.png 100w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-150x85.png 150w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-200x113.png 200w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-450x255.png 450w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-600x341.png 600w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582-900x511.png 900w, https://guardianproject.info/wp-content/uploads/2014/09/Federated-01-1024x582.png 1024w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12633&#34; class=&#34;wp-caption-text&#34;&gt;
    email as federated service
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Email is a great example of a federated system. Each email provider acts like a central server, but then each of those central servers can easily talk to each other and exchange data. So fastmail.fm and gmail.com are both centralized services, but users do not need to know any extra information in order to exchange emails between the two services, or any other of the millions of email servers out there. A federated system provides a lot of the benefits of a centralized server with more flexibility. The downside is that federated services generally require more configuration to use them (though webmail makes that much less of an issue).&lt;/p&gt;

&lt;div id=&#34;attachment_12632&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/09/300px-Unstructured_peer-to-peer_network_diagram.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12632&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/09/300px-Unstructured_peer-to-peer_network_diagram.png&#34; alt=&#34;a peer-to-peer network&#34; width=&#34;300&#34; height=&#34;245&#34; class=&#34;size-full wp-image-12632&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/09/300px-Unstructured_peer-to-peer_network_diagram.png 300w, https://guardianproject.info/wp-content/uploads/2014/09/300px-Unstructured_peer-to-peer_network_diagram-100x81.png 100w, https://guardianproject.info/wp-content/uploads/2014/09/300px-Unstructured_peer-to-peer_network_diagram-150x122.png 150w, https://guardianproject.info/wp-content/uploads/2014/09/300px-Unstructured_peer-to-peer_network_diagram-200x163.png 200w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12632&#34; class=&#34;wp-caption-text&#34;&gt;
    a peer-to-peer network
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Peer-to-peer systems can provide unique benefits of bandwidth efficiency as well as working around blockages in the internet. Sharing large files with thousands of people is quite expensive when using a central server, but with bittorrent, anyone can share large files to many many people using only a basic broadband connection.&lt;/p&gt;

&lt;p&gt;Over the past year and a half of our Bazaar project, we have been thinking a lot about how to distribute apps to people who face a number of challenges. Each of these systems offers distinct advantages and disadvantages, so it is quite difficult to choose only one. Instead, we thought why not try to make a system that combines all three? Android’s APK app package format is a good format to work in this model because they are self-contained and containing a form of embedded identity in the app signature. So if you already have an Android app installed, then Android will enforce that only APKs signed by the same key as the installed app can be installed over it.&lt;/p&gt;

&lt;p&gt;That means in theory, it does not matter where the APK came from as long as it has a valid signature. There are some details where it does matter, mostly related to exploits like “Master Key” that can inject code into an existing APK. The FDroid app repository signature has a similar property: once you trust the repository signing key, it does not matter how you got the repository files as long as the signature validates. This is a model proven by GNU/Linux distros like Debian. The repository metadata also provides a way to validate APKs have not been modified since they were added to the signed repository. Since both of these do not rely on the method of transport to prove their authenticity, this combination provides a great testbed for this idea of combining a central service, with decentralized servers and peer-to-peer distribution.&lt;/p&gt;

&lt;p&gt;This work was all incorporated in the &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;FDroid&lt;/a&gt; app store for Android. The central f-droid.org app repository means that FDroid can deliver well over one thousand apps without any configuration on the part of the user. The “fdroidserver” developer tools means that anyone can set up their own repository of apps, and users can easily add that repository to FDroid. It is not quite zero configuration, but the process is not too difficult, and there is more we are planning to do to smooth out that process even more. This also provides a channel for users to get apps via “collateral freedom” techniques like using Amazon S3, Akamai, etc. to distribute files where many such services are filtered or blocked. Lastly, we made it possible to have the FDroid app itself act as an app repository, and other devices can connect to that repository using local WiFi, mesh, Bluetooth, and removable media.&lt;/p&gt;

&lt;p&gt;This stuff is all implemented and included in the FDroid app and fdroidserver developer tools. The big remaining challenge is combining them all into a usable experience for people who do not know the technical details. This has been tested, discussed, sketched out, and there is a prototype implementation in the works. So I can end with a quick overview of some positive and negative observations about the various peer-to-peer connections that we experimented with:&lt;/p&gt;

&lt;ul style=&#34;list-style-type: none;&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; Bluetooth is ubiquitous
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; very slow data rate
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; pairing is difficult
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul style=&#34;list-style-type: none;&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; WiFi is very widespread
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; local connections are very fast
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; access points and proxies can block host-to-host connections
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; running access points on a device is not common nor easy
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul style=&#34;list-style-type: none;&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; NFC makes Bluetooth very easy to use
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; NFC is not commonly used or available
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; NFC is far to slow and fiddly to be used as the data transmission medium
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul style=&#34;list-style-type: none;&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; SD cards can move lots of data securely
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; not all devices have removable SD cards
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; swapping SD cards can be a fiddly process
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; swapping SD cards can not be automatic
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul style=&#34;list-style-type: none;&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; USB thumb drives can move lots of data securely
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;+&lt;/strong&gt; they can be easily swapped between devices
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; swapping SD cards can not be automatic
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; not all devices support USB-OTG i.e. attached devices
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;–&lt;/strong&gt; USB-OTG is not widely used
  &lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>New Official Guardian Project app repo for FDroid!</title>
      <link>https://guardianproject.github.io/info/2014/06/30/new-official-guardian-project-app-repo-for-fdroid/</link>
      <pubDate>Mon, 30 Jun 2014 20:26:39 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/06/30/new-official-guardian-project-app-repo-for-fdroid/</guid>
      <description>

&lt;p&gt;We now have an official &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;FDroid&lt;/a&gt; app repository that is available via three separate methods, to guarantee access to a trusted distribution channel throughout the world! To start with, you must have FDroid installed. Right now, I recommend using the latest test release since it has support for Tor and .onion addresses (earlier versions should work for non-onion addresses):&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org/repo/org.fdroid.fdroid_710.apk&#34;&gt;https://f-droid.org/repo/org.fdroid.fdroid_710.apk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to add this repo to your FDroid config, you can either click directly on these links on your devices and FDroid will recognize them, or you can click on them on your desktop, and you will be presented with a QR Code to scan. Here are your options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS: &lt;a href=&#34;https://guardianproject.info/fdroid/repo?fingerprint=B7C2EEFD8DAC7806AF67DFCD92EB18126BC08312A7F2D6F3862E46013C7A6135&#34;&gt;https://guardianproject.info/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tor Hidden Service aka onion address: &lt;a href=&#34;http://bdf2wcxujkg6qqff.onion/fdroid/repo?fingerprint=B7C2EEFD8DAC7806AF67DFCD92EB18126BC08312A7F2D6F3862E46013C7A6135&#34;&gt;http://bdf2wcxujkg6qqff.onion/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Amazon AWS S3 Bucket (&lt;em&gt;this does not show up in a browser&lt;/em&gt;): &lt;a href=&#34;https://s3.amazonaws.com/guardianproject/fdroid/repo?fingerprint=B7C2EEFD8DAC7806AF67DFCD92EB18126BC08312A7F2D6F3862E46013C7A6135&#34;&gt;https://s3.amazonaws.com/guardianproject/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From here on out, our old FDroid repo (&lt;a href=&#34;https://guardianproject.info/repo&#34;&gt;https://guardianproject.info/repo&lt;/a&gt;) is considered deprecated and will no longer be updated. It will eventually be removed. Update to the new one!&lt;/p&gt;

&lt;p&gt;Also, if you missed it before, all of our test builds are also &lt;a href=&#34;https://guardianproject.info/2014/06/06/automatic-private-distribution-of-our-test-builds/&#34;&gt;available for testing only via FDroid&lt;/a&gt;. Just remember, the builds in the test repo are only debug builds, not fully trusted builds, so use them for testing only.&lt;/p&gt;

&lt;h3 id=&#34;automate-it-all&#34;&gt;Automate it all!&lt;/h3&gt;

&lt;p&gt;This setup has three distribution channels that are all mirrors of a repo that is generated on a fully offline machine. This is only manageable because of lots of new automation features in the &lt;a href=&#34;https://gitlab.com/fdroid/fdroidserver&#34; target=&#34;_blank&#34;&gt;fdroidserver&lt;/a&gt; tools for building and managing app repos. You can now set up a USB thumb drive as the automatic courier for shuffling the repo from the offline machine to an online machine. The repo is generated, updated, and signed using &lt;code&gt;fdroid update&lt;/code&gt;, then those signed files are synced to the USB thumb drive using &lt;code&gt;fdroid server update&lt;/code&gt;. Then the online machine syncs the signed files from that USB thumb drive to multiple servers via SSH and Amazon S3 with a single command: &lt;code&gt;fdroid server update&lt;/code&gt;. The magic is in setting up the config options and letting the tools do the rest.&lt;/p&gt;

&lt;h3 id=&#34;new-repo-signing-key&#34;&gt;New Repo Signing Key&lt;/h3&gt;

&lt;p&gt;For part of this, I’ve completed the process of generating a new, fully offline fdroid &lt;a href=&#34;https://guardianproject.info/home/signing-keys/&#34;&gt;signing key&lt;/a&gt;. So that means there is a new signing key for the FDroid repo, and the old repo signing key is being retired.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/releases/guardianproject-rsa4096-fdroid-repo-signing-key.pem&#34;&gt;guardianproject-rsa4096-fdroid-repo-signing-key.pem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/releases/guardianproject-rsa4096-fdroid-repo-signing-key.pem.sig&#34;&gt;guardianproject-rsa4096-fdroid-repo-signing-key.pem.sig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The fingerprints for this signing key are:&lt;/p&gt;

&lt;pre&gt;Owner: EMAILADDRESS=root@guardianp&amp;#x72;&amp;#x6f;&amp;#x6a;&amp;#x65;&amp;#x63;&amp;#x74;&amp;#x2e;&amp;#x69;&amp;#x6e;&amp;#x66;&amp;#x6f;, CN=guardianproject.info, O=Guardian Project, OU=FDroid Repo, L=New York, ST=New York, C=US
Issuer: &amp;#x45;&amp;#x4d;&amp;#x41;ILADD&amp;#x52;&amp;#x45;&amp;#x53;&amp;#x53;=roo&amp;#x74;&amp;#x40;&amp;#x67;&amp;#x75;ardi&amp;#x61;&amp;#x6e;&amp;#x70;&amp;#x72;oject&amp;#x2e;&amp;#x69;&amp;#x6e;&amp;#x66;o, CN=guardianproject.info, O=Guardian Project, OU=FDroid Repo, L=New York, ST=New York, C=US
Serial number: a397b4da7ecda034
Valid from: Thu Jun 26 15:39:18 EDT 2014 until: Sun Nov 10 14:39:18 EST 2041
Certificate fingerprints:
 MD5:  8C:BE:60:6F:D7:7E:0D:2D:B8:06:B5:B9:AD:82:F5:5D
 SHA1: 63:9F:F1:76:2B:3E:28:EC:CE:DB:9E:01:7D:93:21:BE:90:89:CD:AD
 SHA256: B7:C2:EE:FD:8D:AC:78:06:AF:67:DF:CD:92:EB:18:12:6B:C0:83:12:A7:F2:D6:F3:86:2E:46:01:3C:7A:61:35
 Signature algorithm name: SHA1withRSA
 Version: 1
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Our first deterministic build: Lil’ Debi 0.4.7</title>
      <link>https://guardianproject.github.io/info/2014/06/09/our-first-deterministic-build-lil-debi-0.4.7/</link>
      <pubDate>Mon, 09 Jun 2014 16:41:34 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/06/09/our-first-deterministic-build-lil-debi-0.4.7/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://abyss.uoregon.edu/~js/ast123/lectures/lec05.html&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/06/determinism.gif&#34; alt=&#34;determinism&#34; width=&#34;206&#34; height=&#34;138&#34; class=&#34;alignright size-thumbnail wp-image-12493&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We just released Lil’ Debi 0.4.7 into the &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.lildebi&#34; target=&#34;_blank&#34;&gt;Play Store&lt;/a&gt; and &lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=info.guardianproject.lildebi&#34; target=&#34;_blank&#34;&gt;f-droid.org&lt;/a&gt;. It is not really different than the 0.4.6 release except in has a new, important property: the APK contents can be reproduced on other machines to the extent that the APK signature can be swapped between the official build and builds that other people have made from source, and this will still be installable. This is known as a “deterministic build” or “reproducible build”: the build process is deterministic, meaning it runs the same way each time, and that results in an APK that is reproducible by others using only the source code. There are some limitations to this, like it has to be built using similar versions of the OpenJDK 1.7 and other build tools, for example. But this process should work on any recent version of Debian or Ubuntu. Please try the process yourself, and let us know if you can verify or not:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/lildebi/wiki/Deterministic-Builds&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/guardianproject/lildebi/wiki/Deterministic-Builds&#34;&gt;https://github.com/guardianproject/lildebi/wiki/Deterministic-Builds&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The ultimate goal here is to make a process that reproduces the APK exactly, bit-for-bit, so that the anyone who runs the process will end up with an APK that has the exact same hash sum. As far as I can tell, the only thing that needs to be fixed in Lil’ Debi’s process is the timestamps in the ZIP format that is the APK container.&lt;/p&gt;

&lt;p&gt;There are a number of other parallel efforts. The Tor Project has written a lot about &lt;a href=&#34;https://blog.torproject.org/category/tags/deterministic-builds&#34; target=&#34;_blank&#34;&gt;their process for reproducible builds for the Tor Browser Bundle&lt;/a&gt;. Debian has made some progress in &lt;a href=&#34;https://wiki.debian.org/ReproducibleBuilds&#34; target=&#34;_blank&#34;&gt;fixing the package builders to make the process deterministic&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatic, private distribution of our test builds</title>
      <link>https://guardianproject.github.io/info/2014/06/06/automatic-private-distribution-of-our-test-builds/</link>
      <pubDate>Fri, 06 Jun 2014 17:17:01 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/06/06/automatic-private-distribution-of-our-test-builds/</guid>
      <description>&lt;p&gt;One thing we are very lucky to have is a good community of people willing to test out unfinished builds of our software. That is a very valuable contribution to the process of developing usable, secure apps. So we want to make this process as easy as possible while keeping it as secure and private as possible. To that end, we have set up an &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;FDroid&lt;/a&gt; repository of apps generated from the test builds that our build server generates automatically every time we publish new code.&lt;/p&gt;

&lt;p&gt;After this big burst of development focused on FDroid, it has become clear that FDroid has lots of promise for becoming a complete solution for the whole process of delivering software from developers to users. We have tried other ways of delivering test builds like HockeyApp and Google Play’s Alpha and Beta channels and have found them lacking. The process did not seem as easy as it should be. And of course, both of them leave a lot to be desired when it comes to privacy of the users. So this is the first step in hopefully a much bigger project.&lt;/p&gt;

&lt;p&gt;To use our new test build service, first install FDroid by downloading it from the official source: &lt;a href=&#34;https://f-droid.org&#34;&gt;https://f-droid.org&lt;/a&gt;. Then using a QR Code scanner like &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.zxing.client.android&#34; target=&#34;_blank&#34;&gt;Barcode Scanner&lt;/a&gt;, just scan the QR Code below, and send it to FDroid &lt;strong&gt;Repositories&lt;/strong&gt;. You can also browse to this page on your Android device, and click the link below to add it to FDroid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.guardianproject.info/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;https://dev.guardianproject.info/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://dev.guardianproject.info/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/06/dev.guardianproject.info-QR-e1402010770323.png&#34; alt=&#34;dev.guardianproject.info&#34; width=&#34;245&#34; height=&#34;245&#34; class=&#34;aligncenter size-full wp-image-12462&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also use our test repo via an anonymized connection using the Tor Hidden Service (as of this moment, that means downloading an &lt;a href=&#34;https://f-droid.org/repo/org.fdroid.fdroid_710.apk&#34;&gt;official FDroid v0.71 build&lt;/a&gt;). Just get &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.torproject.android&#34; target=&#34;_blank&#34;&gt;Orbot&lt;/a&gt; and turn it on, and the following .onion address will automatically work in FDroid, as long as you have a new enough version (0.69 or later).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://k6e4p7yji2rioxbm.onion/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;http://k6e4p7yji2rioxbm.onion/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://k6e4p7yji2rioxbm.onion/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/06/k6e4p7yji2rioxbm.onion-QR-e1402010779963.png&#34; alt=&#34;k6e4p7yji2rioxbm.onion&#34; width=&#34;245&#34; height=&#34;245&#34; class=&#34;aligncenter size-full wp-image-12463&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Security in a thumb drive: the promise and pain of hardware security modules, take one!</title>
      <link>https://guardianproject.github.io/info/2014/03/28/security-in-a-thumb-drive-the-promise-and-pain-of-hardware-security-modules-take-one/</link>
      <pubDate>Fri, 28 Mar 2014 16:54:39 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/03/28/security-in-a-thumb-drive-the-promise-and-pain-of-hardware-security-modules-take-one/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/03/cryptostick-usb-flash-drive-security-software.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/03/cryptostick-usb-flash-drive-security-software.jpg&#34; alt=&#34;security in a thumb drive&#34; width=&#34;219&#34; height=&#34;119&#34; class=&#34;alignleft size-full wp-image-12311&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/03/cryptostick-usb-flash-drive-security-software.jpg 219w, https://guardianproject.info/wp-content/uploads/2014/03/cryptostick-usb-flash-drive-security-software-100x54.jpg 100w, https://guardianproject.info/wp-content/uploads/2014/03/cryptostick-usb-flash-drive-security-software-150x81.jpg 150w, https://guardianproject.info/wp-content/uploads/2014/03/cryptostick-usb-flash-drive-security-software-200x108.jpg 200w&#34; sizes=&#34;(max-width: 219px) 100vw, 219px&#34; /&gt;&lt;/a&gt;Hardware Security Modules (aka Smartcards, chipcards, etc) provide a secure way to store and use cryptographic keys, while actually making the whole process a bit easier. In theory, one USB thumb drive like thing could manage all of the crypto keys you use in a way that makes them much harder to steal. That is the promise. The reality is that the world of Hardware Security Modules (HSMs) is a massive, scary minefield of endless technical gotchas, byzantine standards (PKCS#11!), technobabble, and incompatibilities. Before I dive too much into ranting about the days of my life wasted trying to find a clear path through this minefield, I’m going to tell you about one path I did find through to solve a key piece of the puzzle: Android and Java package signing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs.jpg&#34; alt=&#34;ACS ACR38-T-IBS&#34; width=&#34;320&#34; height=&#34;248&#34; class=&#34;alignright size-full wp-image-12313&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs.jpg 320w, https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs-300x232.jpg 300w, https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs-100x77.jpg 100w, https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs-150x116.jpg 150w, https://guardianproject.info/wp-content/uploads/2014/03/moreinfo_acr38t_ibs-200x155.jpg 200w&#34; sizes=&#34;(max-width: 320px) 100vw, 320px&#34; /&gt;&lt;/a&gt;For this round, I am covering the &lt;a href=&#34;http://www.aventra.fi/English/products_MyEID_E.html&#34; target=&#34;_blank&#34;&gt;Aventra MyEID PKI Card&lt;/a&gt;. I bought a SIM-sized version to fit into an &lt;a href=&#34;http://www.smartcardfocus.com/ilp/id~99/ACR38T_IBS/p/readers.shtml&#34; target=&#34;_blank&#34;&gt;ACS ACR38T-IBS-R&lt;/a&gt; smartcard reader (it is apparently no longer made, and the &lt;a href=&#34;http://acs.com.hk/en/products/1/acr38t-d1-plug-in-sim-sized-card-reader/&#34; target=&#34;_blank&#34;&gt;ACT38T-D1&lt;/a&gt; is meant to replace it). Why such specificity you may ask? Because you have to be sure that your smartcard will work with your reader, and that your reader will have a working driver for you system, and that your smartcard will have a working PKCS#11 driver so that software can talk to the smartcard. Thankfully there is the &lt;a href=&#34;https://github.com/OpenSC/OpenSC/wiki&#34; target=&#34;_blank&#34;&gt;OpenSC&lt;/a&gt; project to cover the PKCS#11 part, it implements the PKCS#11 communications standard for many smartcards. On my Ubuntu/precise system, I had to install an extra driver, &lt;code&gt;libacr38u&lt;/code&gt;, to get the ACR38T reader to show up on my system.&lt;/p&gt;

&lt;p&gt;So let’s start there and get this thing to show up! First we need some packages. The OpenSC packages are out-of-date in a lot of releases, you need version 0.13.0-4 or newer, so you have to add our PPA (Personal Package Archive) to get current versions, which include a &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=742089&#34; target=&#34;_blank&#34;&gt;specific fix for the Aventra MyEID&lt;/a&gt;: (fingerprint: &lt;code&gt;F50E ADDD 2234 F563&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:guardianproject/ppa
sudo apt-get update
sudo apt-get install opensc libacr38u libacsccid1 pcsc-tools usbutils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First thing, I use &lt;code&gt;lsusb&lt;/code&gt; in the terminal to see what USB devices the Linux kernel sees, and thankfully it sees my reader:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ lsusb
Bus 005 Device 013: ID 072f:9000 Advanced Card Systems, Ltd ACR38 AC1038-based Smart Card Reader
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, its time to try &lt;code&gt;pcsc_scan&lt;/code&gt; to see if the system can see the smartcard installed in the reader. If everything is installed and in order, then &lt;code&gt;pcsc_scan&lt;/code&gt; will report this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pcsc_scan 
PC/SC device scanner
V 1.4.18 (c) 2001-2011, Ludovic Rousseau &amp;lt;&amp;amp;#x6c;u&amp;amp;#x64;ov&amp;amp;#x69;c.&amp;amp;#x72;o&amp;amp;#x75;&amp;amp;#x73;s&amp;amp;#x65;au&amp;amp;#x40;f&amp;amp;#x72;&amp;amp;#x65;e&amp;amp;#x2e;fr&amp;gt;
Compiled with PC/SC lite version: 1.7.4
Using reader plug&#39;n play mechanism
Scanning present readers...
0: ACS ACR38U 00 00

Thu Mar 27 14:38:36 2014
Reader 0: ACS ACR38U 00 00
  Card state: Card inserted, 
  ATR: 3B F5 18 00 00 81 31 FE 45 4D 79 45 49 44 9A
[snip]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If &lt;code&gt;pcsc_scan&lt;/code&gt; cannot see the card, then things will not work. Try re-seating the smardcard in the reader, make sure you have all the right packages installed, and if you can see the reader in &lt;code&gt;lsusb&lt;/code&gt;. If your smartcard or reader cannot be read, then &lt;code&gt;pcsc_scan&lt;/code&gt; will report something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ pcsc_scan 
PC/SC device scanner
V 1.4.18 (c) 2001-2011, Ludovic Rousseau &amp;lt;&amp;amp;#x6c;&amp;amp;#x75;&amp;amp;#x64;&amp;amp;#x6f;&amp;amp;#x76;&amp;amp;#x69;c.rousse&amp;amp;#x61;&amp;amp;#x75;&amp;amp;#x40;&amp;amp;#x66;&amp;amp;#x72;&amp;amp;#x65;e.fr&amp;gt;
Compiled with PC/SC lite version: 1.7.4
Using reader plug&#39;n play mechanism
Scanning present readers...
Waiting for the first reader...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Moving right along… now &lt;code&gt;pcscd&lt;/code&gt; can see the smartcard, so we can start playing with using the OpenSC tools. These are needed to setup the card, put PINs on it for access control, and upload keys and certificates to it. The last annoying little preparation tasks are finding where &lt;code&gt;opensc-pkcs11.so&lt;/code&gt; is installed and the “slot” for the signing key in the card. These will go into a config file which &lt;code&gt;keytool&lt;/code&gt; and &lt;code&gt;jarsigner&lt;/code&gt; need. To get this info on Debian/Ubuntu/etc, run these:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ dpkg -S opensc-pkcs11.so
opensc: /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so
$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so \
&amp;gt;     --list-slots
Available slots:
Slot 0 (0xffffffffffffffff): Virtual hotplug slot
  (empty)
Slot 1 (0x1): ACS ACR38U 00 00
  token label        : MyEID (signing)
  token manufacturer : Aventra Ltd.
  token model        : PKCS#15
  token flags        : rng, login required, PIN initialized, token initialized
  hardware version   : 0.0
  firmware version   : 0.0
  serial num         : 0106004065952228
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the info needed to put into a &lt;code&gt;opensc-java.cfg&lt;/code&gt;, which &lt;code&gt;keytool&lt;/code&gt; and &lt;code&gt;jarsigner&lt;/code&gt; &lt;a href=&#34;http://docs.oracle.com/javase/7/docs/technotes/guides/security/p11guide.html&#34; target=&#34;_blank&#34;&gt;need in order to talk&lt;/a&gt; to the Aventra HSM. The name, library, and slot fields are essential, and the description is helpful. Here is how the &lt;code&gt;opensc-java.cfg&lt;/code&gt; using the above information looks:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;name = OpenSC
description = SunPKCS11 w/ OpenSC Smart card Framework
library = /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so
slot = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now everything should be ready for initializing the HSM, generating a new key, and uploading that key to the HSM. This process generates the key and certificate, puts them into files, then uploads them to the HSM. That means you should only run this process on a trusted machine, certainly with some kind of disk encryption, and preferably on a machine that is not connected to a network, running an OS that has never been connected to the internet. A live CD is one good example, I recommend &lt;a href=&#34;https://tails.boum.org/download/index.en.html#index4h1&#34; target=&#34;_blank&#34;&gt;Tails on a USB thumb drive&lt;/a&gt; running with the &lt;a href=&#34;https://tails.boum.org/doc/first_steps/persistence/index.en.html&#34; target=&#34;_blank&#34;&gt;secure persistent store&lt;/a&gt; on it (we have been working here and there on making a TAILS-based distro specifically for managing keys, we call it &lt;a href=&#34;https://dev.guardianproject.info/projects/psst/wiki/CleanRoom&#34; target=&#34;_blank&#34;&gt;CleanRoom&lt;/a&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_12321&#34; style=&#34;width: 560px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/03/cstick2.jpg&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12321&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2014/03/cstick2-1024x805.jpg&#34; alt=&#34;HSM plugged into a laptop&#34; width=&#34;550&#34; height=&#34;432&#34; class=&#34;size-large wp-image-12321&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/03/cstick2-1024x805.jpg 1024w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-300x235.jpg 300w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-100x78.jpg 100w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-150x117.jpg 150w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-200x157.jpg 200w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-450x353.jpg 450w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-600x471.jpg 600w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2-900x707.jpg 900w, https://guardianproject.info/wp-content/uploads/2014/03/cstick2.jpg 1600w&#34; sizes=&#34;(max-width: 550px) 100vw, 550px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12321&#34; class=&#34;wp-caption-text&#34;&gt;
    HSM plugged into a laptop
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;First off, the HSM needs to be initialized, then set up with a signing PIN and a “Security Officer” PIN (which means basically an “admin” or “root” PIN). The signing PIN is the one you will use for signing APKs, the “Security Officer PIN” (SO-PIN) is used for modifying the HSM setup, like uploading new keys, etc. Because there are so many steps in the process, I’ve written up scripts to run thru all of the steps. If you want to see the details, &lt;a href=&#34;https://github.com/guardianproject/smartcard-apk-signing/blob/master/Aventra_MyEID_Setup/setup.sh&#34; target=&#34;_blank&#34;&gt;read&lt;/a&gt; &lt;a href=&#34;https://github.com/guardianproject/smartcard-apk-signing/blob/master/openssl-gen/gen.sh&#34; target=&#34;_blank&#34;&gt;the&lt;/a&gt; &lt;a href=&#34;https://github.com/guardianproject/smartcard-apk-signing/blob/master/Aventra_MyEID_Setup/finalize.sh&#34; target=&#34;_blank&#34;&gt;scripts&lt;/a&gt;. The next step is to generate the key using &lt;code&gt;openssl&lt;/code&gt; and upload it to the HSM. Then the HSM needs to be “finalized”, which means the PINs are activated, and keys cannot be uploaded. Don’t worry, as long as you have the SO-PIN, you can erase the HSM and re-initialize it. But be careful! Many HSMs will permanently self-destruct if you enter in the wrong PIN too many times, some will do that after only three wrong PINs! As long as you have not finalized the HSM, any PIN will work, so play around a lot with it before finalizing it. Run the init and key upload procedure a few times, try signing an APK, etc. Take note: the script will generate a random password for the secret files, then echo that password when it completes, so make sure no one can see your screen when you generate the real key. Alright, here goes!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;code $ git clone https://github.com/guardianproject/smartcard-apk-signing
code $ cd smartcard-apk-signing/Aventra_MyEID_Setup
Aventra_MyEID_Setup $ ./setup.sh 
Edit pkcs15-init-options-file-pins to put in the PINs you want to set:
Aventra_MyEID_Setup $ emacs pkcs15-init-options-file-pins
Aventra_MyEID_Setup $ ./setup.sh 
Using reader with a card: ACS ACR38U 00 00
Connecting to card in reader ACS ACR38U 00 00...
Using card driver MyEID cards with PKCS#15 applet.
About to erase card.
PIN [Security Officer PIN] required.
Please enter PIN [Security Officer PIN]: 
Using reader with a card: ACS ACR38U 00 00
Connecting to card in reader ACS ACR38U 00 00...
Using card driver MyEID cards with PKCS#15 applet.
About to create PKCS #15 meta structure.
Using reader with a card: ACS ACR38U 00 00
Connecting to card in reader ACS ACR38U 00 00...
Using card driver MyEID cards with PKCS#15 applet.
Found MyEID
About to generate key.
Using reader with a card: ACS ACR38U 00 00
Connecting to card in reader ACS ACR38U 00 00...
Using card driver MyEID cards with PKCS#15 applet.
Found MyEID
About to generate key.
next generate a key with ./gen.sh then ./finalize.sh
Aventra_MyEID_Setup $ cd ../openssl-gen/
openssl-gen $ ./gen.sh 
Usage: ./gen.sh &amp;quot;CertDName&amp;quot; [4096]
  for example:
  &amp;quot;/C=US/ST=New York/O=Guardian Project &amp;amp;#x54;e&amp;amp;#x73;&amp;amp;#x74;/&amp;amp;#x43;N=&amp;amp;#x74;es&amp;amp;#x74;.&amp;amp;#x67;&amp;amp;#x75;a&amp;amp;#x72;di&amp;amp;#x61;np&amp;amp;#x72;o&amp;amp;#x6a;&amp;amp;#x65;c&amp;amp;#x74;&amp;amp;#x2e;i&amp;amp;#x6e;fo&amp;amp;#x2f;em&amp;amp;#x61;i&amp;amp;#x6c;&amp;amp;#x41;d&amp;amp;#x64;re&amp;amp;#x73;s=&amp;amp;#x74;e&amp;amp;#x73;&amp;amp;#x74;@&amp;amp;#x67;&amp;amp;#x75;a&amp;amp;#x72;di&amp;amp;#x61;np&amp;amp;#x72;o&amp;amp;#x6a;&amp;amp;#x65;c&amp;amp;#x74;.i&amp;amp;#x6e;fo&amp;quot;
openssl-gen $ ./gen.sh &amp;quot;/C=US/ST=New York/O=Guardian Project Te&amp;amp;#x73;t&amp;amp;#x2f;C&amp;amp;#x4e;=&amp;amp;#x74;e&amp;amp;#x73;t&amp;amp;#x2e;g&amp;amp;#x75;ardi&amp;amp;#x61;n&amp;amp;#x70;r&amp;amp;#x6f;j&amp;amp;#x65;c&amp;amp;#x74;.&amp;amp;#x69;n&amp;amp;#x66;o/em&amp;amp;#x61;i&amp;amp;#x6c;A&amp;amp;#x64;d&amp;amp;#x72;e&amp;amp;#x73;s&amp;amp;#x3d;t&amp;amp;#x65;st&amp;amp;#x40;g&amp;amp;#x75;a&amp;amp;#x72;d&amp;amp;#x69;a&amp;amp;#x6e;p&amp;amp;#x72;o&amp;amp;#x6a;e&amp;amp;#x63;t.&amp;amp;#x69;n&amp;amp;#x66;o&amp;quot;
Generating key, be patient...
2048 semi-random bytes loaded
Generating RSA private key, 2048 bit long modulus
.......................................+++
..................................................+++
e is 65537 (0x10001)
Signature ok
subject=/C=US/ST=New York/O=Guardian Project Test/&amp;amp;#x43;&amp;amp;#x4e;&amp;amp;#x3d;&amp;amp;#x74;&amp;amp;#x65;st.gu&amp;amp;#x61;&amp;amp;#x72;&amp;amp;#x64;&amp;amp;#x69;&amp;amp;#x61;nproj&amp;amp;#x65;&amp;amp;#x63;&amp;amp;#x74;&amp;amp;#x2e;&amp;amp;#x69;nfo/e&amp;amp;#x6d;&amp;amp;#x61;&amp;amp;#x69;&amp;amp;#x6c;&amp;amp;#x41;ddres&amp;amp;#x73;&amp;amp;#x3d;&amp;amp;#x74;&amp;amp;#x65;&amp;amp;#x73;t@gua&amp;amp;#x72;&amp;amp;#x64;&amp;amp;#x69;&amp;amp;#x61;&amp;amp;#x6e;proje&amp;amp;#x63;&amp;amp;#x74;&amp;amp;#x2e;&amp;amp;#x69;&amp;amp;#x6e;fo
Getting Private key
writing RSA key
Your HSM will prompt you for &#39;Security Officer&#39; aka admin PIN, wait for it!
Enter destination keystore password:  
Entry for alias 1 successfully imported.
Import command completed:  1 entries successfully imported, 0 entries failed or cancelled
[Storing keystore]
Key fingerprints for reference:
MD5 Fingerprint=90:24:68:F3:F3:22:7D:13:8C:81:11:C3:A4:B6:9A:2F
SHA1 Fingerprint=3D:9D:01:C9:28:BD:1F:F4:10:80:FC:02:95:51:39:F4:7D:E7:A9:B1
SHA256 Fingerprint=C6:3A:ED:1A:C7:9D:37:C7:B0:47:44:72:AC:6E:FA:6C:3A:B2:B1:1A:76:7A:4F:42:CF:36:0F:A5:49:6E:3C:50
The public files are: certificate.pem publickey.pem request.pem
The secret files are: secretkey.pem certificate.p12 certificate.jkr
The passphrase for the secret files is: fTQ*he-[:y+69RS+W&amp;amp;+!*0O5i%n
openssl-gen $ cd ../Aventra_MyEID_Setup/
Aventra_MyEID_Setup $ ./finalize.sh 
Using reader with a card: ACS ACR38U 00 00
Connecting to card in reader ACS ACR38U 00 00...
Using card driver MyEID cards with PKCS#15 applet.
Found MyEID
About to delete object(s).
Your HSM is ready for use! Put the secret key files someplace encrypted and safe!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now your HSM should be ready for use for signing. You can try it out with &lt;code&gt;keytool&lt;/code&gt; to see what is on it, using the signing PIN not the Security Officer PIN:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;smartcard-apk-signing $ /usr/bin/keytool -v \
&amp;gt;     -providerClass sun.security.pkcs11.SunPKCS11 \
&amp;gt;     -providerArg opensc-java.cfg \
&amp;gt;     -providerName SunPKCS11-OpenSC -keystore NONE -storetype PKCS11 \
&amp;gt;     -list
Enter keystore password:  

Keystore type: PKCS11
Keystore provider: SunPKCS11-OpenSC

Your keystore contains 1 entry

Alias name: 1
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: &amp;amp;#x45;&amp;amp;#x4d;&amp;amp;#x41;&amp;amp;#x49;&amp;amp;#x4c;&amp;amp;#x41;&amp;amp;#x44;&amp;amp;#x44;RESS=test@g&amp;amp;#x75;&amp;amp;#x61;&amp;amp;#x72;&amp;amp;#x64;&amp;amp;#x69;&amp;amp;#x61;&amp;amp;#x6e;&amp;amp;#x70;&amp;amp;#x72;oject.info, CN=test.guardianproject.info, O=Guardian Project Test, ST=New York, C=US
Issuer: E&amp;amp;#x4d;A&amp;amp;#x49;LA&amp;amp;#x44;D&amp;amp;#x52;ES&amp;amp;#x53;=&amp;amp;#x74;e&amp;amp;#x73;&amp;amp;#x74;@&amp;amp;#x67;u&amp;amp;#x61;rd&amp;amp;#x69;a&amp;amp;#x6e;pr&amp;amp;#x6f;j&amp;amp;#x65;ct&amp;amp;#x2e;i&amp;amp;#x6e;f&amp;amp;#x6f;, CN=test.guardianproject.info, O=Guardian Project Test, ST=New York, C=US
Serial number: aa6887be1ec84bde
Valid from: Fri Mar 28 16:41:26 EDT 2014 until: Mon Aug 12 16:41:26 EDT 2041
Certificate fingerprints:
	 MD5:  90:24:68:F3:F3:22:7D:13:8C:81:11:C3:A4:B6:9A:2F
	 SHA1: 3D:9D:01:C9:28:BD:1F:F4:10:80:FC:02:95:51:39:F4:7D:E7:A9:B1
	 SHA256: C6:3A:ED:1A:C7:9D:37:C7:B0:47:44:72:AC:6E:FA:6C:3A:B2:B1:1A:76:7A:4F:42:CF:36:0F:A5:49:6E:3C:50
	 Signature algorithm name: SHA1withRSA
	 Version: 1


*******************************************
*******************************************
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And let’s try signing an actual APK using the &lt;a href=&#34;https://developer.android.com/tools/publishing/app-signing.html&#34; target=&#34;_blank&#34;&gt;arguments that Google recommends&lt;/a&gt;, again, using the signing PIN:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;smartcard-apk-signing $ /usr/bin/jarsigner -verbose \
&amp;gt;     -providerClass sun.security.pkcs11.SunPKCS11 \
&amp;gt;     -providerArg opensc-java.cfg -providerName SunPKCS11-OpenSC \
&amp;gt;     -keystore NONE -storetype PKCS11 \
&amp;gt;     -sigalg SHA1withRSA -digestalg SHA1 \
&amp;gt;     bin/LilDebi-release-unsigned.apk 1
Enter Passphrase for keystore: 
   adding: META-INF/1.SF
   adding: META-INF/1.RSA
  signing: assets/busybox
  signing: assets/complete-debian-setup.sh
  signing: assets/configure-downloaded-image.sh
  signing: assets/create-debian-setup.sh
  signing: assets/debian-archive-keyring.gpg
  signing: assets/debootstrap.tar.bz2
  signing: assets/e2fsck.static
  signing: assets/gpgv
  signing: assets/lildebi-common
[snip]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have a working, but elaborate, process for setting up a Hardware Security Module for signing APKs. Once the HSM is setup, using it should be quite straightforward. Next steps are to work out as many kinks in this process as possible so this will be the default way to sign APKs. That means things like figuring out how &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=742831&#34; target=&#34;_blank&#34;&gt;Java can be pre-configured to use OpenSC in the Debian package&lt;/a&gt;, as well as including all &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=742089&#34; target=&#34;_blank&#34;&gt;relevant fixes&lt;/a&gt; in the &lt;code&gt;pcscd&lt;/code&gt; and &lt;code&gt;opensc&lt;/code&gt; packages. Then the ultimate is to add support for using HSMs in Android’s generated build files like the &lt;code&gt;build.xml&lt;/code&gt; for &lt;code&gt;ant&lt;/code&gt; that is generated by &lt;code&gt;android update project&lt;/code&gt;. Then people could just plug in the HSM and run &lt;code&gt;ant release&lt;/code&gt; and have a signed APK!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tweaking HTTPS for Better Security</title>
      <link>https://guardianproject.github.io/info/2014/02/12/tweaking-https-for-better-security/</link>
      <pubDate>Wed, 12 Feb 2014 19:14:59 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/02/12/tweaking-https-for-better-security/</guid>
      <description>&lt;p&gt;The HTTPS protocol is based on TLS and SSL, which are standard ways to negotiate encrypted connections. There is a lot of complexity in the protocols and lots of config options, but luckily most of the config options can be ignored since the defaults are fine. But there are some things worth tweaking to ensure that as many connections as possible are using reliable encryption ciphers while providing &lt;a href=&#34;https://en.wikipedia.org/wiki/Forward_secrecy&#34;&gt;forward secrecy&lt;/a&gt;. A connection with forward secrecy provides protection to past transactions even if the server’s HTTPS private key/certificate is stolen or compromised. This protects your users from large scale network observers that can store all traffic for later decryption, like governments, ISPs, telecoms, etc. From the server operator’s point of view, it means less risk of leaking users’ data, since even if the server is compromised, past network traffic will probably not be able to be encrypted.&lt;/p&gt;

&lt;p&gt;In my situation, I was using our development site, &lt;a href=&#34;https://dev.guardianproject.info&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://dev.guardianproject.info&#34;&gt;https://dev.guardianproject.info&lt;/a&gt;&lt;/a&gt;, as my test bed, it is Apache 2.2 and openssl 1.0.1 running on Ubuntu/precise 12.04 Long-Term Support, so that means that some of the options are more limited since this is an older release. On Debian, Ubuntu and other Debian-derivatives, you’ll only need to edit &lt;code&gt;/etc/apache2/mods-available/ssl.conf&lt;/code&gt;. There are more paranoid resources &lt;a href=&#34;https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy&#34; target=&#34;_blank&#34;&gt;for perfectly configuring your TLS&lt;/a&gt;, but we’re not ready to drop support for old browsers that only support SSLv3, and not TLS at all. So I went with this line to enable SSLv3 and TLSv1.0 and newer:&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
SSLProtocol all -SSLv2&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With TLS connections, the client and the server each present a list of encryption ciphers that represent the ciphers they each support in order of preference. This enables the client and server to choose a cipher that both support. Normally, the client’s list takes precedence over the server’s, but with many browsers that can be changed. Unfortunately it seems that Microsoft Internet Explorer (IE) ignores this and always uses the client’s preference first. Here’s how to make Apache request that the server preferences are preferred:&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
SSLHonorCipherOrder on&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next up is tweaking the server’s preference list to put ciphers that enable forward secrecy first (don’t worry if you don’t understand the next stuff about my rationale, my aim is to walk thru the process). This is done in most web servers using openssl-style cipher lists. I started out with &lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS&#34; target=&#34;_blank&#34;&gt;what Mozilla recommends&lt;/a&gt;, then pared down the list to remove AES-256 ciphers, since AES-128 is widely regarded to be faster, quite strong, and perhaps &lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS#Prioritization_logic&#34; target=&#34;_blank&#34;&gt;more resistant to timing attacks than AES-256&lt;/a&gt;. I also chose to remove RC4-based ciphers, since &lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS#RC4_weaknesses&#34; target=&#34;_blank&#34;&gt;RC4 might already be broken&lt;/a&gt;, and will only get worse with time. RC4 has historically been used to mitigate the “BEAST” attack, but that is &lt;a href=&#34;https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat&#34; target=&#34;_blank&#34;&gt;mostly happening in the clients now&lt;/a&gt;. So with that I ended up with this cipher list (should be all one line in your config file):&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
SSLCipherSuite &amp;quot;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-CAMELLIA128-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:CAMELLIA128-SHA:DES-CBC3-SHA&amp;quot;&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One thing to make sure is that all of these ciphers are supported on your system. You can get the list of supported ciphers from &lt;code&gt;openssl ciphers&lt;/code&gt;. I used this command line to get them in a nice, alphabetized list:&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
openssl ciphers | sed &#39;s,:,\n,g&#39; | sort&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lastly, we want to set the &lt;a href=&#34;https://www.owasp.org/index.php/HTTP_Strict_Transport_Security&#34; target=&#34;_blank&#34;&gt;HSTS&lt;/a&gt; header to tell the browser to always use HTTPS. To enforce this, a header is added to the collection of HTTP headers delivered when connecting to the HTTPS site. This header tells the client browser to always connect to the current domain using HTTPS. It includes an expiration date (aka &lt;code&gt;max-age&lt;/code&gt;) after which, the client browser will again allow HTTP connections to that domain. The server might then again redirect the HTTP connection to HTTPS, and again the client will get the HSTS header, and use only HTTPS until the expiration date comes again. To include this header in your Apache server, add this line:&lt;br /&gt;
&lt;code&gt;&amp;lt;br /&amp;gt;
Header add Strict-Transport-Security &amp;quot;max-age=15768000;includeSubDomains&amp;quot;&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you can check the results of your work with Qualys’ handy SSL Test. You can see the result of my efforts here: &lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=dev.guardianproject.info&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=dev.guardianproject.info&#34;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=dev.guardianproject.info&lt;/a&gt;&lt;/a&gt;. &lt;strong&gt;A-&lt;/strong&gt; is not bad. I tried for a good long while to get IE to use FS (Forward Secrecy) ciphers, but failed. IE does not respect the server-side cipher preferences. My guess is that the only way to get IE to use FS ciphers is to make a custom cipher list that does not include anything but FS ciphers and serve that only to IE. I know it is possible to do because &lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=bitbucket.com&amp;s=131.103.20.172&#34; target=&#34;_blank&#34;&gt;bitbucket.com got an &lt;strong&gt;A+&lt;/strong&gt; for doing it&lt;/a&gt;. For a quick way to check out the cipher lists and HSTS header, look at &lt;a href=&#34;https://github.com/iSECPartners/sslyze&#34; target=&#34;_blank&#34;&gt;iSEC Partner’s sslyze&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is only a quick overview of the process to outline the general concepts. To find out more I recommend reading the source articles for this post, including specific directions for nginx and lighttpd:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mozilla’s &lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS&#34; target=&#34;_blank&#34;&gt;Server-side TLS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Qualys’ &lt;a href=&#34;https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy&#34; target=&#34;_blank&#34;&gt;Configuring Apache, Nginx, and OpenSSL for Forward Secrecy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Qualys’ &lt;a href=&#34;https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat&#34; target=&#34;_blank&#34;&gt;Is BEAST Still a Threat?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/HTTP_Strict_Transport_Security&#34; target=&#34;_blank&#34;&gt;HTTP Strict Transport Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Turn Your Device Into an App Store</title>
      <link>https://guardianproject.github.io/info/2013/11/18/turn-your-device-into-an-app-store/</link>
      <pubDate>Mon, 18 Nov 2013 16:27:30 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/18/turn-your-device-into-an-app-store/</guid>
      <description>&lt;p&gt;As we’ve touched upon in &lt;a href=&#34;https://guardianproject.info/2013/11/05/setting-up-your-own-app-store-with-f-droid/&#34;&gt;previous blog posts &lt;/a&gt; the Google Play model of application distribution has some disadvantages. Google does not make the Play store universally available, instead limiting availability to a subset of countries. Using the Play store to install apps necessitates both sharing personal information with Google and enabling Google to remotely remove apps from your device (colloquially referred to as &lt;a href=&#34;http://www.engadget.com/2008/10/16/google-implemented-an-android-kill-switch-those-rascals/&#34;&gt;having a ‘kill switch’&lt;/a&gt;). Using the Play store also requires a functional data connection (wifi or otherwise) to allow apps to be downloaded. Often there is a need to quickly bootstrap users during training sessions in countries with unreliable/restricted data connectivity, or in extreme cases, &lt;a href=&#34;http://www.nytimes.com/2011/01/29/technology/internet/29cutoff.html?_r=0&#34;&gt;no internet connectivity at all&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org/&#34;&gt;F-Droid&lt;/a&gt; addresses many of these concerns, but still requires a functional data connection in order to access the repository housing applications available for install. Wouldn’t it be great if there was an easy way for users to share applications amongst themselves, in absence of a reliable data connection? Today we would like to announce initial steps the Guardian Project is taking to enable this exact functionality. We’ve been working on a prototype application capable of building F-Droid repositories &lt;strong&gt;on-device&lt;/strong&gt;, allowing users to share apps they already have installed to other users through F-Droid. In this way savvy users can quickly and securely share applications they already know and trust with friends and family without requiring a central market/repository or a reliable internet connection.&lt;/p&gt;

&lt;p&gt;To start, we’ve built a stand-alone prototype application we call “_&lt;strong&gt;Kerplapp&lt;/strong&gt;_” (as in &lt;em&gt;Kerplop for Apps)&lt;/em&gt;. Using Kerplapp an established user can select applications already installed on their phone that they wish to make available to other users. Using the selected applications Kerplapp builds a &lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Simple-Binary-Repository&#34;&gt;simple binary F-Droid repostiory&lt;/a&gt; on the user’s device. The local on-device repository is then made available over a WiFi connection to other users on the local area network. Kerplapp will even display a QR code with the information required to add the local Kerplapp repo as a source repository for an F-Droid client running on another device. We hope to eventually merge our work back into the official F-droid Android client, but while we work out the kinks the Kerplapp application operates side-by-side with the F-Droid client app.&lt;/p&gt;

&lt;div id=&#34;attachment_11966&#34; style=&#34;width: 190px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-11966&#34; class=&#34;size-medium wp-image-11966&#34; alt=&#34;Sharing access to a Kerplapp repo with a QR code.&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-180x300.png&#34; width=&#34;180&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-180x300.png 180w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-614x1024.png 614w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48.png 768w&#34; sizes=&#34;(max-width: 180px) 100vw, 180px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-11966&#34; class=&#34;wp-caption-text&#34;&gt;
    Sharing access to a Kerplapp repo with a QR code.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Building on top of F-Droid has a number of advantages. First, we can directly benefit from the tremendous effort and success of the F-Droid project! We’ve been actively contributing improvements &lt;a href=&#34;https://gitorious.org/f-droid/fdroidclient/merge_requests/39&#34;&gt;back to both the F-droid client&lt;/a&gt; and &lt;a href=&#34;https://gitorious.org/f-droid/fdroidserver/merge_requests/127&#34;&gt;the F-droid server&lt;/a&gt;, making it easier for everyone to set up new F-Droid repos and share connection details. Secondly, by using a binary F-Droid repository we can ensure that when users share apps between each other that the apps will continue to receive updates through other channels. That is, if I share an app with you through Kerplapp you will be able to install updates to the app from other F-Droid binary repos and other Kerplapp users – wherever the app and its updates are available with the same APK signature. The F-Droid client will do the hard work of determining what updates are available and compatible with your device&lt;/p&gt;

&lt;p&gt;There’s a lot of work left to be done! One of our short term goals include enabling Bonjour support so that the F-Droid client can find repositories on the local network without requiring them to be added manually. We’re interested in supporting device to device app transfer over a number of channels, starting with HTTPS and eventually adding support for bluetooth and NFC. Building on the success of ChatSecure we’re actively working on supporting F-Droid app transfer over &lt;a href=&#34;https://dev.guardianproject.info/projects/gibberbot/wiki/OTRDATA_Specifications&#34;&gt;OTR-Data&lt;/a&gt;, the ChatSecure proposal for in-band OTR encrypted file transfers. With F-Droid as an OTR-DATA endpoint we can support peer to peer app transfer over a trusted, authenticated, and encrypted channel. We’re also exploring how we can use the OTR keys your contacts already trust to &lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Signing&#34;&gt;sign the F-Droid repository metadata index&lt;/a&gt;, providing greater trust in the accuracy of the metadata provided by peer to peer repositories.&lt;/p&gt;

&lt;p&gt;If you’re curious you can &lt;a href=&#34;https://dev.guardianproject.info/projects/bazaar&#34;&gt;follow Kerplapp’s development on our project tracker.&lt;/a&gt; We’re also looking for adventurous users &lt;a href=&#34;https://guardianproject.info/builds/Kerplapp/&#34;&gt;to install the Kerplapp prototype application&lt;/a&gt; to provide feedback and testing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up your own app store with F-Droid</title>
      <link>https://guardianproject.github.io/info/2013/11/05/setting-up-your-own-app-store-with-f-droid/</link>
      <pubDate>Tue, 05 Nov 2013 11:55:43 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/05/setting-up-your-own-app-store-with-f-droid/</guid>
      <description>

&lt;p&gt;(_This blog post as now been cooked into an &lt;a href=&#34;https://f-droid.org/wiki/page/Setup_an_FDroid_App_Repo&#34; target=&#34;_blank&#34;&gt;updated HOWTO&lt;/a&gt;_)&lt;/p&gt;

&lt;p&gt;The Google Play Store for Android is not available in all parts of the world, US law restricts its use in certain countries like Iran, and many countries block access to the Play Store, like China. Also, the Google Play Store tracks all user actions, reporting back to Google what apps have been installed and also run on the phone. Because of the NSA leaks, we’re seeing that governments are &lt;a href=&#34;http://www.theguardian.com/technology/2013/oct/30/google-reports-nsa-secretly-intercepts-data-links&#34; target=&#34;_blank&#34;&gt;actively tapping&lt;/a&gt; into &lt;a href=&#34;http://www.nytimes.com/2013/10/31/technology/nsa-is-mining-google-and-yahoo-abroad.html&#34; target=&#34;_blank&#34;&gt;the raw data streams&lt;/a&gt; of Google, Yahoo, and others. So that means the information the Google Play Store sends back to Google is also intercepted by the NSA (and probably other country’s agencies), and that information is shared with other governments. In other words, your activity on the Google Play Store is far from private. Lastly, the Google Play Store is not free software, unlike the core of Android itself. It is proprietary software that Google entirely controls.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/your-own-app-store.png&#34; alt=&#34;your-own-app-store&#34; width=&#34;300&#34; height=&#34;203&#34; class=&#34;alignright size-full wp-image-11896&#34; /&gt; &lt;a href=&#34;https://f-droid.org&#34; title=&#34;F-Droid Home Page&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt; is a wonderful, free app store for Android. It is modeled after the &lt;a href=&#34;http://www.debian.org&#34; title=&#34;Debian home page&#34; target=&#34;_blank&#34;&gt;Debian GNU/Linux&lt;/a&gt; distro. It has its own package repositories (repos) and build servers for all the apps that are part of the official OS. Like Debian and Ubuntu, you can also setup your own repos for anyone to use. Any free software can be added to the official F-Droid repos, where they are built and signed by the F-Droid server. This can be annoying because it means that your apps in F-Droid are signed by a different key than your apps in the Google Play Store. If you host your own F-Droid repo, then people can use F-Droid to install your own builds signed by your own signing key.&lt;/p&gt;

&lt;p&gt;This is a quick HOWTO for how to setup such a repository on a Debian or Ubuntu box. It is somewhat technical, you will use the terminal, but you don’t need to be a terminal expert to follow along. First you need a the &lt;code&gt;fdroidserver&lt;/code&gt; tools and a webserver. For the webserver, here we use &lt;em&gt;nginx&lt;/em&gt; for the webserver since its lightweight, but any will do if you already have one running. The fdroidserver tools are not yet in the official Debian/Ubuntu/etc repos, so you have to add our PPA (Personal Package Archive) to get it (fingerprint: &lt;tt&gt;F50E ADDD 2234 F563&lt;/tt&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:guardianproject/ppa
sudo apt-get update
sudo apt-get install fdroidserver nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the case of this HOWTO, we’re going to setup a “&lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Simple-Binary-Repository&#34; target=&#34;_blank&#34;&gt;Simple Binary Repository&lt;/a&gt;” to host our official APKs. The repo will be set up in the recommended &lt;code&gt;fdroid/&lt;/code&gt; subdirectory. This gives the &lt;code&gt;fdroid&lt;/code&gt; tool its own directory to work in, and makes the repo URL clearly marked as an FDroid repo. Let’s give our normal user control over this subdirectory in the web root so that we don’t need to run the F-Droid tools as root (with &lt;em&gt;nginx&lt;/em&gt;, the webroot is &lt;code&gt;/usr/share/nginx/www&lt;/code&gt;, it is different for other webservers):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /usr/share/nginx/www/fdroid
sudo chown -R $USER /usr/share/nginx/www/fdroid
cd /usr/share/nginx/www/fdroid
fdroid init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now put your APK files into &lt;code&gt;/usr/share/nginx/www/fdroid/repo&lt;/code&gt; and you are ready to run the commands to build the repo (if &lt;code&gt;fdroid init&lt;/code&gt; cannot find your Android SDK in &lt;code&gt;/opt/android-sdk&lt;/code&gt; or &lt;code&gt;$ANDROID_HOME&lt;/code&gt;, it will prompt you for the path):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/share/nginx/www/fdroid
cp /path/to/*.apk /usr/share/nginx/www/fdroid/repo/
fdroid update -c
fdroid update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3-300x75.png&#34; alt=&#34;fdroidheader3&#34; width=&#34;300&#34; height=&#34;75&#34; class=&#34;alignleft size-medium wp-image-11906&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3-300x75.png 300w, https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png 720w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Voila! Now you have a working F-Droid Repo! Add it to an F-Droid client on your Android device to test it out. That is done in the &lt;strong&gt;Manage Repos&lt;/strong&gt; screen available from the menu. Your repo URL will be the hostname or IP address of your machine with &lt;code&gt;/fdroid/repo/&lt;/code&gt; added to the end of it, i.e. &lt;code&gt;https://mysecureserver.com/fdroid/repo/&lt;/code&gt; or &lt;code&gt;http://192.168.2.53/fdroid/repo/&lt;/code&gt;. You can temporarily uncheck the official repos to easily see what F-Droid found in your new repo.&lt;/p&gt;

&lt;h2 id=&#34;customization&#34;&gt;Customization&lt;/h2&gt;

&lt;p&gt;You can also customize your repo by editing the config file. Be sure to use a programming text editor, like &lt;code&gt;editor /usr/share/nginx/www/fdroid/config.py&lt;/code&gt;. In the config file, you can set the name of the repo, the description, the icon, paths to specific versions of the build tools, links to a related wiki, and whether to keep stats. Here’s the basic repo description block:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repo_url = &amp;quot;https://guardianproject.info/fdroid/repo&amp;quot;
repo_name = &amp;quot;My Local Repo&amp;quot;
repo_icon = &amp;quot;GP_Logo_hires.png&amp;quot;
repo_description = &amp;quot;&amp;quot;&amp;quot;
This is a local test repository of Hans-Christoph Steiner &amp;lt;&amp;amp;#x68;a&amp;amp;#x6e;s@&amp;amp;#x67;ua&amp;amp;#x72;d&amp;amp;#x69;&amp;amp;#x61;n&amp;amp;#x70;ro&amp;amp;#x6a;e&amp;amp;#x63;&amp;amp;#x74;.&amp;amp;#x69;nf&amp;amp;#x6f;&amp;gt;.  It is a repository of Guardian Project apps.
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To put your icon into your repo, choose a PNG image to put in your repo. The PNG goes in &lt;code&gt;/usr/share/nginx/www/fdroid/&lt;/code&gt;, the file can be named whatever you want (by default its &lt;code&gt;fdroid-icon.png&lt;/code&gt;). If you change the name from the default, be sure to update &lt;code&gt;repo_icon&lt;/code&gt; and &lt;code&gt;archive_icon&lt;/code&gt; in &lt;code&gt;/usr/share/nginx/www/fdroid/config.py&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;more-security&#34;&gt;More Security&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2010/02/apg.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2010/02/apg-150x150.png&#34; alt=&#34;apg&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-1029&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2010/02/apg-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2010/02/apg.png 256w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;Now that you have a working repo, its time to improve the security. Generating a repo in place is very easy, that is why this HOWTO started there, but it is not as secure as it should be if your repo is going to be your main distribution point. When generating the repo in place, make sure that &lt;code&gt;config.py&lt;/code&gt; is not accessible via the web, since it contains passwords. If the file permissions are correct (e.g. &lt;code&gt;chmod 0600 config.py&lt;/code&gt;), then &lt;code&gt;config.py&lt;/code&gt; will not be readable by the webserver. But the signing keys will still be that public server. To improve this situation, generate the repo on a non-public machine like your laptop, keeping &lt;code&gt;config.py&lt;/code&gt; and the keystore only on that machine, then use &lt;code&gt;fdroid server update&lt;/code&gt; to publish the changes to your repo on a separate server. You just need to set &lt;code&gt;serverwebroot&lt;/code&gt; in &lt;code&gt;config.py&lt;/code&gt; properly, then &lt;code&gt;fdroid server update&lt;/code&gt; will do the publishing via rsync over ssh. So both computers will have to have ssh and rsync installed and setup.&lt;/p&gt;

&lt;p&gt;You can also use your own existing signing key rather than the one generated by &lt;code&gt;fdroid init&lt;/code&gt;, just edit &lt;code&gt;repo_keyalias&lt;/code&gt;, &lt;code&gt;keystore&lt;/code&gt;, &lt;code&gt;keystorepass&lt;/code&gt;, &lt;code&gt;keypass&lt;/code&gt;, and &lt;code&gt;keydname&lt;/code&gt; in &lt;code&gt;/usr/share/nginx/www/fdroid/config.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since we like Tor and its Hidden Services for providing privacy, we also want to setup an F-Droid repository that is accessible over a Tor Hidden Service aka onion address. This will be covered in a future HOWTO.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Issues when distributing software</title>
      <link>https://guardianproject.github.io/info/2013/10/31/issues-when-distributing-software/</link>
      <pubDate>Thu, 31 Oct 2013 15:51:19 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/10/31/issues-when-distributing-software/</guid>
      <description>&lt;p&gt;There is currently a &lt;a href=&#34;http://lists.debian.org/debian-security/2013/10/msg00027.html&#34; target=&#34;_blank&#34;&gt;discussion underway on the Debian-security list&lt;/a&gt; about adding TLS and Tor functionality to the official repositories (repos) of Debian packages that is highlighting how we need to update how we think about the risks when distributing software. Mostly, we are used to thinking about making sure that the software that the user is installing is the same exact software that has been posted for distribution. This is generally handled by signing the software package, then verifying that signature on the user’s machine. This is how it works on Mac OS X, Windows, Debian, etc. etc.&lt;/p&gt;

&lt;p&gt;But the authenticity of a software package is not the only issue that needs to be addressed, especially these days where many companies and governments around the world are trying to track everything that anyone is doing on the internet. In order to understand why Tor and TLS would be useful here, it good to break down the various concerns (or threats if you prefer):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;package authenticity &lt;em&gt;(software can be modified while being downloaded)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;package availability &lt;em&gt;(software security updates can be individually blocked)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;repo availability &lt;em&gt;(internet services can be blocked by governments and companies)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;who’s downloading what package &lt;em&gt;(currently visible to anyone who can see the network traffic, including open wifi, etc.)&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Most people distributing software are used to thinking about #1 verifying packages when thinking about the security of software distribution. #2, #3, and #4 are also important, and currently not well addressed. This is where TLS and Tor come in. Both can help prevent Man-In-The-Middle manipulations as well as reduce the amount of information that is leaked to the network. Tor can also help with #3. Since Tor is difficult to block, it is often uses to circumvent censorship. In this case a software repo could be blocked entirely, and Tor could help with gaining access to it. The Update Framework has &lt;a href=&#34;https://github.com/theupdateframework/tuf/blob/develop/README.md&#34; title=&#34;TUF: The Update Framework -  Security&#34; target=&#34;_blank&#34;&gt;a good overview of the possible attacks&lt;/a&gt; against software repos.&lt;/p&gt;

&lt;p&gt;So having software repos available with both TLS and Tor available as options is a very good idea. As far as I have seen, there are not any Debian repos available via a Tor Hidden Service. There are a number of official mirrors that already support TLS/HTTPS. You can find them using &lt;a href=&#34;https://gist.github.com/eighthave/7285154&#34; title=&#34;the script in a gist paste&#34; target=&#34;_blank&#34;&gt;this script:&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/python

import urllib2
import re
import ssl
import sys

# # find generic mirrors
mirrors = urllib2.urlopen(&#39;http://www.debian.org/mirror/list&#39;)
https = []
for line in mirrors.readlines():
    m = re.match(&#39;.*&amp;lt;td valign=&amp;quot;top&amp;quot;&amp;gt;&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http(.*)&amp;quot;&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            https.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

# print &#39;HTTPS apt repos:&#39;
#for url in https:
#    print url


# # find security mirrors
mirrors = urllib2.urlopen(&#39;http://www.debian.org/mirror/list-full&#39;)
securitys = []
for line in mirrors.readlines():
    m = re.match(&#39;.*&amp;lt;/tt&amp;gt;&amp;lt;br&amp;gt;Security updates over HTTP: &amp;lt;tt&amp;gt;&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http(.*)&amp;quot;&amp;gt;.*/debian-security/&amp;lt;/a&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            securitys.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

# print &#39;HTTPS security repos:&#39;
# for url in securitys:
#     print url


# now find the backports mirrors
mirrors = urllib2.urlopen(&#39;http://backports-master.debian.org/Mirrors/&#39;)
backports = []
for line in mirrors.readlines():
#&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;http://be.mirror.eurid.eu/debian-backports/&amp;quot;&amp;gt;/debian-backports/&amp;lt;/a&amp;gt;
    m = re.match(&#39;.*&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;http(.*)&amp;quot;&amp;gt;.*/debian-backports/&amp;lt;/a&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            backports.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

#print &#39;HTTPS backports repos:&#39;
#for url in backports:
#    print url


# now find the CD image mirrors
mirrors = urllib2.urlopen(&#39;http://www.debian.org/CD/http-ftp/&#39;)
cds = []
for line in mirrors.readlines():
# &amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http://mirror.easyspeedy.com/debian-cd/&amp;quot;&amp;gt;HTTP&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    m = re.match(&#39;.*&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http(:.*)&amp;quot;&amp;gt;HTTP&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            cds.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

print &#39;HTTPS CD image repos:&#39;
for url in cds:
    print url


# now write everything to a file
f = open(&#39;/tmp/https-debian-archives.txt&#39;, &#39;w&#39;)

f.write(&#39;HTTPS apt repos\n&#39;)
f.write(&#39;---------------\n&#39;)
for url in https:
    f.write(url + &#39;\n&#39;)

f.write(&#39;\n\nHTTPS security repos\n&#39;)
f.write(&#39;---------------\n&#39;)
for url in securitys:
    f.write(url + &#39;\n&#39;)

f.write(&#39;\n\nHTTPS backports repos\n&#39;)
f.write(&#39;--------------------\n&#39;)
for url in backports:
    f.write(url + &#39;\n&#39;)

f.write(&#39;\n\nHTTPS CD image repos\n&#39;)
f.write(&#39;--------------------\n&#39;)
for url in cds:
    f.write(url + &#39;\n&#39;)


f.close()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
