<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ffmpeg on Guardian Project</title>
    <link>https://guardianproject.github.io/info/tags/ffmpeg/</link>
    <description>Recent content in Ffmpeg on Guardian Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 27 Aug 2012 12:30:15 -0400</lastBuildDate>
    
        <atom:link href="https://guardianproject.github.io/info/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sometimes the best solution is a library, not an app</title>
      <link>https://guardianproject.github.io/info/2012/08/27/sometimes-the-best-solution-is-a-library-not-an-app/</link>
      <pubDate>Mon, 27 Aug 2012 12:30:15 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/08/27/sometimes-the-best-solution-is-a-library-not-an-app/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/08/framework_wheel.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/08/framework_wheel-150x150.png&#34; alt=&#34;&#34; title=&#34;thinking about frameworks&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignleft size-thumbnail wp-image-2792&#34; /&gt;&lt;/a&gt;Our general approach to software development starts with surveying existing solutions that are available and in use, to see if there is already enough of an ecosystem or whether we need to seed that. When there is already an adundance of tools and apps out there, we work to find the good ones, provide feedback and auditing, and then build apps and tools to fill in any gaps. For example, this was our approach in the Open Secure Telephony Network.&lt;/p&gt;

&lt;p&gt;When there is not an ecosystem around a given problem, then we aim to make it as easy as possible for people writing software to address the issues. In this case, we focus on making developer tools. For example, most of the data on our phones is easily accessible to someone who has physical access to the device, be it the secret police or a thief. IOCipher and SQLCipher-for-Android both provide tools to easily encrypt data, using APIs that are very familiar to anyone doing Android development. We specifically aim to take complex technical challenges and bundle them up into packages that allow developers to add functionality in a matter of hours or days rather than weeks or months.&lt;/p&gt;

&lt;p&gt;With the developer tools that Guardian Project is creating, the impact is not as overt as in other software development since they are largely invisible to the users if we have done our jobs right.&lt;/p&gt;

&lt;p&gt;In order for our developer projects to have a good impact, there are many different aspects that need to be covered. After assessing the current available tools to determine the general approach, the technical approach is chosen. This will influence the development time, the efficiency, and ease of use. As soon as the project is developed to a basic usable state, it is time to get feedback from willing testers to validate the techical approach. After more development and feedback, next comes documentation and beta releases. Once the project gets to a point where the releases and documentation are good enough for most people to figure out what they need, then we start evangelizing the tool and lobby the developers of existing software to adopt the new tool. As part of that, we also offer meetups and workshops for people to see demos, discuss ideas with us, get started, and learn best practices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some Current Projects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We already have a couple well known developer tools out there, like SQLCipher-for-Android and Orlib. We have many more in development. Here’s a quick overview:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Orlib is an Android library to make it very easy to include Orbot/Tor support in any app. Any app that uses orlib can transparently route all traffic through the Tor network without requiring that the device be rooted. It is a well established project that mostly needs more documentation, developer support, and evangelizing.&lt;/li&gt;
&lt;li&gt;SQLCipher is a custom version of the SQLite database that provides easy-to-use, flexible and robust encryption. Guardian Project created SQLCipher-for-Android, which mirrors the standard Android database API, so developers already know how to use it, and need only add support for handling the passwords.&lt;/li&gt;
&lt;li&gt;libsqlfs provides a complete virtual disk on top of a SQLCipher database. The virtual disk is encrypted and contained in a single file, which can be easily moved around, copied, shared, etc. It is a standard FUSE filesytem that can work on Android, GNU/Linux, and Mac OS X. libsqlfs is a pre-existing tool that was abandoned by its authors and has been adopted by the Guardian Project.&lt;/li&gt;
&lt;li&gt;IOCipher is a cousin to SQLCipher-for-Android: it provides virtual encrypted disks for Android apps without requiring the device to be rooted. It uses the standard Java API for working with files, so developers already know how to use it, and only need to handle the passwords and opening and closing the virtual disks. It is based on libsqlfs and SQLCipher.&lt;/li&gt;
&lt;li&gt;Gnu Privacy Guard (GnuPG) for Android brings the widespread standard in OpenPGP encryption to Android. GnuPG provides solid encryption for keeping emails and files private, and for verifying that emails and files are who you think they are. GnuPG is built-in to basically every GNU/Linux distro, in GPGTools for Mac OS X and Apple Mail, a plugin for Outlook and Thunderbird, etc. We are working to bring GnuPG to Android to make it the cornerstone of Android encryption like it is elsewhere.&lt;/li&gt;
&lt;li&gt;ffmpeg is a popular, widespread framework for transcoding and filtering digital videos. It has been essential to our apps ObscuraCam, InformaCam, and Murrow/StoryMaker. We want to now work to make it dead simple for developers to build their own apps on it. We are also extending it to provide a full framework for audio and image redaction, metadata management, and encryption of sensitive parts of the media. This will make it easy for media app developers to build in privacy to their own apps.&lt;/li&gt;
&lt;li&gt;Portable Shared Security Tokens (PSST) is our project to tackle the issues of digital identity and crypto key management. This is perhaps the most vexing issue facing deployment of secure mobile devices today. Public-key cryptography (HTTPS/SSL, OTR chat, PGP email, etc.) is a proven, powerful way to validate digital identity while keeping the contents private. Their cryptographic keys essentially become their proof of identity, and as such that identity must be portable across computing contexts (mobile devices, desktop environments, etc.). An interoperable standard and associated developer libraries needs to be developed to make possible a portable and secure solution for establishing one’s identity.&lt;/li&gt;
&lt;li&gt;Always Secure Messaging (“AweSoMe”) is a collaborative effort to build interoperable, open-source, secure messaging applications, that work from mobile to mobile, as well as mobile to web. In particular, the goal is to create an extremely usable and high quality experience, that simultaneously supports one-to-one and one-to-many (group) end-to-end secure messaging communications across multiple platforms.&lt;/li&gt;
&lt;li&gt;Bazaar provides the last piece of this puzzle: easy, secure and private distribution of software. Debian GNU/Linux has proven that decentralized software stores can work well. Google Play and the Apple App Store both provide excellent examples for how to make it easy to find and distribute apps, but are often blocked or not available in many parts of the world. Bazaar combines all of these ideas to provide a decentralized, peer-to-peer app store that makes it easy to find and distribute apps.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Progress on Mobile Video Privacy Tools</title>
      <link>https://guardianproject.github.io/info/2011/09/10/progress-on-mobile-video-privacy-tools/</link>
      <pubDate>Sat, 10 Sep 2011 04:36:11 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2011/09/10/progress-on-mobile-video-privacy-tools/</guid>
      <description>&lt;p&gt;&lt;em&gt;If you are  a developer you may just want to skip all the prose below, and just jump over to Github to find our new &lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG on Android project&lt;/a&gt;{.vt-p} and build system. You can also check out our &lt;a href=&#34;https://github.com/guardianproject/SSCVideoProto&#34;&gt;SSCVideoProto Project&lt;/a&gt;{.vt-p} to understand how we are using it to redact faces and other identifying areas of HD video right on the Android phone itself. For more context, read on…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Last October at the Open Video Conference 2010, the idea of a camera application that could be designed to understand the needs and requirements of the human rights community was born. During a &lt;a href=&#34;https://blog.witness.org/2010/10/ovc2010-opensubtitles/&#34;&gt;hackday hosted with WITNESS&lt;/a&gt;{.vt-p}, we proved that is was possible to take a feature like “Face Detection” which is built into the Android operating system, and turn it into a capability that could be used to protect people, by blurring, pixelating or removing faces that unintentionally appeared in a video filmed on a mobile phone. In the last year, through our partnership with &lt;a href=&#34;https://www.witness.org/cameras-everywhere/witness-labs&#34;&gt;WITNESS Labs&lt;/a&gt;, we have built on that concept, designing, developing and releasing apps and source code which move the state of the art in mobile video privacy and anonymity capabilities forward.&lt;/p&gt;

&lt;p&gt;Here is a short video of &lt;a href=&#34;https://blog.witness.org/2010/10/ovc2010-opensubtitles/&#34;&gt;where we were a year ago&lt;/a&gt;{.vt-p}.&lt;/p&gt;

&lt;p&gt;The idea was that using a combination of approaches, we might be able to take the human rights video workflow, and ideas of consent and intent, that &lt;a href=&#34;https://www.witness.org/training&#34;&gt;WITNESS has developed for over twenty years&lt;/a&gt;{.vt-p}, and encode that into best practices and features in a software application. This was the catalyst for the launch of our joint &lt;a href=&#34;https://github.com/guardianproject/securesmartcam/wiki&#34;&gt;Secure Smart Cam Project&lt;/a&gt;{.vt-p}, which just a three months ago resulted in the &lt;a href=&#34;https://guardianproject.info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/&#34;&gt;launch of our first public app&lt;/a&gt;{.vt-p}, &lt;a href=&#34;https://guardianproject.info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/&#34;&gt;ObscuraCam v1&lt;/a&gt;{.vt-p}. Available in the Android Market, this app allows a user to quickly process a still photo taken on an Android smartphone, empowering them to remove unwanted identifying visual elements (faces, logos, signs, places) and remove unwanted digital metadata attached to the photo (GPS data, camera make and model, timestamps, etc). The app assists the user in this process by using Android’s built-in face detection technology to automatically identify and pixelize faces found in photos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/&#34;&gt;&lt;img class=&#34;alignnone&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/02_autodetect.png&#34; width=&#34;560&#34; height=&#34;336&#34; /&gt;&lt;/a&gt;{.vt-p}&lt;/p&gt;

&lt;p&gt;We continue to develop ObscuraCam in order to add new features, filters and privacy-enhancing capabilities. In addition, we exploring the “Informa” mode of this application, which uses the same technologies developed to assist in removing information, and instead uses them to add layers of extra verification, subject consent and intent tracking, and full media encryption. The idea is that in many cases people want to use visual media as evidence, or at least as reliable sources for journalistic use, and the more data that can be securely and safely captured and associated with a mediafile, the better. This is still in the research and design phase, but we expect to have some concepts of this ready for public play in the next few months.&lt;/p&gt;

&lt;p&gt;While ObscuraCam is exciting, it only supports photos at this time. This is a fundamental issue, because WITNESS is a human-rights video organization, and the type of compelling content people are creating on their mobile phones are moving pictures not still. A year out from when the idea was first prototyped, I am happy to say that we have addresses the major challenges necessary to achieve mobile video processing of high-resolution video on the Android phone itself. The prototype last year was faking it in a sense, as it couldn’t actual record anything, and just showed the idea that you could detect faces. Our new &lt;a href=&#34;https://github.com/guardianproject/sscvideoproto&#34;&gt;SSCVideoProto project&lt;/a&gt;{.vt-p}, utilizes the open-source &lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG video processing library&lt;/a&gt;{.vt-p}, to redact regions from recorded video files. Below is a short video that demonstrates the current state of the work.&lt;/p&gt;

&lt;p&gt;In summary, this means we can now remove, pixelize or otherwise modify any identifying content in a high-resolution video recorded on a mobile phone, before that video is uploaded to YouTube, Facebook or elsewhere. Faces can be removed, screens blacked out or any other element that shouldn’t be shown, as it would increase some risk to the subjects of the video. Beyond redaction, we can now process any video, using open-source software, on an Android phone, including trimming, splitting, adjusting color, balance, brightness or any other common ffmpeg feature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to Shawn, Andrew and Hans for the collective work on getting us to this milestone&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG on Android project&lt;/a&gt;{.vt-p}&lt;br /&gt;
&lt;a href=&#34;https://github.com/guardianproject/SSCVideoProto&#34;&gt;SSCVideoProto Project&lt;/a&gt;{.vt-p}&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
