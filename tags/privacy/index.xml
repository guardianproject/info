<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Privacy on Guardian Project</title>
    <link>https://guardianproject.github.io/info/tags/privacy/</link>
    <description>Recent content in Privacy on Guardian Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Mar 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://guardianproject.github.io/info/tags/privacy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>7ASecurity Completes Security Audit of Círculo</title>
      <link>https://guardianproject.github.io/info/2025/03/17/7asecurity-completes-security-audit-of-c%C3%ADrculo/</link>
      <pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2025/03/17/7asecurity-completes-security-audit-of-c%C3%ADrculo/</guid>
      <description>&lt;p&gt;Over the last six months, we’ve been working with &lt;a href=&#34;https://7asecurity.com/&#34;&gt;7ASecurity&lt;/a&gt; through support from the &lt;a href=&#34;https://www.opentech.fund/impact/security-safety-audits/&#34;&gt;Open Technology Fund’s Security Safety Audits&lt;/a&gt;, to complete an audit of our &lt;a href=&#34;https://encirculo.org&#34;&gt;Círculo project&lt;/a&gt;.  The public report on that is &lt;a href=&#34;https://www.opentech.fund/security-safety-audits/circulo-security-audit/&#34;&gt;now available&lt;/a&gt;. You can also read the &lt;a href=&#34;https://7asecurity.com/blog/2025/03/circulo-security-audit-by-7asecurity/&#34;&gt;blog post on the audit from 7ASecurity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don’t know about Circulo, this is a physical check-in safety app we have developed, alongside Article 19’s Mexico City team, for a number of years, focused on providing secure location sharing and urgent notifications within small trusted groups, for people under threat of physical violence. The free and open-source &lt;a href=&#34;https://gitlab.com/circuloapp&#34;&gt;code we have developed&lt;/a&gt; includes iOS and Android mobile apps, as well as server infrastructure, largely based on the &lt;a href=&#34;https://matrix.org/&#34;&gt;Matrix Protocol&lt;/a&gt;, including the mobile software development kits (SDKs), &lt;a href=&#34;https://matrix.org/docs/matrix-concepts/end-to-end-encryption/&#34;&gt;MegaOLM encryption&lt;/a&gt;, and &lt;a href=&#34;https://github.com/element-hq/synapse&#34;&gt;Synapse Server&lt;/a&gt;. You can read about the last round of work we completed on Circulo, including design, development, and community building, in a &lt;a href=&#34;https://guardianproject.info/releases/CirculoFinalReport20232024.pdf&#34;&gt;public report released in November&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The primary summary from the audit is as follows: “Overall, the auditors found that the app defended itself well against a broad range of attack vectors.”. We are happy with that assessment, though a number of issues were found, both in our mobile app code and in our infrastructure. While some of them were difficult to address, we have done our best to fix or mitigate to the extent we are able. More detail on that below.&lt;/p&gt;

&lt;p&gt;As the report states:
&lt;em&gt;Of the nine vulnerabilities identified one was flagged as “high-risk,” and seven were considered “medium-risk”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The one high-risk vulnerability discovered was summarized as “Android &amp;amp; iOS apps are vulnerable to DoS attacks via DNS spoofing”. This means that while the Círculo app was using TLS to encrypt the network encryption, as well as to authenticate the domain it connects to, it was not using any special method for ensuring the IP address provided by the DNS lookup was secure. Instead, Círculo relies on the mobile OS to provide secure DNS options for the user to enable, or on the user themselves adopting a third-party secure DNS tool.&lt;/p&gt;

&lt;p&gt;The primary harm from this high-risk vulnerability is that if someone was targeted in this way, they would not be able to access or share or see check-in and location updates from Círculo. No private information would be compromised. While we take app and service blocking and censorship seriously, we know there are many ways to avoid it, including third-party VPN apps like our own Orbot.&lt;/p&gt;

&lt;p&gt;As one method of remediating this vulnerability, we were able to build in support on Círculo Android for DNS-over-HTTPS (DoH), currently with support for Cloudflare, but in the future, as a configurable option as well. You can see the &lt;a href=&#34;https://gitlab.com/circuloapp/circulo-keanu-android/-/commit/955c5a3198a9fbfd887ee3fa57b3f331373e9127&#34;&gt;code commit on gitlab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of the other medium and lower issues we resolved last year and already included in public app releases. You can view all the open tickets responding to the medium and lower issues in the report on our &lt;a href=&#34;https://gitlab.com/groups/circuloapp/-/milestones/19#tab-issues&#34;&gt;public bug tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You will notice there are still open issues in the tracker, which we continue to consider how to implement. These are marked as “enhancements” as we see them as providing additional security beyond our established threat model. They also require significant changes in the core Matrix SDK which we rely upon, and that is shared with other Matrix-based applications such as Element.&lt;/p&gt;

&lt;p&gt;On the infrastructure side, 7ASecurity was very helpful in pointing out many ways to harden our deployment by taking advantage of additional security configurations and options available through Amazon Web Services.&lt;/p&gt;

&lt;p&gt;There are two open issues related to our production server infrastructure.&lt;/p&gt;

&lt;p&gt;“Synapse Admin API exposed to the internet”: The Admin API is utilized by our system moderators to handle emergency requests from authenticated users and partners to delete or disable accounts and rooms, if they have lost access to them due to extreme circumstances (device taken, lost, destroyed, or had to delete the app due to physical threat concern).&lt;/p&gt;

&lt;p&gt;“Data leaks in Nginx and CloudWatch logs”: The Synapse logging detail level is capturing too much data clearly. This was useful during staging deployment and development, but needs to be reduced. No personal information is leaked, only tokens and ids of rooms.&lt;/p&gt;

&lt;p&gt;These are both issues we are working to address by requiring additional network authentication to access the Admin API, and by reducing the log detail that we are storing. We also ensure our existing admin accounts and authentication credentials are stored securely in multi-factor password managers.&lt;/p&gt;

&lt;p&gt;One important aspect of Círculo to point out, is that anyone can run their own server, to fully control the stack and infrastructure. It is a complete standard Matrix Synapse deployment. You can also pay a third-party hosting provider to host your own private Matrix server instance. While we are happy to offer a default community service, we believe in open, decentralized, and federated systems, along with data sovereignty.&lt;/p&gt;

&lt;p&gt;In summary, Círculo’s security and usability is constantly improving, with security audits from organizations like 7ASecurity and support from OTF, being a critical part to that progress. If you have any questions or concerns, please reach out to us at the Guardian Project help desk at &lt;a href=&#34;mailto:support@guardianproject.info&#34;&gt;support@guardianproject.info&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Look Back at 2024: F-Droid&#39;s Progress and What’s Coming in 2025</title>
      <link>https://guardianproject.github.io/info/2025/01/21/a-look-back-at-2024-f-droids-progress-and-whats-coming-in-2025/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2025/01/21/a-look-back-at-2024-f-droids-progress-and-whats-coming-in-2025/</guid>
      <description>

&lt;p&gt;With 2024 now behind us, we wanted to take a moment to reflect on the growth and achievements we accomplished as a community last year, and celebrate the incredible support we received from the FOSS community throughout the journey.&lt;/p&gt;

&lt;p&gt;This year has been a milestone for us, with significant strides in decentralizing app distribution, expanding the F-Droid ecosystem, and solidifying our infrastructure. All of these advancements were made possible thanks to donations, grants, our volunteers and regular contributors. So thank you again to everyone who helped make 2024 another great year for F-Droid. Now let&amp;rsquo;s take a closer look at what we accomplished.&lt;/p&gt;

&lt;h2 id=&#34;a-review-of-key-accomplishments-in-2024&#34;&gt;A Review of Key Accomplishments in 2024&lt;/h2&gt;

&lt;h3 id=&#34;decentralizing-app-distribution-a-core-focus&#34;&gt;Decentralizing App Distribution: A Core Focus&lt;/h3&gt;

&lt;p&gt;One of the most important initiatives we worked on in 2024 was the continued development of our app decentralization efforts. Our aim is to make F-Droid a more robust and accessible platform, making further in-roads into the hold Big Tech currently has on app distribution.  Building on the &lt;a href=&#34;https://f-droid.org/2022/02/05/decentralizing-distribution.html&#34;&gt;work we started in 2022&lt;/a&gt;, as a part of the &lt;a href=&#34;https://www.ffdweb.org/blog/guardian-project-annoucement/&#34;&gt;Filecoin Foundation for the Decentralized Web grant&lt;/a&gt;, we continued to make substantial progress this year in providing developers and end-users with more options to distribute their apps through a decentralized, equitable and privacy-oriented process. The goal for this project is to enable individuals and organizations to mirror and distribute F-Droid apps in a community-driven fashion, reducing reliance on centralized services. This work ties into a larger vision of creating a truly open-source ecosystem for Android apps that is not governed by proprietary companies.&lt;/p&gt;

&lt;p&gt;In 2024 we completed the following infrastructure upgrades:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Broke out and overhauled core client logic around publishing and consuming repositories.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Made client logic into &lt;a href=&#34;https://f-droid.org/2023/05/02/three-client-libraries.html&#34;&gt;libraries&lt;/a&gt; to make it easy to embed repositories in any app that needs it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Added support for mirroring repositories onto both IPFS and Filecoin.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Added support in F-Droid client to use mirrors and repositories hosted on IPFS and Filecoin.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Improved F-Droid client “&lt;a href=&#34;https://f-droid.org/docs/Whitelabel_Builds/&#34;&gt;whitelabel builds&lt;/a&gt;”.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Enhanced F-Droid client’s existing “nearby” and “app swap” capabilities.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Updated F-Droid’s Repomaker tool (for easy “point and click” curation and publishing of app repos) and add support for IPFS publishing.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Supported iOS apps and progressive web apps (PWA) as packages that can be shipped via repositories.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2024 marked the end of this grant period, however the tools, features and policies established within the scope of the grant, will continue to be developed thanks to donations and other funders who are committed to further decentralizing app distribution.&lt;/p&gt;

&lt;h2 id=&#34;expanding-the-f-droid-ecosystem-repomaker-and-mobifree&#34;&gt;Expanding the F-Droid Ecosystem: Repomaker and Mobifree&lt;/h2&gt;

&lt;p&gt;Another key project we &lt;a href=&#34;https://f-droid.org/2024/05/24/mobifree.html&#34;&gt;started&lt;/a&gt; in 2024 was the further exploration and expansion of tools within the F-Droid ecosystem. Thanks to a major grant from &lt;a href=&#34;https://cordis.europa.eu/project/id/101135795&#34;&gt;EU Horizon Europe&lt;/a&gt;, we were able to deepen our focus on tools like &lt;a href=&#34;https://f-droid.org/repomaker/&#34;&gt;Repomaker&lt;/a&gt;, which helps developers create their own F-Droid-compatible repositories. This tool is crucial for maintaining and growing the diverse range of apps available on F-Droid, and its expansion will support more developers who wish to contribute to the platform.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://mobifree.org/&#34;&gt;Mobifree&lt;/a&gt; is an initiative that aims to provide a free, open-source, and decentralized alternative to traditional mobile app stores. It focuses on the freedom of choice, privacy, and user empowerment. Our contributions to this project will help strengthen the ties between F-Droid and other decentralized app distribution systems, ensuring that we remain a key player in the future of open-source mobile software.&lt;/p&gt;

&lt;p&gt;Do you have your own project ideas for Mobifree?  You can apply for up to 50,000€ from &lt;a href=&#34;https://nlnet.nl/mobifree/&#34;&gt;NLnet NGI Mobifree&lt;/a&gt;.  We can help you apply, just reach out via the &lt;a href=&#34;https://f-droid.org/about/#contact&#34;&gt;regular F-Droid channels&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Key Contributions in 2024:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User research to understand app developer distribution workflows, compensation models, index preferences and APK metadata.&lt;/li&gt;
&lt;li&gt;Built on existing Fastlane tooling to further automate the app package and upload the process to F-Droid.&lt;/li&gt;
&lt;li&gt;Repomaker feature development made the repo creation and distribution process easier for non-tech users, non-profit and humanitarian organizations.&lt;/li&gt;
&lt;li&gt;Created a central registry of all DAPPER compatible repos and API for app stores like Murena&amp;rsquo;s &lt;a href=&#34;https://doc.e.foundation/app-lounge-main&#34;&gt;App Lounge&lt;/a&gt; to pull in compatible repos and further decentralize app distribution process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In 2025, we continue to contribute to the Mobifree project, getting our tools, apps and software ready for pilot testing this spring. From there, we will continue to improve the software based on user-testing feedback, ultimately making the tools available for the general public to use and enjoy.&lt;/p&gt;

&lt;h3 id=&#34;f-droid-community-engagement&#34;&gt;F-Droid Community Engagement&lt;/h3&gt;

&lt;p&gt;None of this would be possible without the incredible contributions from the FOSS community. In 2024, we saw a substantial increase in the number of contributions to F-Droid. From bug fixes and app updates to new apps being added to the store, our community of developers, testers, and contributors have been pivotal in keeping F-Droid running smoothly.&lt;/p&gt;

&lt;p&gt;Here are some statistics that highlight the community’s impact this year:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App Updates: Over 7205 app updates were made, keeping the app catalog fresh and secure.&lt;/li&gt;
&lt;li&gt;New Apps Added: We welcomed over 402 new apps to the F-Droid repository, further expanding the variety of open-source apps available to users.&lt;/li&gt;
&lt;li&gt;Archived Apps: 939 Apps were successfully archived.&lt;/li&gt;
&lt;li&gt;Packages per Hour: Approximately 2-3 packages were created every hour, without interruption. Between updated and new apps, F-Droid built apps over 7600 times. Since most modern apps are split per device architecture, this  means that each app version required multiple packages to be built, sometimes up to 4 packages for each app version. This increases the real number of builds by 2.5-3x. Putting it all together, that would equal between 2-3 packages created per hour, without interruption in 2024.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These numbers are a reflection of the dedication and passion of the F-Droid community. We are immensely grateful for each and every contributor who made these achievements possible.&lt;/p&gt;

&lt;h2 id=&#34;looking-ahead-in-2025&#34;&gt;Looking Ahead in 2025&lt;/h2&gt;

&lt;h3 id=&#34;new-team-members-and-big-plans-for-2025&#34;&gt;New Team Members and Big Plans for 2025&lt;/h3&gt;

&lt;p&gt;As we look forward to 2025, we are excited to announce two key additions to the F-Droid team who will help us scale our efforts in the coming year. Hailey Still has joined us as a new project manager and UX designer. Hailey brings a diverse background of experience in managing complex projects and designing user-friendly and intuitive interfaces. Her expertise will continue to be instrumental in helping us secure new grant opportunities, streamline our operations and improve the user experience tools we work on.&lt;/p&gt;

&lt;p&gt;We are also pleased to welcome Nzambi Kakusu as our new grant administrator. Nzambi will play a crucial role in helping us secure and manage funding for F-Droid&amp;rsquo;s continued development. With her experience in grant management, Nzambi will help ensure that we can continue to sustain and grow the project in a way that aligns with our mission and values.&lt;/p&gt;

&lt;h3 id=&#34;otf-grant-and-infrastructure-work&#34;&gt;OTF Grant and Infrastructure Work&lt;/h3&gt;

&lt;p&gt;In 2025 we are thrilled to begin working on a grant funded by the &lt;a href=&#34;https://www.opentech.fund/funds/free-and-open-source-software-sustainability-fund/&#34;&gt;Open Technology Fund&lt;/a&gt;. This grant will help us maintain F-Droid and focus on critical infrastructure work that was often overlooked, due to lack of consistent funding in the past. We’ll be working on improving the resilience and security of our systems, ensuring that F-Droid continues to serve as a reliable, open-source app distribution platform for years to come. There will be an official announcement article coming soon.&lt;/p&gt;

&lt;h2 id=&#34;to-wrap-it-up&#34;&gt;To Wrap it Up&lt;/h2&gt;

&lt;p&gt;As we continue to grow and evolve, we are committed to our mission of decentralizing app distribution, expanding the F-Droid ecosystem, and empowering users with open-source alternatives to proprietary software. With the support of our community, our volunteers, and our new team members, we are excited for what 2025 will bring.&lt;/p&gt;

&lt;p&gt;Thank you for being part of the F-Droid journey!&lt;/p&gt;

&lt;p&gt;We look forward to an exciting year ahead, and we invite you to continue supporting F-Droid through &lt;a href=&#34;https://f-droid.org/contribute/&#34;&gt;contributions&lt;/a&gt;, &lt;a href=&#34;https://f-droid.org/donate/&#34;&gt;donations&lt;/a&gt;, and &lt;a href=&#34;https://floss.social/@fdroidorg&#34;&gt;spreading the word&lt;/a&gt; about our mission. Let’s make 2025 another year of progress for the open-source community!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using TLS ECH from Python</title>
      <link>https://guardianproject.github.io/info/2025/01/10/using-tls-ech-from-python/</link>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2025/01/10/using-tls-ech-from-python/</guid>
      <description>&lt;p&gt;At first, the idea of encrypting more of the metadata found inside the initial packet (the &amp;ldquo;ClientHello&amp;rdquo;) of a TLS
connection may seem simple and obvious, but there are of course reasons that this wasn&amp;rsquo;t done right from the start.
In this post I will describe the flow of a connection using Encrypted Client Hello (ECH) to protect the metadata fields,
and present a working code example using a fork of CPython built with DEfO project&amp;rsquo;s OpenSSL fork to connect to
ECH-enabled HTTPS servers.&lt;/p&gt;

&lt;p&gt;To understand why this is an issue, let&amp;rsquo;s take a step back and look at how websites are hosted.
Many websites are hosted on shared servers, which means that a single server machine is responsible for serving
multiple, possibly hundreds or thousands, of websites.
This is known as the shared hosting model.
In this setup, when a user types in a URL or clicks on a link to visit a website and the browser connects to the server,
the server needs to know which website the users is requesting.
This is where the Server Name Indication (SNI) comes in - it&amp;rsquo;s a field in the initial packet of a TLS connection that
tells the server which website the user is trying to access.
The server can then send the correct certificate so that the browser can authenticate the connection, and then send the
requested website content.&lt;/p&gt;

&lt;p&gt;Because this field was sent unencrypted, this means that anyone who can see the traffic between the user&amp;rsquo;s browser and
the server can intercept the SNI and know which website the user is trying to visit.
This can be a privacy concern, as it allows ISPs, network administrators, or other unwanted observers to build a profile
of the user&amp;rsquo;s browsing history.
It&amp;rsquo;s not just about the websites they visit, but also about the potential for censorship or targeted attacks.
With the SNI being unencrypted, it&amp;rsquo;s like sending a postcard with the address visible to anyone who handles it - it may
not be the end of the world for most browsing activity, but it&amp;rsquo;s certainly not private.
Encrypted Client Hello aims to change this by encrypting the SNI and other metadata, making it much harder for third
parties to intercept and exploit this information.&lt;/p&gt;

&lt;p&gt;So, why wasn&amp;rsquo;t it easy to protect the SNI and other metadata from the start?
The main challenge was that, in order to encrypt the SNI, the client (i.e., the user&amp;rsquo;s browser) needs to know the
public key that the server wants the ClientHello to be encrypted with in advance.
However, the server&amp;rsquo;s ECH public key is tied to the specific website being requested, and there wasn&amp;rsquo;t a straightforward
way to discover a public key that could be used to talk to the server without revealing the SNI.
This created a chicken-and-egg problem, where the client couldn&amp;rsquo;t encrypt the SNI without knowing the server&amp;rsquo;s public
key, but it couldn&amp;rsquo;t know the server&amp;rsquo;s public key without sending the SNI in plaintext.&lt;/p&gt;

&lt;p&gt;This problem is solved with ECH by introducing a new type of DNS record, called an
&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9460&#34;&gt;HTTPS record&lt;/a&gt;.
An HTTPS record is a special type of DNS record that contains the ECH public key of the server, along with other metadata,
in a way that can be retrieved by the client without revealing the SNI (the website name is still leaked via the DNS
request, but it is possible to protect your requests using DNS-over-TLS or DNS-over-HTTPS).
The HTTPS record is typically retrieved by the client during the DNS lookup process, before the TLS connection is
established.&lt;/p&gt;

&lt;p&gt;The HTTPS record contains an ECH configuration, which is used to encrypt the SNI and other metadata.
This is generated by the server and is tied to the specific configuration of the server, rather than to a specific
website.
By using HTTPS records to retrieve the server&amp;rsquo;s ECH public key, we are able to break the chicken-and-egg problem and
provide a way to encrypt the SNI and other metadata.&lt;/p&gt;

&lt;p&gt;Before we can lookup the HTTPS record, it&amp;rsquo;s first necessary to work out where that record would live.
These records have been designed to be quite flexible, so can accommodate services running on non-default port numbers.
If the default port number is in use then the HTTPS record will be on the same domain name as the website, but for
non-default port numbers, there will be a prefix to the domain name:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def svcbname(url: str) -&amp;gt; str:
    &amp;quot;&amp;quot;&amp;quot;Derive DNS name of SVCB/HTTPS record corresponding to target URL.&amp;quot;&amp;quot;&amp;quot;
    parsed = urllib.parse.urlparse(url)
    if parsed.scheme == &amp;quot;https&amp;quot;:
        if (parsed.port or 443) == 443:
            return parsed.hostname
        else:
            return f&amp;quot;_{parsed.port}._https.{parsed.hostname}&amp;quot;
    elif parsed.scheme == &amp;quot;http&amp;quot;:
        if (parsed.port or 80) in (443, 80):
            return parsed.hostname
        else:
            return f&amp;quot;_{parsed.port}._https.{parsed.hostname}&amp;quot;
    else:
        # For now, no other scheme is supported
        return None
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To keep it simple, the examples in this post will use plain DNS but the technique is equally applicable to DNS-over-TLS
and DNS-over-HTTPS. Now that we have the domain name to query, we can fetch the ECH configuration from the DNS using
the &lt;a href=&#34;https://www.dnspython.org/&#34;&gt;dnspython&lt;/a&gt; library:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_ech_configs(domain) -&amp;gt; List[bytes]:
    try:
        answers = dns.resolver.resolve(domain, &amp;quot;HTTPS&amp;quot;)
    except dns.resolver.NoAnswer:
        logging.warning(f&amp;quot;No HTTPS record found for {domain}&amp;quot;)
        return []
    except Exception as e:
        logging.critical(f&amp;quot;DNS query failed: {e}&amp;quot;)
        sys.exit(1)
    configs: List[bytes] = []
    for rdata in answers:
        if hasattr(rdata, &amp;quot;params&amp;quot;):
            params = rdata.params
            echconfig = params.get(5)
            if echconfig:
                configs.append(echconfig.ech)
    if len(configs) == 0:
        logging.warning(f&amp;quot;No echconfig found in HTTPS record for {domain}&amp;quot;)
    return configs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the ECH configurations are known, these can be used to establish the connection and fetch the website:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_http(url, ech_configs) -&amp;gt; bytes:
    parser = urllib.parse.urlparse(url)
    hostname, port, path = url.hostname, url.port, url.path
    logging.debug(&amp;quot;Performing GET request for https://{hostname}:{port}/{path}&amp;quot;)
    context = ssl.SSLContext(ssl.PROTOCOL_TLS_CLIENT)
    context.load_verify_locations(certifi.where())
    for config in ech_configs:
        try:
            context.set_ech_config(config)
        except ssl.SSLError as e:
            logging.error(f&amp;quot;SSL error: {e}&amp;quot;)
            pass
    with socket.create_connection((hostname, port)) as sock:
        with context.wrap_socket(sock, server_hostname=hostname, do_handshake_on_connect=False) as ssock:
            try:
                ssock.do_handshake()
                logging.debug(&amp;quot;Handshake completed with ECH status: %s&amp;quot;, ssock.get_ech_status().name)
                logging.debug(&amp;quot;Inner SNI: %s, Outer SNI: %s&amp;quot;, ssock.server_hostname, ssock.outer_server_hostname)
                request = f&#39;GET {path} HTTP/1.1\r\nHost: {hostname}\r\nConnection: close\r\n\r\n&#39;
                ssock.sendall(request.encode(&#39;utf-8&#39;))
                response = b&#39;&#39;
                while True:
                    data = ssock.recv(4096)
                    if not data:
                        break
                    response += data
                return response
            except ssl.SSLError as e:
                logging.error(f&amp;quot;SSL error: {e}&amp;quot;)
                raise e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important step here is the new
&lt;a href=&#34;https://irl.github.io/cpython/library/ssl.html#ssl.SSLContext.set_ech_config&#34;&gt;&lt;code&gt;set_ech_config&lt;/code&gt;&lt;/a&gt; method on the
&lt;code&gt;SSLContext&lt;/code&gt; that allows you to add the ECH configuration containing the public key.
If there are multiple records, the underlying OpenSSL will determine which of the keys to use.
There are also a few new methods that allow you to get the status information relating to ECH from the &lt;code&gt;SSLSocket&lt;/code&gt;
after the completion of the handshake.&lt;/p&gt;

&lt;p&gt;In the simple case, that&amp;rsquo;s all there is to it.
If you were to watch the connection with Wireshark you would not be able to see the true SNI being sent to the server
and would only see the decoy SNI present in the unencrypted &amp;ldquo;ClientHelloOuter&amp;rdquo;.
This decoy SNI is added to appease &lt;a href=&#34;https://en.wikipedia.org/wiki/Middlebox&#34;&gt;middleboxes&lt;/a&gt; that may block traffic,
accidentally or deliberately, if that field is missing entirely.
There are also further protections against such middleboxes from the application of GREASE:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If the client attempts to connect to a server and does not have an ECHConfig structure available for the server, it
SHOULD send a GREASE &amp;ldquo;encrypted_client_hello&amp;rdquo; extension in the first ClientHello [&amp;hellip;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that if your client supports ECH but does not have the configuration available to use it, the client should
still send an ECH extension filled with nonsense anyway.
This will help to detect deployment issues early as errors will be immediately obvious to users and won&amp;rsquo;t rely on
servers having deployed ECH before the errors are triggered.&lt;/p&gt;

&lt;p&gt;Finally, if the server sees this GREASE ECH extension then it can use this to know that you support ECH but didn&amp;rsquo;t
have a configuration available.
In its reply, it can send a &amp;ldquo;retry config&amp;rdquo; and then terminate the connection.
You then have the configuration available to start the connection again with a real ECH extension this time, and can
cache that for future requests too.&lt;/p&gt;

&lt;p&gt;For a full client example including the use of retry configs, you can see our
&lt;a href=&#34;https://github.com/defo-project/docker-defo-client/blob/main/pyclient.py&#34;&gt;example Python client&lt;/a&gt; at GitHub.
You&amp;rsquo;ll need to use this with our &lt;a href=&#34;https://github.com/irl/cpython&#34;&gt;CPython fork&lt;/a&gt; and
&lt;a href=&#34;https://github.com/defo-project/openssl&#34;&gt;OpenSSL fork&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF119 Conference Report: Monday March 18, 2024</title>
      <link>https://guardianproject.github.io/info/2024/03/18/ietf119-conference-report-monday-march-18-2024/</link>
      <pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2024/03/18/ietf119-conference-report-monday-march-18-2024/</guid>
      <description>

&lt;p&gt;&lt;em&gt;It&amp;rsquo;s Opening Day of the &lt;a href=&#34;https://www.ietf.org/how/meetings/119/&#34;&gt;119th IETF meeting&lt;/a&gt; in Brisbane Australia.  This post commences a daily rundown of privacy and Internet Freedom activities at this IETF meeting. For the rundown on IETF119 Hackathon, see my &lt;a href=&#34;https://guardianproject.info/2024/03/17/ietf119-hackathon-report/&#34;&gt;Hackathon report&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;dispatch&#34;&gt;Dispatch&lt;/h2&gt;

&lt;p&gt;IETF meetings don&amp;rsquo;t often kick off with the open dispatch but this time it happened. Dispatch sessions are meant to help specification authors find a home for their work if a home isn&amp;rsquo;t obvious. There are two classes of dispatch request:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Smaller items that have been spun off from mature work.  A good example is when a specification has a component that needs a formal record-type declaration.&lt;/li&gt;
&lt;li&gt;New work, possibly not yet well-defined, where the authors themselves haven&amp;rsquo;t a clue where it belongs. This is somewhat rarer because IETF offers several mechanisms for new work to develop interest and work its way into the formal process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We got some of both this time. Unfortunately, the one that needs the most work is in the latter category and brought to IETF by a privacy-focused team.  I need to write a separate post with a crisp definition of a better method for achieving success at the IETF because we can&amp;rsquo;t make headway until hyptothetical participants learn from past mistakes (including my own).&lt;/p&gt;

&lt;h2 id=&#34;cfrg&#34;&gt;CFRG&lt;/h2&gt;

&lt;p&gt;There has a frightening amount of new cryptography coming into the IETF over the last three to five years, driving by privacy-preserving measurement, quantum computing and the endless search for better performance.  Most of it entires IETF through the Cryptography Forum Research Group. It stikes me that this space is moving very quickly and I&amp;rsquo;m concerned we&amp;rsquo;re baking mistakes into Internet protocols in a way that will be hard to retrieve in the future.&lt;/p&gt;

&lt;h2 id=&#34;ohttp&#34;&gt;OHTTP&lt;/h2&gt;

&lt;p&gt;The Oblivious HTTP Application Intermediation (OHAI) Working Group has brought its key draft - &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ohai-ohttp/10/&#34;&gt;Oblivious HTTP&lt;/a&gt; to RFC status as of January 25, 2024 (&lt;a href=&#34;https://datatracker.ietf.org/doc/rfc9458/&#34;&gt;RFC9458&lt;/a&gt;). This was a focused effort, well-managed by the &lt;a href=&#34;https://datatracker.ietf.org/wg/ohai/about/&#34;&gt;Working Group&lt;/a&gt; chairs.&lt;/p&gt;

&lt;p&gt;The Working Group remains in place to tackle future items that arise from the early deployments. Better handling of large data transactions is the first such item, giving rise to a new specification for &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ohai-chunked-ohttp/&#34;&gt;Chunked Oblivious HTTP Messages&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;hackathon-demo&#34;&gt;Hackathon Demo&lt;/h2&gt;

&lt;p&gt;I presented the results from our interoperability testing on the &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-httpbis-unprompted-auth/&#34;&gt;The HTTP Signature Authentication Scheme&lt;/a&gt; to the wider IETF attendee audience at the Hackathon Demo event and felt lucky to have six people show interest (the competition being free food nearby).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF119 Conference Report: Hackathon March 17, 2024</title>
      <link>https://guardianproject.github.io/info/2024/03/17/ietf119-conference-report-hackathon-march-17-2024/</link>
      <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2024/03/17/ietf119-conference-report-hackathon-march-17-2024/</guid>
      <description>&lt;p&gt;&lt;em&gt;Hackathon Weekend at the &lt;a href=&#34;https://www.ietf.org/how/meetings/119/&#34;&gt;119th IETF meeting&lt;/a&gt; in Brisbane Australia.  This post commences a daily rundown of privacy and Internet Freedom activities at this IETF meeting.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;IETF&amp;rsquo;s Hackathon, held at each face-to-face IETF meeting, is designed to encourage interoperability testing of standards under development. See this meeting&amp;rsquo;s wiki page for a description of&lt;a href=&#34;https://wiki.ietf.org/en/meeting/119/hackathon&#34;&gt;this year&amp;rsquo;s twenty-four projects&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-httpbis-unprompted-auth/&#34;&gt;The HTTP Signature Authentication Scheme&lt;/a&gt; has been winding its way through the &lt;a href=&#34;https://datatracker.ietf.org/wg/httpbis/charter/&#34;&gt;HTTPbis Working Group&lt;/a&gt; since being adopted as a Working Group draft in July 2022. This work proposes a mechanism by which HTTP servers can offer authenticated resources without telegraphing they do so (thus resisting probing attacks).&lt;/p&gt;

&lt;p&gt;Until very recently, Guardian Project had the &lt;a href=&#34;https://gitlab.com/guardianproject/httpsignatureauthentation/-/tree/main/http-sigauth-java&#34;&gt;only extant implementation&lt;/a&gt; of this specification.  It was originally demonstrated at the IETF113 (March 2022) Hackathon.  That changed in the last month with new implementations by &lt;a href=&#34;https://github.com/google/quiche/&#34;&gt;Google&lt;/a&gt; and &lt;a href=&#34;https://github.com/francoismichel/http-signature-auth-go&#34;&gt;Université catholique de Louvain&lt;/a&gt;. We were able to pull together an interoperability test among these three for the Hackathon!&lt;/p&gt;

&lt;p&gt;Interoperability proved surprisingly easy, implying that each of the authors had the same understanding of the wording of the specification, at least for this baseline test.  While we were unable to conduct a full pairwise test across the three server implementations and the three client implementations, we did get sufficient coverage to call it an early win. The testing team agreed more exercise will be necessary on the handling of the three supported HTTP versions as well as a variety of key related issues that will arise with the specification &amp;ldquo;in practice&amp;rdquo;. Still this effort seems technically solid.&lt;/p&gt;

&lt;p&gt;Potentially the most significant issue going forward is defining an approach to integrating this work into the prominent protocol stacks. Since HTTP and TLS have been in the field for more than a quarter century, their programming libraries have ossified (and narrowed) around conventional practices which does not support layer interaction in the manner necessary to support this work.  In particular, this work uses the &lt;a href=&#34;https://www.openssl.org/docs/man1.1.1/man3/SSL_export_keying_material.html&#34;&gt;keying materials exporter&lt;/a&gt; available at the TLS layer but not currently available in most HTTP layers where this spec needs the keying materials to create the proper HTTP authentication header.  Time will tell.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The future of our fdroid-compatible app repository</title>
      <link>https://guardianproject.github.io/info/2024/02/24/the-future-of-our-fdroid-compatible-app-repository/</link>
      <pubDate>Sat, 24 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2024/02/24/the-future-of-our-fdroid-compatible-app-repository/</guid>
      <description>&lt;p&gt;Guardian Project has been running its own &lt;a href=&#34;https://guardianproject.info/fdroid/&#34;&gt;fdroid-compatible app repository&lt;/a&gt; since &lt;a href=&#34;https://guardianproject.info/2012/03/15/our-new-f-droid-app-repository-out-of-date/&#34;&gt;2012&lt;/a&gt;. Up until now, we worked to ensure that our repository had the same standards of free software as the official F-Droid repository.  Therefore, the Guardian Project repository was included in the official F-Droid client app by default.  A lot has changed since then, for the better.  F-Droid has long since stopped shipping pre-built binaries from any provider.  Back in the day, F-Droid shipped some binaries, like Mozilla&amp;rsquo;s Firefox APKs, and allowed some non-free libraries in apps.  The free software ecosystem on Android has since blossomed, so F-Droid no longer needs to make those kinds of compromises.  And F-Droid is completing a big update on how repositories are handled.&lt;/p&gt;

&lt;p&gt;Guardian Project remains committed to producing free software.  But for some of our key use cases, it is unfortunately not yet possible to address them without including some proprietary libraries in our free software apps.  This means that the Guardian Project repository is &lt;a href=&#34;https://gitlab.com/fdroid/fdroidclient/-/merge_requests/1302&#34;&gt;no longer included&lt;/a&gt; in F-Droid by default.  Now, F-Droid can enforce that apps only use free software libraries while Guardian Project cannot yet.  This ties in nicely to two other key development efforts with the official F-Droid client app.  First, the index signer keys for selected repositories are now &lt;a href=&#34;https://gitlab.com/fdroid/fdroidclient/-/merge_requests/1296/diffs?commit_id=54e3975660f97c60ffdd038b1965a30822e033db&#34;&gt;built-in&lt;/a&gt;, that means that the client will automatically verify that the user added the real repository.  Second, F-Droid &lt;a href=&#34;https://gitlab.com/fdroid/fdroidclient/-/merge_requests?milestone_title=1.20&#34;&gt;v1.20&lt;/a&gt; will ship a massive overhaul of the core plumbing and user experience for adding, removing, and managing repositories.  This makes it much easier and safer for users to use repositories that are not built-in.&lt;/p&gt;

&lt;p&gt;What kinds of exceptions does Guardian Project make?  We still work to avoid as many kinds of tracking as possible.  And the code that we create is free software.  The exceptions are all related to proprietary libraries getting built into some of our apps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ProofMode uses a number of Google Play Services libraries, such as Play Integrity (SafetyNet), FusionLocationProvider, and others, to provide extra assurances about the provenance of media files generated on an Android device.&lt;/li&gt;
&lt;li&gt;Circulo and Haven use proprietary Google libraries to assist with accurately finding location and to display maps.&lt;/li&gt;
&lt;li&gt;Save (aka OpenArchive) needs to integrate with widespread proprietary services like Dropbox or Google Drive. When it is useful, we produce free software versions of our apps and get them included on &lt;a href=&#34;https://f-droid.org/packages/net.opendasharchive.openarchive.release/&#34;&gt;f-droid.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;There is work underway to get Tor Browser &lt;a href=&#34;https://gitlab.torproject.org/tpo/applications/tor-browser/-/issues/27539#note_2989340&#34;&gt;included&lt;/a&gt; in f-droid.org.  One key blocker has been a proprietary binary library that the build system is &lt;a href=&#34;https://gitlab.com/guardianproject/fdroid-metadata/-/issues/3&#34;&gt;including&lt;/a&gt; anyway, even though it should be disabled in the build.&lt;/li&gt;
&lt;li&gt;Getting Orbot into f-droid.org is on our roadmap, it is already free software and otherwise compliant.  We welcome help maintaining the &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/org.torproject.android.yml&#34;&gt;build metadata&lt;/a&gt; in &lt;em&gt;fdroiddata&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will continue to &lt;a href=&#34;https://gitlab.com/guardianproject/fdroid-metadata/-/issues/4&#34;&gt;mark&lt;/a&gt; the apps in our repository with Anti-Features according to the &lt;a href=&#34;https://f-droid.org/docs/Anti-Features/&#34;&gt;F-Droid standard&lt;/a&gt;.  If you have found something we have overlooked, please &lt;a href=&#34;https://gitlab.com/guardianproject/fdroid-metadata/-/issues&#34;&gt;open an issue&lt;/a&gt; so we can fix it.  One side benefit of this change is that we can now also include some other important apps for privacy, until there are free software alternatives without any proprietary libraries. Firefox and Signal are two likely candidates, since both apps can be built as free software, but the official builds include proprietary libraries.  In any case, any third party apps we might include here will have to meet the same standards as our own apps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quick set up guide for Encrypted Client Hello (ECH)</title>
      <link>https://guardianproject.github.io/info/2023/11/10/quick-set-up-guide-for-encrypted-client-hello-ech/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/11/10/quick-set-up-guide-for-encrypted-client-hello-ech/</guid>
      <description>

&lt;p&gt;The Encrypted Client Hello (ECH) mechanism &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-tls-esni&#34;&gt;draft-spec&lt;/a&gt; is a way to plug a few privacy-holes that remain in the Transport Layer Security (TLS) protocol that&amp;rsquo;s used as the security layer for the web. OpenSSL is a widely used library that provides an implementation of the TLS protocol. The &lt;a href=&#34;https://defo.ie/&#34;&gt;DEfO project&lt;/a&gt; has developed an implementation of ECH for OpenSSL, and proof-of-concept implementations of various clients and servers that use OpenSSL, and other TLS libraries, as a demonstration and for interoperability testing. DEfO is funded by the Open Technology Fund (OTF).&lt;/p&gt;

&lt;p&gt;This guide is aimed at those who would like to try out ECH with our experimental Debian &lt;em&gt;unstable&lt;/em&gt; packages for OpenSSL, &lt;em&gt;curl&lt;/em&gt; and &lt;em&gt;nginx&lt;/em&gt;. The DEfO project is making packages temporarily available so people can carry out such experiments before upstream maintainers include ECH in standard releases.&lt;/p&gt;

&lt;p&gt;This guide describes two set ups: one assumes that you want to setup everything (i.e. a web server and associated DNS authoritative server) on one virtual machine and a second describes a way to set up an ECH-enabled web server if you have an existing DNS configuration elsewhere. Many other configurations are of course possible. Comments/questions are welcome via &lt;a href=&#34;mailto:info@defo.ie&#34;&gt;email&lt;/a&gt; or as GitLab issues/merge requests.&lt;/p&gt;

&lt;p&gt;In summary this guide shows how to:
- find and install our Debian &lt;em&gt;unstable&lt;/em&gt; packages
- configure a minimal DNS setup (using dnsmasq or bind) that enables use of ECH from browsers
- configure a minimal &lt;em&gt;nginx&lt;/em&gt; setup for an ECH enabled web sites
- test your DNS set up and that ECH is working&lt;/p&gt;

&lt;p&gt;We assume the reader is comfortable with simple DNS management and system administration tasks.
When commands shown below should be run as &lt;code&gt;root&lt;/code&gt; they are prepended with a &amp;lsquo;#&amp;rsquo;, if not they are prepended with a &amp;lsquo;$&amp;rsquo;.&lt;/p&gt;

&lt;h2 id=&#34;install-packages&#34;&gt;Install packages&lt;/h2&gt;

&lt;p&gt;You need to first have access to a virtual machine running Debian &lt;em&gt;unstable&lt;/em&gt;. Many online resources describe many ways to do this.&lt;/p&gt;

&lt;p&gt;We start with an empty (minimal) Debian &lt;em&gt;unstable&lt;/em&gt; system and install OpenSSL from the DEfO apt repository.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# apt install ca-certificates
# echo &amp;quot;deb [trusted=yes] https://defo.ie/debian/ ./&amp;quot; &amp;gt; /etc/apt/sources.list.d/defo.list
# apt update
# apt install openssl
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pick-some-dns-names-to-use&#34;&gt;Pick some DNS names to use&lt;/h2&gt;

&lt;p&gt;In the text below we assume that the web server for which we wish to benefit from ECH is called &lt;code&gt;hidden.example.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ECH also involves a so-called &lt;code&gt;public_name&lt;/code&gt; - that&amp;rsquo;s present in the outer ClientHello when ECH is used and hence is visible to a network observer, unlike the server name we include inside the Encrypted Client Hello. The &lt;code&gt;public_name&lt;/code&gt; we use below is &lt;code&gt;example.com&lt;/code&gt;`&lt;/p&gt;

&lt;p&gt;You should obviously substitute your chosen DNS names.&lt;/p&gt;

&lt;h2 id=&#34;generate-an-ech-key-pair&#34;&gt;Generate an ECH key pair&lt;/h2&gt;

&lt;p&gt;For ECH to work, we need a new asymmetric key pair. (Different from those used for TLS server authentication), so next we generate an ECH key pair:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# mkdir /etc/echkeydir/
# openssl ech -public_name example.com -out /etc/echkeydir/example.pem.ech
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that we need this file later to set up DNS as well as &lt;em&gt;nginx&lt;/em&gt;. &lt;em&gt;Nginx&lt;/em&gt; will make use of the private key from the ECH key file, whilst the DNS will be used to publish the corresponding public key in an HTTPS resource record (that&amp;rsquo;s where ECH-enabled browsers will look for ECH public keys).&lt;/p&gt;

&lt;p&gt;The file name chosen should end with &lt;code&gt;.pem.ech&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;set-up-dns&#34;&gt;Set up DNS&lt;/h2&gt;

&lt;p&gt;There are many ways in which one can set up the DNS records required to enable experimenting with ECH. We document two ways here, the first is where the main DNS name with which you&amp;rsquo;re experimenting is newly registered DNS name and has no existing DNS set up. The second describes a case where a DNS name exists but we need to add some new resource records to enable ECH.&lt;/p&gt;

&lt;p&gt;In both cases, &lt;code&gt;&amp;lt;IP&amp;gt;&lt;/code&gt; should be the IPv4 address for the host running the web server. (We leave IPv6 handling as an exercise for the reader, but there&amp;rsquo;s nothing ECH-specific required for IPv6.)&lt;/p&gt;

&lt;h3 id=&#34;standalone-new-setup-dnsmasq-as-a-authoritative-dns-server-to-serve-the-ech-key-on-the-same-vm&#34;&gt;Standalone/New setup : dnsmasq as a authoritative DNS server to serve the ECH key (on the same VM)&lt;/h3&gt;

&lt;p&gt;In this case we also need to pick some DNS nameserver names, we assume the authoritative primary nameserver for both web server DNS names is &lt;code&gt;ns.example.com&lt;/code&gt; with a secondary of &lt;code&gt;ns2.example.com&lt;/code&gt;`&lt;/p&gt;

&lt;p&gt;The DNS set up to use starting from a clean dnsmasq install:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# apt install dnsmasq
# cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/dnsmasq.d/example.conf
no-resolv
no-hosts
auth-server=ns.example.com,ns2.example.com
auth-zone=example.com
auth-sec-servers=ns2.example.com
auth-soa=42,admin.example.com
host-record=example.com,&amp;lt;IP&amp;gt;
host-record=hidden.example.com,&amp;lt;IP&amp;gt;
dns-rr=hidden.example.com,65,&amp;lt;ascii-hex encoded HTTPS rdata&amp;gt;
EOF
# systemctl restart dnsmasq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that you need to bump the SOA version (42 in the above) every time you change the config and make sure the zone distributes to ns2.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;ascii-hex encoded HTTPS rdata&amp;gt;&lt;/code&gt; will be published as the HTTPS resource record (type == 65) for &lt;code&gt;hidden.example.com&lt;/code&gt; and can be produced from the file we generated earlier via a shell script you can download and use as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ _curl_ https://raw.githubusercontent.com/sftcd/openssl/ECH-draft-13c/esnistuff/pem2rr.sh -o pem2rr.sh
$ chmod u+x pem2rr.sh
$ ./pem2rr.sh /etc/echkeydir/example.pem.ech
0001000005003b0039fe0d0035db0020002059907d619054c907a1f296ceb63dde1d57f72f15db172601a2f6b55e66e7cd0f00040001000100066261722e69650000
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;existing-dns-name-setup-using-bind-to-publish-new-ech-related-resource-records&#34;&gt;Existing DNS name setup: using bind to publish new ECH related resource records&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s assume you have an existing bind-based DNS setup for &lt;code&gt;example.com&lt;/code&gt;&lt;code&gt;, but are moving the IP address for that to a new VM that&#39;ll run the ECH-enabled web server for both&lt;/code&gt;example.com&lt;code&gt;and&lt;/code&gt;hidden.example.com`&lt;code&gt;. The change you might then make using the bind&lt;/code&gt;nsupdate` command on the authoritative DNS server would then look like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change/add IP address records for our DNS names.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bind&#34;&gt;$ sudo nsupdate -l
&amp;gt; update delete example.com a
&amp;gt; update delete example.com aaaa
&amp;gt; update add example.com 300 a &amp;lt;IP&amp;gt;
&amp;gt; update add hidden.example.com 300 a &amp;lt;IP&amp;gt;
&amp;gt; send
&amp;gt; quit
$
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Add new HTTPS resource record for &lt;code&gt;hidden.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First we need to get the base64 encoded public from our &lt;code&gt;/etc/echkeydir/example.pem.ech&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tail -2 /etc/echkeydir/example.pem.ech | head -1
ADr+DQA2mQAgACAF7cLT+KtK0oR2DrRCGXmzBWM1eHgJgDEGLqL644/OcAAEAAEAAQAHaG9iYS5pZQAA
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That base64 encoded value is what we need to publish in the DNS&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo nsupdate -l
&amp;gt; update delete hidden.example.com HTTPS
&amp;gt; update add hidden.example.com 300 HTTPS 1 . ech=&amp;lt;base64-encoded-value&amp;gt;
&amp;gt; send
&amp;gt; quit
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;checking-your-dns-set-up&#34;&gt;Checking your DNS set up&lt;/h2&gt;

&lt;p&gt;You can check that value is correctly published in the DNS e.g. using the &lt;code&gt;dig command&lt;/code&gt;`:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dig +short https hidden.example.com
1 . ech=ADr+DQA2mQAgACAF7cLT+KtK0oR2DrRCGXmzBWM1eHgJgDEGLqL644/OcAAEAAEAAQAHaG9iYS5pZQAA
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If your version of &lt;code&gt;dig&lt;/code&gt; is older and doesn&amp;rsquo;t know about HTTPS resource records, then you may need to check via:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dig +short +unknownformat -t TYPE65 hidden.example.com
\# 67 0001000005003C003AFE0D0036990020002005EDC2D3F8AB4AD28476 0EB4421979B30563357878098031062EA2FAE38FCE70000400010001 0007686F62612E69650000
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The 2nd-last invocation of &lt;code&gt;dig&lt;/code&gt; above shows the presentation format version of the HTTPS resource record. The last invocation above shows the equivalent in ascii-hex, which (minus the spaces) is what &lt;code&gt;dnsmasq&lt;/code&gt; needs in it&amp;rsquo;s configuration file.&lt;/p&gt;

&lt;p&gt;We assume &lt;code&gt;dnsmasq&lt;/code&gt; will likely accept presentation format for HTTPS resource records in future as &lt;code&gt;bind&lt;/code&gt; tooling already.&lt;/p&gt;

&lt;h2 id=&#34;set-up-nginx-to-serve-an-outer-and-an-inner-hidden-website&#34;&gt;Set up &lt;em&gt;nginx&lt;/em&gt; to serve an outer and an inner (hidden) website&lt;/h2&gt;

&lt;p&gt;Install &lt;em&gt;nginx&lt;/em&gt;-light from the DEfO repo, as above:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# apt install _nginx_-light certbot python3-certbot-_nginx_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don&amp;rsquo;t already have a web server config for &lt;code&gt;example.com&lt;/code&gt; then you can create a basic pair of &lt;code&gt;sites-enabled&lt;/code&gt; configuration files via the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# rm /etc/_nginx_/sites-enabled/default
# cp /etc/_nginx_/sites-available/default /etc/_nginx_/sites-enabled/example.conf
# sed -i &#39;s/server_name _;/server_name example.com;/&#39; /etc/_nginx_/sites-enabled/example.conf
# echo &amp;quot;ssl_echkeydir /etc/echkeydir/;&amp;quot; &amp;gt;&amp;gt; /etc/_nginx_/sites-enabled/example.conf
# cp /etc/_nginx_/sites-available/default /etc/_nginx_/sites-enabled/hidden.example.conf
# sed -i -e &#39;s/server_name _;/server_name hidden.example.com;/&#39; -e sed &#39;s/\(listen.*\)default_server;/\1;/&#39; /etc/_nginx_/sites-enabled/hidden.example.conf
# systemctl restart _nginx_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s possible the &lt;code&gt;sed&lt;/code&gt; commands above may not work for you, e.g. if default files change, or perhaps you won&amp;rsquo;t use those if you have an existing web server config for &lt;code&gt;example.com&lt;/code&gt;&lt;code&gt;. In that case you can simply edit the config files to ensure the following, before running&lt;/code&gt;certbot``:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you have &lt;code&gt;example.com&lt;/code&gt; and &lt;code&gt;hidden.example.com&lt;/code&gt; servers set up with correct &lt;code&gt;server_name&lt;/code&gt;`&lt;/li&gt;
&lt;li&gt;optionally change the DocRoot (&lt;code&gt;root&lt;/code&gt;) in these configuration files to serve different content&lt;/li&gt;
&lt;li&gt;there&amp;rsquo;s a line within the &lt;code&gt;http&lt;/code&gt; stanza as follows:
  &lt;code&gt;ssl_echkeydir /etc/echkeydir/;&lt;/code&gt;`&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;ssl_echkeydir&lt;/code&gt; line can in &lt;code&gt;_nginx_.conf&lt;/code&gt; within the &lt;code&gt;http&lt;/code&gt; stanza or within either of the files in &lt;code&gt;sites-enabled&lt;/code&gt; when it must be outside the &lt;code&gt;server&lt;/code&gt; stanza&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;run-certbot-to-get-a-tls-server-certificate&#34;&gt;Run certbot to get a TLS server certificate&lt;/h2&gt;

&lt;p&gt;Next you need to rRun &lt;code&gt;certbot&lt;/code&gt; to get TLS server public keys certificates for both DNS names (&lt;code&gt;example.com` and `hidden.example.com&lt;/code&gt;). Those can be in the same certificate (or not) for the purposes of this experimental setup.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# certbot --nginx
...iteractions...
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;certbot&lt;/code&gt; may prompt you for e.g. an email address or approval and if you have an existing certificate for &lt;code&gt;example.com&lt;/code&gt; you may be prompted as to whether you want to add &lt;code&gt;hidden.example.com&lt;/code&gt; to that certificate.&lt;/p&gt;

&lt;h2 id=&#34;use-curl-to-test-the-set-up&#34;&gt;Use &lt;em&gt;curl&lt;/em&gt; to test the set up&lt;/h2&gt;

&lt;p&gt;Install our ECH-enabled &lt;em&gt;curl&lt;/em&gt; package from the DEfO repo and run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -v --ech true --doh-url https://1.1.1.1/dns-query https://hidden.example.com/ |&amp;amp; grep Succeeded
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see this in the output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ECH: result: status is Succeeded, inner is hidden.example.com, outer is example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;check-with-browsers&#34;&gt;Check with browsers&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re running a recent browser version (chromium-based since version 105, firefox since before then:-) you can enable ECH in the browser by &lt;a href=&#34;https://defo.ie/#clients&#34;&gt;following our client configuration instructions&lt;/a&gt;. Unfortunately, browsers don&amp;rsquo;t provide user interface to show if ECH has succeeded or not, but you can verify that your browser is able to use ECH if you visit &lt;a href=&#34;https://defo.ie/ech-check.php&#34;&gt;https://defo.ie/ech-check.php&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;feedback&#34;&gt;Feedback&lt;/h2&gt;

&lt;p&gt;All going well, you should now have an ECH-enabled web site and be able to extend/play with that as you like. We&amp;rsquo;d appreciate feedback on this guide if you have a chance. As before, comments/questions are welcome via &lt;a href=&#34;mailto:info@defo.ie&#34;&gt;email&lt;/a&gt; or as GitLab issues/merge requests.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DEfO - Developing ECH for OpenSSL (round two)</title>
      <link>https://guardianproject.github.io/info/2023/11/09/defo-developing-ech-for-openssl-round-two/</link>
      <pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/11/09/defo-developing-ech-for-openssl-round-two/</guid>
      <description>

&lt;p&gt;Encrypted ClientHello (ECH) plugs a privacy-hole in TLS, hiding previously visible details from network observers. The most important being the name of the web-site the client wishes to visit (the Server Name Indication or SNI).  This can be a major privacy leak, like when accessing a dissident news source hosted on a Content Delivery Network (&lt;a href=&#34;https://en.wikipedia.org/wiki/Content_delivery_network&#34;&gt;CDN&lt;/a&gt;). A visible domain name also provides a straightforward method for censors to block websites and internet services. &lt;a href=&#34;https://www.tolerantnetworks.com/about-us.html&#34;&gt;Tolerant Networks Limited&lt;/a&gt; and the Guardian Project successfully ran the &lt;a href=&#34;https://www.opentech.fund/&#34;&gt;OTF&lt;/a&gt;-funded &lt;a href=&#34;https://defo.ie/&#34;&gt;DEfO&lt;/a&gt; project that &lt;a href=&#34;https://guardianproject.info/2021/11/30/implementing-tls-encrypted-client-hello/&#34;&gt;developed interoperable implementations&lt;/a&gt; of ECH for OpenSSL, Conscrypt and, via those libraries, a range of ECH-enabled web servers and clients.  This second funded project, DEfO-2, is a timely continuation of that project from the same the team.  As needed for disambiguation, we use DEfO-1 to refer the completed project and DEfO-2 for this current project. When there’s no ambiguity, we use the DEfO acronym to cover both past and future work related to ECH for OpenSSL, related applications and other TLS stacks.&lt;/p&gt;

&lt;p&gt;As the IETF standard for ECH completes, our key objectives are to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upstream DEfO code&lt;/li&gt;
&lt;li&gt;Integrate ECH into more clients and servers&lt;/li&gt;
&lt;li&gt;Gain and document operational experience&lt;/li&gt;
&lt;li&gt;Submit key code for red team audits&lt;/li&gt;
&lt;li&gt;Publish open-source ECH provisioning tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The key challenges we expect to face in meeting those objectives are: firstly, dealing with the OpenSSL and other upstream code bases (e.g. nginx, Apache HTTP Server) - satisfying upstream developers when dealing with complex code changes, as are involved here, has proven to be quite time and effort consuming. Secondly, it is a challenge to arrange the trials we have envisaged for DEfO-2 but doing so should help to demonstrate that web sites can easily and safely enable ECH without putting themselves at risk of interoperability failures or adverse attention from censors and without further centralising the web. Lastly, there are some remaining technical challenges not addressed in DEfO-1 (proprietary TLS ClientHello extension handling, interactions between TLS Hello Retry Request and ECH, and privacy analyses of split-mode ECH deployments) that we plan to address in DEfO-2.&lt;/p&gt;

&lt;p&gt;The key challenges we aim to mitigate for users is the ease with which user activity can be tracked and blocked based on clear text SNI. Secondarily, our focus on web-server integrations and provisioning mechanisms for ECH addresses Internet centralisation (which itself poses potential risks for censorship) by ensuring this technology can be easily deployed without having to depend on entities such as global-scale CDNs.&lt;/p&gt;

&lt;p&gt;The primary gaps addressed by DEfO are: the privacy-leak that is clear text SNI in TLS and secondly that nobody else has been developing an ECH implementation for OpenSSL, which is one of the most widely used TLS stacks, particularly for web servers. That situation has not changed since DEfO-1 started. Arguably filling that gap has become more pressing as some browsers now ship with ECH support.&lt;/p&gt;

&lt;p&gt;ECH is designed to contribute to the safety of users by removing one the the main remaining aspects of the web that allows network observers to easily monitor and censor web traffic based on either client DNS queries (browsers typically only use ECH when DoH has been used) and the Server Name Indication (SNI) in the TLS handshake, which is encrypted via ECH. The eventual goal is that use of ECH becomes near ubiquitous, and that goal is very achievable for web sites that make use of a CDN. DEfO however also has a focus on ECH support in various web servers and proxies (Apache, nginx, lighttpd, HAProxy) so that users of deployments that don’t use a commercial CDN can also benefit from ECH. The result of using ECH should be that neither the DNS query nor the TLS exchange leak the name of the web server with which the browser is establishing contact, thus taking away a still-easy opportunity for monitoring and censorship.&lt;/p&gt;

&lt;p&gt;Censors however, especially at the nation-state level, might choose to block all uses of ECH, which is something that is to be expected. The main mitigation for that envisaged is that browsers, even while not using ECH, will emit “fake” (or GREASEd) ECH values, thus increasing the costs if a censor decides to block all use of ECH. The extent to which GREASEing will be an effective mitigation for blocking all ECH will essentially
end up as a political/commercial decision for censors, browser makers, and web sites, but what we can say is that for now at least, browser makers and the larger CDNs do seem committed to making use of ECH. So we can have some hope that even the most capable censors might have to think hard before blocking all ECH. In DEfO-2 we are also planning some significant-scale trials that, if successful, should go a long way towards helping other significant web sites overcome fears related to enabling ECH. Overcoming a fear that one’s web site may be blocked if one deploys ECH will be a valuable result of DEfO-2 should our trials come to fruition as we hope.&lt;/p&gt;

&lt;p&gt;We do see a number of usability issues for those deploying web servers that need to be addressed, and that we plan to address in DEfO-2. Our approach is to aim for the same level of usability for web server administrators as has been achieved by &lt;a href=&#34;https://certbot.eff.org/&#34;&gt;&lt;em&gt;certbot&lt;/em&gt;&lt;/a&gt; as it interacts with Let&amp;rsquo;s Encrypt or other CAs. Making it easy to enable ECH, especially for &amp;ldquo;smaller&amp;rdquo; web properties is high priority for DEfO.&lt;/p&gt;

&lt;p&gt;The outcome for which we hope is the upstreaming of ECH into important code bases, and to have demonstrated that one can deploy ECH easily at either small or large scale. The impact we expect is that we continue to significantly contribute to the use of ECH becoming near ubiquitous.&lt;/p&gt;

&lt;h2 id=&#34;timeliness&#34;&gt;Timeliness&lt;/h2&gt;

&lt;p&gt;The time is now ripe for DEfO-2:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.mozilla.org/en-US/kb/faq-encrypted-client-hello&#34;&gt;Firefox&lt;/a&gt; now supports ECH by default.&lt;/li&gt;
&lt;li&gt;Chrome supports ECH in &lt;a href=&#34;https://groups.google.com/a/chromium.org/g/blink-dev/c/KrPqrd-pO2M/m/_8Lfd5xcAwAJ&#34;&gt;10% of stable releases&lt;/a&gt; as of August 2023.&lt;/li&gt;
&lt;li&gt;Brave now also supports ECH, &lt;a href=&#34;https://github.com/brave/brave-browser/issues/1851#issuecomment-1763176335&#34;&gt;behind the same flags&lt;/a&gt; as Chromium&lt;/li&gt;
&lt;li&gt;These browser developments, plus the server code developed by DEfO-1, now enable us to plan real-world experiments&lt;/li&gt;
&lt;li&gt;Cloudflare has &lt;a href=&#34;https://developers.cloudflare.com/ssl/edge-certificates/ech/&#34;&gt;beta support&lt;/a&gt; for enabling ECH.&lt;/li&gt;
&lt;li&gt;During the run-time of DEfO-2 we expect to be in a position to run trials with significant players that could significantly assist with the goal of making use of ECH common for large web sites.&lt;/li&gt;
&lt;li&gt;The DEfO-2 project timeline should also cover the finalisation of the IETF specification for ECH, significant progress on ancillary specifications (e.g. for provisioning) and provide sufficient time for upstreaming of DEfO code&lt;/li&gt;
&lt;li&gt;DEfO-2 benefits from the same team as DEfO-1 – Tolerant Networks and the Guardian Project having co-operated successfully on DEfO-1 are looking forward to continuing that collaboration and to extending the team for DEfO-2&lt;/li&gt;
&lt;li&gt;HPKE, a core part of ECH, but with broader applicability, is now RFC9180 and the OpenSSL maintainers merged our DEfO code for HPKE in November 2022.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;our-development-projects&#34;&gt;Our development projects&lt;/h2&gt;

&lt;p&gt;The DEfO project implemented Encrypted ClientHello (ECH) support for OpenSSL and Conscrypt, carried out interoperability testing of those implementations, and also used those libraries to ECH-enable various web servers and clients. We deployed services using these web servers and the DNS infrastructure required to support automated key upated for the HTTPS RRs associated with those services. Here we provide a short overview of that work in order to help with larger scale experiments and with further development of the ECH specification.&lt;/p&gt;

&lt;h3 id=&#34;libraries&#34;&gt;Libraries&lt;/h3&gt;

&lt;p&gt;As part of the DEfO project, we ECH-enabled two important TLS libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.conscrypt.org/&#34;&gt;Conscrypt&lt;/a&gt; is a Java Security Provide (a library) that provides a Java &amp;ldquo;wrapper&amp;rdquo; for the C++ language boringssl library. Conscrypt is commonly used as the TLS provider for applications running on Android devices and is thus an attractive target to allow many clients to be ECH-enabled. (We do not target browser clients in DEfO as work on ECH-enabling those is being done by browser-makers.) The authors of boringssl (Google) have added ECH support to a version of their code, and we used that to enhance Conscrypt to call the new borinssl APIs required to use ECH and to provide mechanisms for applications to default to, or signal use of, ECH.&lt;/li&gt;
&lt;li&gt;OpenSSL is a long-lived library providing cryptographic and TLS services that is used by many applications, including many web servers and hence is an attractive target for ECH-enabling, especially for server-side functionality. Our ECH-enabled fork of OpenSSL is here.&lt;/li&gt;
&lt;li&gt;We have and will continue to work with the developers of other TLS libraries (e.g. wolfSSL) to assist in ECH-enabling their code, mostly via interoperability testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;clients&#34;&gt;Clients&lt;/h3&gt;

&lt;p&gt;We ECH-enabled implemented the following TLS client applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenSSL &lt;code&gt;s_client&lt;/code&gt; - this client application comes as part of the OpenSSL build but is commonly used for testing and as an extremely simple scriptable TLS client.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;curl&lt;/em&gt; is a widely-used command line web client that can use OpenSSL for TLS support, so we &lt;a href=&#34;https://github.com/sftcd/curl/blob/ECH-experimental/docs/ECH.md&#34;&gt;ECH-enabled that&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;F-Droid is an Android client application that provides an installable catalogue of FOSS applications and that uses Conscrypt. We made an ECH-enabled build called &lt;a href=&#34;https://f-droid.org/packages/ie.defo.ech_apps/&#34;&gt;DEfO ECH Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;servers&#34;&gt;Servers&lt;/h3&gt;

&lt;p&gt;We ECH-enabled implemented the following web servers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Apache HTTP Server is one of the two most commonly used web servers today, you can try our &lt;a href=&#34;https://github.com/sftcd/httpd&#34;&gt;ECH-enabled fork&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;nginx&lt;/em&gt; is the other web server in the &amp;ldquo;top two.&amp;rdquo;, you can try our &lt;a href=&#34;https://github.com/sftcd/nginx&#34;&gt;ECH-enabled fork&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;lighttpd is a web server that is commonly used on smaller devices such as home routers, you can try our &lt;a href=&#34;https://github.com/sftcd/lighttpd1.4&#34;&gt;ECH-enabled fork&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;HAProxy is widely used as an HTTP ingress proxy and so is a good target for exploring ECH split-mode, you can try our &lt;a href=&#34;https://github.com/sftcd/haproxy&#34;&gt;ECH-enabled fork&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;OpenSSL &lt;code&gt;s_server&lt;/code&gt; - this example server application is part of the OpenSSL build and is commonly used for testing and experimentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;test-tools&#34;&gt;Test tools&lt;/h3&gt;

&lt;p&gt;Amongst the test tooling we developed are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comprehensive OpenSSL make test targets for HPKE and ECH.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/defo-project/EchInteropTest&#34;&gt;ECHInteropTest&lt;/a&gt; is a Java client for interoperability testing on Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sftcd/echdnsfuzz&#34;&gt;&lt;em&gt;echdnsfuzz&lt;/em&gt;&lt;/a&gt; is a catalogue of &amp;ldquo;interesting&amp;rdquo; ECHConfigList values that could cause issues for clients combined with a service to randomly select one of those for publication in the public DNS every 30 minutes. This is a useful part of fuzz-testing an ECH-enabled client application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;issues-arising&#34;&gt;Issues Arising&lt;/h2&gt;

&lt;p&gt;We saw the following issues that could benefit from further work to ease deployment of ECH:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For HAProxy, since DEfO-1 we have achieved support for HelloRetryRequest in ECH split-mode but have further work to do on ECH key rotation.&lt;/li&gt;
&lt;li&gt;There can sometimes be a lack of clarity as to which software component should be responsible for choosing to attempt real (i.e. non-GREASEd) ECH, and hence to be responsible for the additional DNS queries required to acquire an ECHConfig. For libraries like OpenSSL and boringssl it clearly only makes sense for that decision (and hence any new DNS handling code) to be outside the library. For a browser, it as clearly makes sense for that code to be in the browser application layer. With &amp;ldquo;middleware&amp;rdquo; though, such as OkHTTP or Conscrypt it can be hard to know which is the correct decision.&lt;/li&gt;
&lt;li&gt;The new DNS code required for handling HTTPS RRs is not too complex but the full generality of SVCB is extremely complex. Adding such complexity (and associated caching) is a major change for clients like curl that have to date only had to have a very simple model for DNS - essentially only querying A/AAAA and having almost trivial caching in the application itself.&lt;/li&gt;
&lt;li&gt;The client implementation of ECH is relatively complex in that it &amp;ldquo;touches&amp;rdquo; the TLS state machine in many ways, and hence requires changes in a lot of places. As well as increasing the cost of implementing this also increases the costs associated with testing and upstreaming.&lt;/li&gt;
&lt;li&gt;Achieving the same level of usability as &lt;code&gt;certbot&lt;/code&gt; for web server administrators may be challenging, but is an important goal to make it easy for web server administrators to be able to easily deploy ECH.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;ECH is demonstrably implementable and can be deployed. We don&amp;rsquo;t yet know if new issues will become apparent as larger-scale experiments are carried out, but we should find out during the run-time of DEfO-2.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF116 Conference Report: Friday March 31, 2023</title>
      <link>https://guardianproject.github.io/info/2023/04/04/ietf116-conference-report-friday-march-31-2023/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/04/04/ietf116-conference-report-friday-march-31-2023/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Five of the &lt;a href=&#34;https://www.ietf.org/how/meetings/116/&#34;&gt;116th IETF meeting&lt;/a&gt; in Yokohama Japan.  For the rundown on Day Four, see my &lt;a href=&#34;https://guardianproject.info/2023/03/30/ietf116-conference-report-thursday-march-30-2023/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With a lot of focus on privacy with respect to Internet protocols, novel new cryptography schemes are an important requirement for new protocol designs.  For example, &lt;a href=&#34;https://datatracker.ietf.org/wg/ppm/about/&#34;&gt;Privacy Preserving Measurement&lt;/a&gt; is relying on new cryptography to support distributed aggregation of a wide range of measurements in the advertising domain as well as application telemetry.  &lt;a href=&#34;https://datatracker.ietf.org/wg/privacypass/about/&#34;&gt;Privacy Pass&lt;/a&gt; is relying on new cryptography to allow web browsing across the broad Internet after a single, lightweight authentication to an authority.  IETF Working Groups are encouraged to work with the &lt;a href=&#34;https://irtf.org/cfrg&#34;&gt;Crypto Forum Research Group&lt;/a&gt; of the Internet Research Task Force (&lt;a href=&#34;https://www.ietf.org/about/groups/irtf/&#34;&gt;IRTF&lt;/a&gt;) to develop, test and refine new cryptography techniques that meet defined security/privacy goals and can scale for Internet-wide use.&lt;/p&gt;

&lt;p&gt;One area receiving a lot of attention is &lt;em&gt;signature blinding&lt;/em&gt;. &lt;a href=&#34;https://en.wikipedia.org/wiki/Blind_signature&#34;&gt;Blinding&lt;/a&gt; is used when a message&amp;rsquo;s signing party is different from the message originator (digital cash, electronic voting are examples).  There are many types of blind signature, used for different purposes.  IETF&amp;rsquo;s interest is in how these algorithms work at Internet scale (Privacy Pass potentially being the most high-volume example).  No fewer than three results [&lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-cfrg-key-blinding-for-signature-schemes&#34;&gt;1&lt;/a&gt;] [&lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-cfrg-the-bbs-signature-scheme&#34;&gt;2&lt;/a&gt;] [&lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-cfrg-rsa-blind-signatures-with-public-metadata&#34;&gt;3&lt;/a&gt;] were presented on this topic.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://eprint.iacr.org/2023/130&#34;&gt;Verifiable Distributed Aggregation Functions&lt;/a&gt; are a key set of &lt;em&gt;multi-party computing&lt;/em&gt; techniques for improving the privacy of Internet measurement - split the counting across a group of non-colluding hosts and reassemble it in a manner only the requester (and not the individual aggregators) can see. While there is consensus around the approach, there is work to be done on the algorithm details, specifically around performance and elimination of attack vectors. &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-cfrg-plasma&#34;&gt;PLASMA&lt;/a&gt; - a new proposal for distributed aggregation - was presented along with a &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-cfrg-vdaf&#34;&gt;deeper analysis&lt;/a&gt; of two other proposals (PRIO and POPLAR).&lt;/p&gt;

&lt;p&gt;There is also worry about the forthcoming era of &lt;em&gt;quantum computing&lt;/em&gt; and its &lt;a href=&#34;https://scienceexchange.caltech.edu/topics/quantum-science-explained/quantum-cryptography&#34;&gt;impact on the cryptographic tools used today&lt;/a&gt;.  The search is on for cryptographic methods that are safe &lt;em&gt;post-quantum&lt;/em&gt; and, along with them, ways to migrate currently-encrypted data into the post-quantum era. Currently being discussed are &lt;em&gt;hybrid&lt;/em&gt; or &lt;em&gt;composite&lt;/em&gt; schemes that layer the old techniques and the new techniques.  For me, the math goes off into fairy land pretty quickly, but if &lt;em&gt;Composite Key Encapsulation Mechanisms&lt;/em&gt; turns you on, there&amp;rsquo;s plenty happening at IETF nowadays [&lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ounsworth-pq-composite-kem-00&#34;&gt;1&lt;/a&gt;] [&lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ietf-tls-hybrid-design&#34;&gt;2&lt;/a&gt;] [&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-wussler-openpgp-pqc/&#34;&gt;3&lt;/a&gt;] [&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-tjhai-ipsecme-hybrid-qske-ikev2/00/&#34;&gt;4&lt;/a&gt;].&lt;/p&gt;

&lt;p&gt;It turns out, it&amp;rsquo;s not just me whose eyes glaze over at the mathematics involved in much of this work.  IETF has found that IRTF&amp;rsquo;s research in this area should recognize that a presentation acceptable to other mathematicians might not be too useful for protocol implementers.  With this in mind, the Crypto Forum is pulling together &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-cfrg-guidelines-for-writing-cryptography-specifications&#34;&gt;a set of guidelines&lt;/a&gt; for writing cryptographic specifications within the IETF context.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF116 Conference Report: Thursday March 30, 2023</title>
      <link>https://guardianproject.github.io/info/2023/03/30/ietf116-conference-report-thursday-march-30-2023/</link>
      <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/03/30/ietf116-conference-report-thursday-march-30-2023/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Four of the &lt;a href=&#34;https://www.ietf.org/how/meetings/116/&#34;&gt;116th IETF meeting&lt;/a&gt; in Yokohama Japan.  For the rundown on Day Three, see my &lt;a href=&#34;https://guardianproject.info/2023/03/30/ietf116-conference-report-wednesday-march-29-2023/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The IETF is getting serious about interoperability among messaging services (&lt;a href=&#34;https://www.eff.org/deeplinks/2022/04/eu-digital-markets-acts-interoperability-rule-addresses-important-need-raises&#34;&gt;this&lt;/a&gt; might have had something to do with it).  The charter for the Messaging Layer Security Working Group (MLS) specifically &lt;em&gt;excluded&lt;/em&gt; interoperability, though the group organized a draft that addressed the basic concepts that would allow MLS-compatible systems to federate. In early 2023, a new Working Group - More Instant Messaging Interoperability (&lt;a href=&#34;https://datatracker.ietf.org/group/mimi/about/&#34;&gt;MIMI&lt;/a&gt;) - was chartered to expand on the MLS federation work.  Given IETF&amp;rsquo;s relatively long and somewhat checkered history with messaging, the Working Group&amp;rsquo;s charter included this reminder to itself:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Numerous prior attempts have been made to address messaging interoperability, including the IETF&#39;s extensive prior work on XMPP, SIP/SIMPLE, and their related messaging formats. The MIMI working group will draw lessons from these prior attempts, seek to avoid re-hashing old debates, and will focus on the minimal standards suite necessary to facilitate interoperability given the feature set of modern messaging applications.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thus, its remit had some strict limits:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The More Instant Messaging Interoperability (MIMI) working group will specify the minimal set of mechanisms required to make modern Internet messaging services interoperable. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;&lt;em&gt;minimum&lt;/em&gt; being the operative word. So, what&amp;rsquo;s &lt;em&gt;in scope&lt;/em&gt;?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;messaging interoperability&lt;/li&gt;
&lt;li&gt;user discovery&lt;/li&gt;
&lt;li&gt;messaging content format&lt;/li&gt;
&lt;li&gt;(an appropriate) MLS profile&lt;/li&gt;
&lt;li&gt;message delivery service and transport mechanisms&lt;/li&gt;
&lt;li&gt;establishment of end-to-end cryptographic identity&lt;/li&gt;
&lt;li&gt;identifier naming conventions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Specifically &lt;em&gt;out of scope&lt;/em&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;metadata processing to manage spam and abuse&lt;/li&gt;
&lt;li&gt;interoperable mechanisms for group administration or moderation across systems&lt;/li&gt;
&lt;li&gt;extensions to the MLS protocol (if needed, requirements will be referred to the MLS working group or other relevant working groups in the security area)&lt;/li&gt;
&lt;li&gt;definition of completely new identity formats or protocols&lt;/li&gt;
&lt;li&gt;extensions to SIP, SDP, MSRP, or WebRTC&lt;/li&gt;
&lt;li&gt;development of anti-spam or anti-abuse algorithms&lt;/li&gt;
&lt;li&gt;&lt;em&gt;oracle&lt;/em&gt; or look-up services that reveal the list of messaging services associated with a given user identity without the user&amp;rsquo;s permission&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This being the first formal meeting after group charter, discussions are still at the stage where defining what &lt;em&gt;in scope&lt;/em&gt; means is still open, as are the most basic tenets of the technical mechanisms to implement the required features.  Grab your popcorn!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF116 Conference Report: Wednesday March 29, 2023</title>
      <link>https://guardianproject.github.io/info/2023/03/30/ietf116-conference-report-wednesday-march-29-2023/</link>
      <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/03/30/ietf116-conference-report-wednesday-march-29-2023/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Three of the &lt;a href=&#34;https://www.ietf.org/how/meetings/116/&#34;&gt;116th IETF meeting&lt;/a&gt; in Yokohama Japan.  For the rundown on Day Two, see my &lt;a href=&#34;https://guardianproject.info/2023/03/29/ietf116-conference-report-tuesday-march-29-2023/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The long-running work on &lt;a href=&#34;https://datatracker.ietf.org/wg/masque/about/&#34;&gt;MASQUE&lt;/a&gt; - proxying all network-layer datatypes over QUIC (HTTP/3) - is nearing completion, with the specification for &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-masque-connect-ip/&#34;&gt;Proxying IP in HTTP&lt;/a&gt; in IESG review.  With these components in place, the &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-schinazi-masque-proxy/&#34;&gt;original MASQUE concept&lt;/a&gt; - a non-probable relay for client traffic providing privacy guarantees - has been revived, now defined within the new framework and leveraging &lt;a href=&#34;https://www.ietf.org/archive/id/draft-ietf-httpbis-unprompted-auth-02.html&#34;&gt;HTTP Unprompted Authentication&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Privacy-preserving measurement is much on the minds of IETF attendees as the &lt;a href=&#34;https://datatracker.ietf.org/wg/ppm/about/&#34;&gt;Privacy Preserving Measurement Working Group&lt;/a&gt; continues to make progress.  Two new concepts were debuted in the Privacy Enhancements and Assessments Research Group &lt;a href=&#34;https://datatracker.ietf.org/rg/pearg/about/&#34;&gt;PEARG&lt;/a&gt; meeting: &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-pearg-secure-partitioning-protocols&#34;&gt;Secure Partitioning Protocols&lt;/a&gt; and &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-pearg-ipa&#34;&gt;Interoperable Private Attribution&lt;/a&gt;. Partitioning is new work looking at how multi-party statistical aggregation can be efficiently accomplished with improved privacy guarantees and is applicable to the on-going work on the Distributed Aggregation Protocol &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ppm-dap/&#34;&gt;DAP&lt;/a&gt;.  &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-pearg-ipa&#34;&gt;Private attribution&lt;/a&gt; measures events that occur in different contexts to the same person (shown an ad, then bought the product, for example).  As a sort of counterpoint, PEARG attendees also heard about the design decisions made in the development of a &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-pearg-dp3t-deploying-decentralized-privacy-preserving-contact-tracing&#34;&gt;privacy-preserving contact tracing application&lt;/a&gt; rolled out during the recent COVID-19 pandemic. Perhaps the defining characteristic of the design of this app was &lt;em&gt;purpose limitation&lt;/em&gt; - building out features that specifically &lt;em&gt;can not&lt;/em&gt; be used for any other purpose (such is the wide-spread fear of these applications being used as the infrastructure of a much more broader system of social control).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF116 Conference Report: Tuesday March 28, 2023</title>
      <link>https://guardianproject.github.io/info/2023/03/29/ietf116-conference-report-tuesday-march-28-2023/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/03/29/ietf116-conference-report-tuesday-march-28-2023/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Two of the &lt;a href=&#34;https://www.ietf.org/how/meetings/116/&#34;&gt;116th IETF meeting&lt;/a&gt; in Yokohama Japan.  For the rundown on Day One, see my &lt;a href=&#34;https://guardianproject.info/2023/03/28/ietf116-conference-report-monday-march-28-2023/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://datatracker.ietf.org/wg/ohai/about/&#34;&gt;OHAI Working Group&lt;/a&gt; has submitted the core draft of &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ohai-ohttp/&#34;&gt;Oblivious HTTP Application Intermediation&lt;/a&gt; to the RFC Editor for editorial finalization and publication. OHAI is designed to support &lt;em&gt;transational&lt;/em&gt; uses of the HTTP protocol that seek IP address privacy (by means of a relay pair, one associated with the client and one associated with the target resource). The target resource is, thus, said to be &lt;em&gt;oblivious&lt;/em&gt; to the requester&amp;rsquo;s IP address.  While the initially-imagined use case for OHAI was access to the DNS service (with some in the IETF feeling DNS-over-HTTP did not go far enough to protect user privacy), the dominant  use case imagined today is &lt;em&gt;telemetry&lt;/em&gt; - monitoring vendor-, application- or operating system-defined usage parameters on centralized systems.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s fair to ask how OHAI-capable services are to be discovered.  The OHAI Working Group is proposing to use DNS &lt;em&gt;Service Binding Records&lt;/em&gt; (SVCB, defined &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-dnsop-svcb-https/&#34;&gt;here&lt;/a&gt; and well-described &lt;a href=&#34;https://www.sobyte.net/post/2022-01/dns-svcb-https/&#34;&gt;here&lt;/a&gt;). TLS 1.3 Encrypted Client Hello is among the other IETF standards leveraging SVCB.  SVCB records, similar to the (also new) HTTPS records, allow a host of define multiple ways to make connection with parameterization using just the DNS lookup (as opposed to the multiple round-trip mechanism of HTTP&amp;rsquo;s Alt-Svc header).  The draft - &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ohai-svcb-config/&#34;&gt;Discovery of Oblivious Services via Service Binding Records&lt;/a&gt; has been under Working Group discussion since IETF113 and is close to submission for last call (technical completion).&lt;/p&gt;

&lt;p&gt;Speaking of &lt;a href=&#34;https://datatracker.ietf.org/doc/rfc8446/&#34;&gt;TLS 1.3&lt;/a&gt; and Service Binding Records, Encrypted Client Hello &lt;a href=&#34;https://www.ietf.org/archive/id/draft-ietf-tls-esni-14.html&#34;&gt;ECH&lt;/a&gt; was, in fact, the reason SVCB records were defined. DNS lookup is the only point at which certain cryptographic information can be made available before all the connection encryption starts to happen.  Unfortunately, the SVCB draft is stuck in the RFC Editor work queue behind ECH, even though there is language in ECH that references SVCB.  The Working Group is therefore required to remove all the SVCB language from the ECH draft so that it may proceed.  This procedural detail - and accompanying delay - has important consequences: the major open source software package that requires modification before ECH can expect wide adoption (OpenSSL) is waiting for ECH to become a full-fledged RFC before the submitted pull requests will be granted.  Meanwhile there is plenty of experimentation with ECH happening on the live Internet with Mozilla/Firefox and Cloudflare running experiments.&lt;/p&gt;

&lt;p&gt;It turns out there&amp;rsquo;s an alternative (or perhaps &lt;em&gt;parallel&lt;/em&gt;) proposal for TLS 1.3 - &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-tls-ctls/&#34;&gt;CompactTLS&lt;/a&gt; - an effort begun in 2019 and now in it&amp;rsquo;s eighth revision.  cTLS proposes to &lt;code&gt;save bandwidth by trimming obsolete material, tighter encoding, a template-based specialization technique, and alternative cryptographic techniques. cTLS is not directly interoperable with TLS 1.3 or DTLS 1.3 since the over-the-wire framing is different.&lt;/code&gt;  cTLS is undergoing formal analysis and implementation work proceeds, though no results are currently available.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://datatracker.ietf.org/wg/httpbis/charter/&#34;&gt;HTTPbis Working Group&lt;/a&gt; formally adopted the &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-httpbis-unprompted-auth/&#34;&gt;HTTP Unprompted Authentication&lt;/a&gt; specification in the month before IETF116.  As a reminder, Unprompted Authentication allows a server to offer authenticated services without advertising that it does so (meaning the authenticated resources can not be actively probed). A number of semantic elements are under discussion, mostly to understand how this new feature is unique among existing HTTP features (and can, or can not, be aligned with &lt;em&gt;adjacent&lt;/em&gt; capabilities). An action item for IETF117 is a formal analysis of the cryptography used, with several alternatives being proposed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF116 Conference Report: Monday March 27, 2023</title>
      <link>https://guardianproject.github.io/info/2023/03/28/ietf116-conference-report-monday-march-27-2023/</link>
      <pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/03/28/ietf116-conference-report-monday-march-27-2023/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post begins a daily blog, live from the 116th meeting of the &lt;a href=&#34;https://www.ietf.org/how/meetings/116/&#34;&gt;Internet Engineering Task Force&lt;/a&gt; in Yokohama, Japan, March 25-31, 2023.  We&amp;rsquo;re focusing on standards activities of importance to the Internet Freedom community.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since IETF114 (&lt;a href=&#34;https://guardianproject.info/2022/07/28/ietf114-conference-report-thursday-july-28-2022/&#34;&gt;report&lt;/a&gt;), the &lt;a href=&#34;https://datatracker.ietf.org/wg/ppm/about/&#34;&gt;Privacy Preserving Measurement Working Group&lt;/a&gt; has been deliberating over two distinct proposals offering very different technical methodologies for undertaking measurement activities while respecting user privacy. &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-dss-star&#34;&gt;STAR&lt;/a&gt; offers an approach called &lt;em&gt;k-anonymity&lt;/em&gt; - reporting a measurement value only if &lt;em&gt;k&lt;/em&gt; or more parties are also reporting the same value. This approach theoretically prevents rare values being used to single-out individuals.  Distributed Aggregation Protocol, &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ppm-dap/&#34;&gt;DAP&lt;/a&gt;, uses an approach that distributes individual measures across a set of aggregators, none of which gets to see all the granular measurement data - the fully-aggregated total only seen by the third-party who requested it (who, in turn, gets to see none of the granular measurements).  At IETF116 we&amp;rsquo;re learning about the operational experience with these technologies, with multiple implementations of both running in different testbeds.  &lt;a href=&#34;https://datatracker.ietf.org/meeting/116/materials/slides-116-ppm-poplarstar-measurements&#34;&gt;Performance analysis&lt;/a&gt; has also been undertaken.&lt;/p&gt;

&lt;p&gt;Though it&amp;rsquo;s very early days, it&amp;rsquo;s becoming clear that both approaches have had to make operational modifications (based on privacy vulnerabilities or performance or security) that seem to &lt;em&gt;decrease&lt;/em&gt; their uniqueness and call into question the need to have two approaches.  Both approaches, for example, are considering adding &lt;em&gt;differential privacy&lt;/em&gt; features.  Operationally, STAR performs best when &lt;em&gt;k&lt;/em&gt; is within the range 10-100 and it is being argued that such a range is insufficient for Internet-scale use cases.  Operationally, DAP can benefit from a more distributed computation model (using &lt;em&gt;helpers&lt;/em&gt;) but this is offset by performance loss due to the volume of network traffic generated.  DAP is already at a performance deficit compared to STAR, partially because it handles the negative impact of malicious clients (those that purposely submit erroneous values).  Will we see a unified approach in the future?  I sense there&amp;rsquo;s a long way to go here.&lt;/p&gt;

&lt;p&gt;The concept of &lt;em&gt;web filtering&lt;/em&gt; - raised initially at IETF115 - was again discussed in a side meeting hosted by the &lt;a href=&#34;https://www.iwf.org.uk&#34;&gt;Internet Watch Foundation&lt;/a&gt; who are focused on combating child abuse, trafficking and exploitation, a problem they say is exacerbated by the distribution of specific types of content on the Internet. IWF is raising this problem within the IETF in hope of a technical solution to finding and removing the types of content that encourage, they say, these behaviors.  This problem area strikes at the heart of the design of the Internet which, at its core, is &lt;em&gt;content-neutral&lt;/em&gt;.  Perhaps more importantly, there is significant concern that tools developed to suit this particular use case could be easily adapted to induce censorship of less well-defined content and for less-altruistic purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arti, next-gen Tor on mobile</title>
      <link>https://guardianproject.github.io/info/2023/03/04/arti-next-gen-tor-on-mobile/</link>
      <pubDate>Sat, 04 Mar 2023 10:00:00 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/03/04/arti-next-gen-tor-on-mobile/</guid>
      <description>&lt;p&gt;For software projects with recurring bugs, efficiency or security issues
there&amp;rsquo;s a joke making the rounds in the software industry: &amp;ldquo;Let&amp;rsquo;s re-write it
in &lt;a href=&#34;https://en.wikipedia.org/wiki/Rust_(programming_language)&#34;&gt;Rust&lt;/a&gt;!&amp;rdquo;  It&amp;rsquo;s a
fairly new low-level programming language with the declared goal to help
developers avoid entire classes of bugs, security issues and other pitfalls.
Re-writing software is very time consuming, so it rarely happens, especially
when just one more fix will keep a project up and running.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://torproject.org&#34;&gt;Tor-Project&lt;/a&gt; was started in 2001 using the &lt;a href=&#34;https://en.wikipedia.org/wiki/C_(programming_language)&#34;&gt;C
programming lanugage&lt;/a&gt;.
However a few years ago they set out to actually re-write their project in
Rust.  That projects codename is &lt;a href=&#34;https://arti.torproject.org/&#34;&gt;Arti&lt;/a&gt; and it
was &lt;a href=&#34;https://blog.torproject.org/arti_100_released/&#34;&gt;first released&lt;/a&gt; in 2022.
While Arti is working great, it doesn&amp;rsquo;t have all features of the original Tor
implementation yet.  However, they are steadily working on getting there.  For
example, rough &lt;a href=&#34;https://www.pluggabletransports.info/&#34;&gt;Pluggable Transports&lt;/a&gt;
support was added to Arti in the recent 1.1.0 release.&lt;/p&gt;

&lt;p&gt;We already have early &lt;a href=&#34;https://gitlab.com/guardianproject/arti-mobile-ex/&#34;&gt;test builds of
Arti&lt;/a&gt; running on both
Android and iOS.  The integration we came up with is pretty basic, but so far
it seems to work reliable for accessing the Tor network.  Maintaining code for
both iOS and Android in the same project will hopefully simplify shipping new
Arti releases for us, make integrating Tor capabilities into any app simpler.
To make it useful for the broader mobile developer community, we&amp;rsquo;re also
investigating whether we can provide easy to use API bindings.  We&amp;rsquo;ve created a &lt;a href=&#34;https://gitlab.com/guardianproject/arti-mobile-ex/-/tree/main/android/sample&#34;&gt;sample
app&lt;/a&gt;
on Android to test and illustrate what a minimalistic integration of Arti looks
like.  It&amp;rsquo;s as simple as adding a few lines of code.&lt;/p&gt;

&lt;p&gt;Support for features like advanced censorship circumvention or onion services is not
exactly straight forward on mobile operating systems, because they tend to be
way more locked down than traditional computers.  Currently, we can successfully test
pluggable transports in &amp;ldquo;managed&amp;rdquo; mode on old versions of Android.  However
this technique will likely not work on the latest version of Android and never
worked iOS to begin with.  We have shared our findings with the Arti developer
team and hope they&amp;rsquo;ll work on getting us to full Pluggable Transports support, integraing
with our existing &lt;a href=&#34;https://gitlab.com/guardianproject/IPtProxy&#34;&gt;IPtProxy Library&lt;/a&gt; soon.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Steps towards trusted VPNs</title>
      <link>https://guardianproject.github.io/info/2023/02/28/steps-towards-trusted-vpns/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2023/02/28/steps-towards-trusted-vpns/</guid>
      <description>

&lt;p&gt;VPNs have become quite popular in recent years for a number of reasons, and more and more they are being touted as a privacy tool.  The question is whether using a VPN does improve privacy.  It is clear that VPNs are quite useful for getting access to things on the internet when direct connections are blocked.  VPN providers include a number of tactics in both their client apps and server infrastructure to ensure that their users are able to make a connection.  Then once users are connected, all of their traffic that goes over the VPN will see the internet from the point of view of the VPN&amp;rsquo;s server.  That is how VPNs &amp;ldquo;unblock&amp;rdquo; the internet.  In contrast, some are using VPNs to selectively block things, like making a system-wide &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-block-advertisements-at-the-dns-level-using-pi-hole-and-openvpn-on-ubuntu-16-04&#34;&gt;adblocker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To answer the question about whether they are a useful privacy tool, let&amp;rsquo;s start with the history of where VPNs came from.  VPN stands for Virtual Private Network.  They were developed by large companies with multiple offices and travelling employees.  The goal was to link together all of these offices so that internal data could be freely shared between them without that data going over the internet as easily readable unencrypted plain text.  Then travelling employees could also safely access the internal data via any internet connection.  The key piece of this picture is that the users, employees in this case, already had to trust their VPN provider.  The VPN provider was the company they worked for, and the data they were handling belonged to the company.  So there was no attempt to hide user information from the VPN provider.  Indeed quite the opposite: companies linked the VPN access to each employee&amp;rsquo;s &amp;ldquo;single sign-on&amp;rdquo; account.  Built into the design of VPNs is full trust of the VPN provider, with the aim of keeping the data private from the internet. This setup was also by design, since many large companies wanted to ensure their employees work laptops were still going through the corporate firewall, where the company could block certain sites (e.g. malware, porn), then also &lt;a href=&#34;https://www.fortinet.com/resources/cyberglossary/data-exfiltration&#34;&gt;monitor employees&lt;/a&gt; internet activity to ensure they are not exposing files that the company does not want to be public.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File:Virtual_Private_Network_overview.svg&#34;&gt;&lt;img src=&#34;Virtual_Private_Network_overview.svg.png&#34; alt=&#34;Virtual Private Network overview&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This does not paint a good picture for a tool to protect privacy.  But there is hope!  It is possible to use a VPN to improve your privacy if you pay attention to some key details.  For VPN services to provide privacy, you have to put a lot of trust in the people who are operating the service.  The VPN provider can see &lt;strong&gt;all&lt;/strong&gt; of your traffic that goes over the VPN, and they have a strong link to your user account with them.  The privacy advantage of a VPN is that the destination sites cannot see which IP address your device is coming from, they will see the VPN provider&amp;rsquo;s IP address.  And your ISP will see you are using a VPN, but not which sites you visit.  With HTTPS, TLS, and end-to-end encryption being widespread, any encrypted content will be protected from the VPN provider also.  But the VPN provider can still see where you are connecting from, which sites and services you are using, what time of day, and even potentially correlate traffic to link activities of their users.  In other words, the VPN operator sees lots of metadata about you, so much so that they could paint a quite detailed portrait of your personal life if they ever did let their data be analyzed.&lt;/p&gt;

&lt;h2 id=&#34;how-to-build-a-privacy-respecting-vpn-service&#34;&gt;How to build a privacy-respecting VPN service&lt;/h2&gt;

&lt;p&gt;There are good signals that VPN services can send to show that they are tackling the real issues.  For example, shipping free software clients, maintaining a &lt;a href=&#34;https://www.eff.org/deeplinks/2016/05/canary-watch-one-year-later&#34;&gt;warrant canary&lt;/a&gt;, posting a clear privacy policy describing the logging policy, and publishing the unredacted results of third party audits.  If the VPN operator is doing the right thing, then VPNs can provide a relatively private way to access the internet.  With a consistent track record of transparency, they can build up a trusted reputation for protecting privacy.  Unfortunately, we cannot rest there since a VPN provider can change their setup quite easily, whether willingly or under duress.  Maintaining consistent, regular, and transparent communications is therefore essential.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Calyx Institute&amp;rsquo;s &lt;a href=&#34;https://calyxinstitute.org/legal/privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt;
and &lt;a href=&#34;https://calyxinstitute.org/about/financials-and-annual-reports&#34;&gt;Financials and Annual Reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mozilla&amp;rsquo;s &lt;a href=&#34;https://www.mozilla.org/en-US/privacy/principles/&#34;&gt;Data Privacy Principles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mullvad&amp;rsquo;s &lt;a href=&#34;https://mullvad.net/help/swedish-legislation/&#34;&gt;Swedish legislation relevant to us as a VPN provider&lt;/a&gt; and &lt;a href=&#34;https://mullvad.net/help/no-logging-data-policy/&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On top of that, the &lt;a href=&#34;https://vpnalyzer.org/&#34;&gt;VPNalyzer&lt;/a&gt; project is working to make monitoring VPN services a lot easier and possible to crowdsource.  This gives a third party perspective from some respected organizations.&lt;/p&gt;

&lt;h3 id=&#34;know-as-little-as-possible-about-your-users&#34;&gt;Know as little as possible about your users&lt;/h3&gt;

&lt;p&gt;Many VPN providers require an account and payment information.  This is usually personally identifiable information, like name, credit card information, email address, phone number, billing address, etc.  The most private services have &lt;a href=&#34;https://f-droid.org/2022/02/28/no-user-accounts-by-design.html&#34;&gt;no user accounts by design&lt;/a&gt;.  Calyx, Lavabit, and Riseup VPNs do not require any account or payment at all, so they do not have that information to give out or leak.  Providers that accept payment need a way to tie payment to service, that is usually done using accounts tied to email addresses or phone numbers.  Personal details are not required to make accounts and payments work.  Mullvad uses a randomly generated account number only, there is no link to other identifiers unless you provide them.  Additionally, Mullvad is one of the few VPN vendors that accepts cash payments.  Many technically minded implementers laugh at the idea of processing envelopes of cash, but it is an effective, real world solution to minimizing personal data that software methods struggle to match.&lt;/p&gt;

&lt;h3 id=&#34;keep-as-little-information-as-possible&#34;&gt;Keep as little information as possible&lt;/h3&gt;

&lt;p&gt;The VPN servers unavoidably see lots of information about what users are doing.  The default with most servers is to keep logs of that data. The longer this data is kept, the greater the risk it will be used to identify users and their activities. It does not help that standard practice for running servers is to keep logs for a long time.  Many service providers keep those logs for years.&lt;/p&gt;

&lt;p&gt;VPN providers must be clear about what logs they are keeping, and how long they are stored.  Even better, they will provide information about how they do store the data that they do keep.  For example, if the servers do not use full disk encryption, then it would be straightforward to recover the deleted logs.  That is much harder on systems using full disk encryption.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href=&#34;https://cure53.de/audit-report_ivpn.pdf&#34;&gt;2019 audit&lt;/a&gt; of &lt;a href=&#34;https://www.ivpn.net/blog/independent-security-audit-concluded&#34;&gt;IVPN&lt;/a&gt; showed that, at that time, the auditors confirmed that IVPN performed no &amp;ldquo;statistical logging of customer-traffic&amp;rdquo;, &amp;ldquo;logging of traffic, IP addresses or DNS requests&amp;rdquo; on the servers that the auditors were given access to.&lt;/li&gt;
&lt;li&gt;Mullvad says, &amp;ldquo;we never store any activity logs of any kind.&amp;rdquo; in their &lt;a href=&#34;https://mullvad.net/en/help/no-logging-data-policy/&#34;&gt;no logging data policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;proven-track-record-of-resisting-unjust-legal-intrusion&#34;&gt;Proven track record of resisting unjust legal intrusion&lt;/h3&gt;

&lt;p&gt;There are many legal ways for authorities to get private data, this is an essential part of a functioning justice system.  But these powers are sadly abused in basically every country in the world, it is only a question of degrees.  A VPN provider needs to represent its users legal interests, and push back on legal orders when there is the possibility they are unjust.  Calyx Institute&amp;rsquo;s Nick Merrill provides the shining example in this regard.  With the ACLU, he fought a &lt;a href=&#34;https://en.wikipedia.org/wiki/Doe_v._Ashcroft&#34;&gt;legal case&lt;/a&gt; for over a decade to prevent unjust intrusion for his users.  Ladar Levison shut down his email company &lt;a href=&#34;https://en.wikipedia.org/wiki/Lavabit&#34;&gt;Lavabit&lt;/a&gt; rather than allow the US Government to monitor Edward Snowden&amp;rsquo;s email account.&lt;/p&gt;

&lt;p&gt;There are other ways to ensure that the legal processes are not abused.  These include warrant canaries and disclosure when data had to be turned over via legal procedures.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mozilla&amp;rsquo;s &lt;a href=&#34;https://www.mozilla.org/en-US/about/policy/transparency/&#34;&gt;Transparency&lt;/a&gt; policy&lt;/li&gt;
&lt;li&gt;ProtonVPN&amp;rsquo;s &lt;a href=&#34;https://protonvpn.com/blog/transparency-report/&#34;&gt;Transparency Report &amp;amp; Warrant Canary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Riseup&amp;rsquo;s &lt;a href=&#34;https://riseup.net/canary&#34;&gt;Canary Statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;publish-as-much-as-possible-as-free-open-source-software&#34;&gt;Publish as much as possible as free open source software&lt;/h3&gt;

&lt;p&gt;F-Droid works to build &lt;a href=&#34;https://f-droid.org/2022/05/24/buildserver-overhaul-sponsored-by-calyx-institute.html&#34;&gt;services&lt;/a&gt; where free software, &lt;a href=&#34;https://f-droid.org/2022/07/22/maven-central.html&#34;&gt;code&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/2022/09/30/free-software-and-inspection-are-key-to-software-we-can-trust.html&#34;&gt;inspection&lt;/a&gt;, &lt;a href=&#34;https://f-droid.org/2023/01/15/towards-a-reproducible-fdroid.html&#34;&gt;reproducible builds&lt;/a&gt; provide a method to ensure that the software we deliver is trustworthy.  VPN vendors recognize how important trust is, so the good ones work to get their apps into f-droid.org.  The F-Droid community provides the best screening for ensuring Android apps are truly free software.  On top of that, F-Droid flags apps for &lt;a href=&#34;https://f-droid.org/docs/Anti-Features/&#34;&gt;Anti-Features&lt;/a&gt;, which are things that users may not like, but might accept.  Here are VPN clients that do maintain their free software clients in f-droid.org:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/se.leap.bitmaskclient/&#34;&gt;Bitmask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/org.calyxinstitute.vpn/&#34;&gt;Calyx VPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/nl.eduvpn.app/&#34;&gt;eduVPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/net.ivpn.client/&#34;&gt;IVPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/com.lavabit.pahoehoe/&#34;&gt;Lavabit Encrypted Proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/net.mullvad.mullvadvpn/&#34;&gt;Mullvad VPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/org.outline.android.client/&#34;&gt;Outline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/ch.protonvpn.android/&#34;&gt;ProtonVPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/one.librem.tunnel/&#34;&gt;Purism Librem Tunnel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/se.leap.riseupvpn/&#34;&gt;Riseup VPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/com.tailscale.ipn/&#34;&gt;Tailscale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/com.wireguard.android/&#34;&gt;WireGuard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;use-external-auditors-to-confirm-source-code-and-operations&#34;&gt;Use external auditors to confirm source code and operations&lt;/h3&gt;

&lt;p&gt;External auditors are important because they can bring fresh eyes on the source code, and good auditors are experts at finding issues in source code and server setups.  And responsible organizations will publish the full, unredacted audit report once they have fixed the issues.  Even if a VPN app is included in F-Droid, there are key aspects of the service that cannot be independently verified.  For this, we must rely on the people who run the service to do the right thing.  Audits can demonstrate that they were doing the right thing at the point of time of the audit.  Here are some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IVPN&amp;rsquo;s &lt;a href=&#34;https://cure53.de/audit-report_ivpn.pdf&#34;&gt;2019 audit of IVPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mozilla VPN had their app source code &lt;a href=&#34;https://blog.mozilla.org/security/files/2021/08/FVP-02-report.final_.pdf&#34;&gt;audited&lt;/a&gt; in 2021 and fixed the issues that were found.&lt;/li&gt;
&lt;li&gt;Mullvad&amp;rsquo;s &lt;a href=&#34;https://cure53.de/pentest-report_mullvad_2020_v2.pdf&#34;&gt;Pentest-Report Mullvad Apps, Clients &amp;amp; API 05.2020&lt;/a&gt;, &lt;a href=&#34;https://cure53.de/pentest-report_mullvad_v2.pdf&#34;&gt;Pentest-Report Mullvad VPN Clients 09.2018&lt;/a&gt;, and &lt;a href=&#34;https://mullvad.net/en/blog/2021/1/20/no-pii-or-privacy-leaks-found-cure53s-infrastructure-audit/&#34;&gt;2020 Infrastructure Audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Outline&amp;rsquo;s &lt;a href=&#34;https://s3.amazonaws.com/outline-vpn/static_downloads/ros-report.pdf&#34;&gt;2017 Pentratration Test Report&lt;/a&gt; and &lt;a href=&#34;https://s3.amazonaws.com/outline-vpn/static_downloads/cure53-report.pdf&#34;&gt;Pentest &amp;amp; Audit Report Jigsaw Outline 09.-12.2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Proton VPN open sourced their client apps and had them &lt;a href=&#34;https://www.zdnet.com/article/protonvpn-apps-handed-to-open-source-community-in-transparency-security-push/&#34;&gt;audited&lt;/a&gt; in 2019.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;publicly-verifiable-binaries-via-reproducible-builds&#34;&gt;Publicly verifiable binaries via reproducible builds&lt;/h3&gt;

&lt;p&gt;Source code is the easiest place to conduct an audit of software, but it is the binary files that actually run on your device.  Auditing binaries rarely happens since it is so much more time intensive.  And yet, there are ways to change how software works without changing the source code. This can be done by injecting changes into the process that converts the source code into the executable binary.  &lt;a href=&#34;https://reproducible-builds.org/&#34;&gt;Reproducible Builds&lt;/a&gt; is the indisputable method for proving that a given binary was generated by given source code.&lt;/p&gt;

&lt;p&gt;There are some generic VPN clients in Debian that are built reproducibly, but there are no Android or iOS VPN apps or  branded desktop client apps that meet this standard yet.  We recommend that VPN providers work with &lt;a href=&#34;https://wiki.debian.org/ReproducibleBuilds&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;f-droid.org/docs/Reproducible_Builds&#34;&gt;F-Droid&lt;/a&gt;, the &lt;a href=&#34;https://reproducible-builds.org/&#34;&gt;Reproducible Builds&lt;/a&gt; group, or any other relevant &lt;a href=&#34;https://reproducible-builds.org/who/projects/&#34;&gt;project&lt;/a&gt; to achieve this key step.&lt;/p&gt;

&lt;h3 id=&#34;apple-ios&#34;&gt;Apple iOS&lt;/h3&gt;

&lt;p&gt;This post focuses on Android because iOS has a number of issues that make using VPNs for privacy less effective.  For example, VPNs on iOS will &lt;a href=&#34;https://www.bleepingcomputer.com/news/security/unpatched-ios-bug-blocks-vpns-from-encrypting-all-traffic/&#34;&gt;leak IP addresses&lt;/a&gt;.  Apple knows about this issue, yet still has &lt;a href=&#34;https://www.theregister.com/2022/08/19/apple_ios_vpn/&#34;&gt;not fixed&lt;/a&gt; it after a couple years.  On top of that, it is not possible to have reproducible builds on iOS because the actual executable binaries are encrypted by Apple&amp;rsquo;s proprietary Digital Restrictions Management (DRM), so only Apple could ever reproducibly build something.  If you are running Apple iOS, you are stuck trusting Apple to do the right thing, since they operate a relatively opaque, proprietary, strictly walled garden.&lt;/p&gt;

&lt;h2 id=&#34;run-your-own-vpn&#34;&gt;Run your own VPN&lt;/h2&gt;

&lt;p&gt;The VPN security model means you have to put a ton of trust in the operator.  Questions of trust get much easier when you are talking about yourself or own organization.  There are many projects that aim to make it as easy as possible to run your own VPN service.  The good ones are all free software and have been audited, both the client source code and the server side setup.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://amnezia.org&#34;&gt;Amnezia&lt;/a&gt; is a free service to create a personal VPN on your server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leap.se/&#34;&gt;LEAP VPN&lt;/a&gt; is a &amp;ldquo;white label&amp;rdquo; VPN setup used to build Bitmask, CalyxVPN, RiseupVPN and more.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getoutline.org/&#34;&gt;Outline&lt;/a&gt; &amp;ldquo;makes it easy to create a VPN server, giving anyone access to the free and open internet.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://we-pn.com/&#34;&gt;WEPN&lt;/a&gt; is a free software kit to become your own VPN provider, designed around a small hardware device.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are also generic VPN client apps based on standard protocols:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/nl.eduvpn.app/&#34;&gt;eduVPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/de.blinkt.openvpn/&#34;&gt;OpenVPN for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.github.shadowsocks/&#34;&gt;Shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/org.strongswan.android/&#34;&gt;strongSwan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/com.WireGuard.android/&#34;&gt;WireGuard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;comparing-vpns-to-tor-and-masque&#34;&gt;Comparing VPNs to Tor and MASQUE&lt;/h2&gt;

&lt;p&gt;If it is privacy that you seek, then there are other tools to review.  Tor is a longstanding community project that aims to make privacy proxies without compromise. Tor works similarly to VPN in that it is tunneling traffic to shared servers, the big difference is that your traffic is tunneled through three relays (in comparison to single hop VPNs). Each individual Tor relay cannot see the enough to put together a picture of who is doing what. At most, a relay can see what is done, but not who.  Or that someone is accessing Tor, but not their destination.  &lt;a href=&#34;https://guardianproject.info/apps/org.torproject.android/&#34;&gt;Orbot&lt;/a&gt; provides a VPN mode, but this is still full Tor protection, since it is just using the device&amp;rsquo;s VPN user experience to provide access to the Tor network.  &lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor Browser&lt;/a&gt; then adds whole other layers of privacy protection that can only be implemented in the internet-enabled app.  This includes things like reducing metadata leaks in the HTTPS connection or web APIs, or isolating websites from each other within the browser, so they cannot read data about other sites the user has visited.&lt;/p&gt;

&lt;p&gt;A new approach that is somewhere in between a VPN and Tor are multi-hop &lt;a href=&#34;https://guardianproject.info/2020/02/25/masque-review/&#34;&gt;MASQUE&lt;/a&gt; relays.  MASQUE is a new protocol that is similar to VPN and proxy protocols.  MASQUE is built on HTTP/3 aka QUIC, so it does not stick out as much as VPN or WireGuard traffic.  It also allows for multi-hop configurations.  MASQUE is only newly deployed, so there is not the two decades of experience working to minimize metadata leaks in the processes for relaying traffic.&lt;/p&gt;

&lt;p&gt;Apple iCloud Private Relay is a &lt;a href=&#34;https://blog.cloudflare.com/icloud-private-relay/&#34;&gt;two hop deployment&lt;/a&gt; on MASQUE, which means that the Apple side can see that the user is sending traffic, and the Cloudflare side can see the destination, but not the user.  That does provide a real privacy improvement over a single hop system.  Unfortunately, Apple iCloud Private Relay fails most of the other tests laid out in this post.  Plus given the history of NSA programs like PRISM, and the willingness for US companies like Apple and Google to &lt;a href=&#34;https://www.theguardian.com/world/2013/jun/06/us-tech-giants-nsa-data&#34;&gt;take part&lt;/a&gt;, this setup is not clear protection from NSA and Five Eyes surveillance and targeting.  It would be relatively straightforward for those kinds of agencies to correlate the data from the Apple and Cloudflare side if they have access to the metadata from both sides.&lt;/p&gt;

&lt;p&gt;If privacy is your primary concern, then it is worth investing time into tools like Tor.  If you have limited time and are mostly concerned about mass surveillance, then a good VPN is worth considering for some added privacy protection.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scanning apps, off the record</title>
      <link>https://guardianproject.github.io/info/2022/09/28/scanning-apps-off-the-record/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/09/28/scanning-apps-off-the-record/</guid>
      <description>

&lt;p&gt;Smart phones have brought us so many wonderful capabilities.  They let people around the world access vast realms of information.  They let app developers solve problems large and small in a way most relevent to their local context.  They are personal computers for the world.  They also have given surveillance capitalism an unprecedented reach into everyone&amp;rsquo;s lives. Repressive governments use them in ways that the East German Stasi secret police could only have dreamed of.  And as promising as artificial intelligence is, it is also threatening humanity.  People around the world are pushing back.  This public interest work requires technical inspection of apps.  There are organizations highlighting algorithmic transparency and calling out surveillance capitalism.  Journalists are linking apps into key stories about the misdeeds of powerful companies.  Activists are exposing the hidden machinations of their governments.  All of these people require technical skills to see what a given app is going.&lt;/p&gt;

&lt;p&gt;It turns out that a lot of the technical bits required to do these kinds of investigations can be automated.  When combined with good user experience design, many of the barriers to entry can be removed.  This allows more people to get involved, and for many of these problems to be crowdsourced even.  This is the central focus of our project Tracking the Trackers.  We have just completed the third round of work to bring the initial automation to a more accessible user experience.&lt;/p&gt;

&lt;p&gt;We have discussed these workflows with a number of organizations doing this kind of work to learn about their processes, and how they might be improved.  And we want to hear from more.  There is a lot of potential to pool limited resources to build up a shared, free software resource that is greater than the sum of its parts.  And there are many complementary projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EFF&amp;rsquo;s &lt;a href=&#34;https://github.com/EFForg/apkeep&#34;&gt;apktool&lt;/a&gt; - tool for downloading Android apps from various sources&lt;/li&gt;
&lt;li&gt;F-Droid &lt;a href=&#34;https://f-droid.org/2020/12/21/announcing-issuebot.html&#34;&gt;&lt;em&gt;issuebot&lt;/em&gt;&lt;/a&gt; - automatically review apps via GitLab issues and merge requests&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/topics/ci-cd/&#34;&gt;GitLab CI&lt;/a&gt; - server-less processing tied to issue trackers and merge requests&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git.app-check.org/app-check&#34;&gt;MobilSicher AppCheck&lt;/a&gt; - dynamic analysis for finding personal data leaks in apps&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pts-project.org/&#34;&gt;PiRouge&lt;/a&gt; - mobile forensic and network traffic analysis platform&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://beta.pithus.org/about/&#34;&gt;Pithus&lt;/a&gt; - mobile threat intelligence platform for activists, journalists, NGOs, researchers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;putting-it-all-together&#34;&gt;Putting it all together&lt;/h2&gt;

&lt;p&gt;We have developed a stack to integrate as many tools that are relevant into a single, productive user experience.  Detailed inspection of apps is a process that must be tracked, so the focus is on issue trackers and merge requests.  Each app is tracked as an issue.  A person opens up a new issue, adding what they know about the app, including links to it in an app store, the Application ID, links to any source code, etc.  Then &lt;em&gt;issuebot&lt;/em&gt; kicks in and downloads the app and any source code it can find.  Once successful, it will launch various analysis processed on what it downloaded.  Those results are then compiled into a report which is posted to the issue tracker for the human reviewers.  The bot leaves its mark using a GitLab label called &lt;code&gt;fdroid-bot&lt;/code&gt;.  If someone found more files to download and would like &lt;em&gt;issuebot&lt;/em&gt; to run again, they just remove the &lt;code&gt;fdroid-bot&lt;/code&gt; label and &lt;em&gt;issuebot&lt;/em&gt; will try the whole process again.&lt;/p&gt;

&lt;p&gt;It runs a number of different scans and processes to check:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inspect apps from F-Droid, Google Play, APKPure, Huawei App Gallery, and GitHub Releases.&lt;/li&gt;
&lt;li&gt;Get the source code&lt;/li&gt;
&lt;li&gt;Build the app from source&lt;/li&gt;
&lt;li&gt;Find the license of the source code&lt;/li&gt;
&lt;li&gt;Extract info about libraries, classes, domain names, URLs, permissions, services, etc.&lt;/li&gt;
&lt;li&gt;Apply signature collections&lt;/li&gt;
&lt;li&gt;What kinds of &lt;a href=&#34;https://f-droid.org/docs/Anti-Features&#34;&gt;Anti-Features&lt;/a&gt; an app has, e.g. tracking, ads, non-free dependencies, known vulnerabilities, etc.&lt;/li&gt;
&lt;li&gt;Whether all the dependencies are also free software&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using this process, the F-Droid community reviews all apps for &lt;a href=&#34;https://f-droid.org/docs/Anti-Features/&#34;&gt;Anti-Features&lt;/a&gt; before accepting them into the &lt;f-droid.org&gt; collection.  For some years now, F-Droid have reviewed new apps and updates via merge requests with &lt;em&gt;issuebot&lt;/em&gt;.  It automatically checks issues on the &lt;a href=&#34;https://gitlab.com/fdroid/rfp/-/issues&#34;&gt;Requests for Packaging&lt;/a&gt; tracker, this is the starting point of the process of adding new apps to the collection.  The collection is then maintained via merge requests on the &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/-/merge_requests&#34;&gt;&lt;em&gt;fdroiddata&lt;/em&gt;&lt;/a&gt; project.  There are hundreds of reviews there to browse through, an some &lt;a href=&#34;https://gitlab.com/fdroid/rfp/-/issues/2224#note_1118052837&#34;&gt;scans&lt;/a&gt; that are more interesting.&lt;/p&gt;

&lt;p&gt;We believe this same workflow fits well to many processes for inspecting apps.  GitLab provides the core workflow that fits how many researchers and organizations are already doing this work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Detailed inspection happens over time, over multiple work sessions.&lt;/li&gt;
&lt;li&gt;Multiple people are involved in the process.&lt;/li&gt;
&lt;li&gt;Work can happen asynchronously across time zones and organizations.&lt;/li&gt;
&lt;li&gt;Public GitLab also opens up crowdsourcing opportunities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have setup a instance of this setup for public interest organizations and investigators to use.  This is called the &amp;ldquo;Off The Record&amp;rdquo; tracker.  Access is available on request, send an email to &lt;a href=&#34;mailto:support@guardianproject.info&#34;&gt;support@guardianproject.info&lt;/a&gt; to make the request.  Additionally, the whole stack is free software.  Organizations are free to run it as they need to, with any privacy requirements that might need.  That also makes it cheap to host this software, so that it can be affordably provided as a service to people working in the public interest.  It can be &lt;a href=&#34;https://gitlab.com/fdroid/issuebot#installing-into-a-gitlab-project&#34;&gt;self-hosted&lt;/a&gt; with any GitLab &amp;ldquo;Community Edition&amp;rdquo; instance with CI/CD Runners, and also runs on the gratis &lt;a href=&#34;https://gitlab.com/&#34;&gt;https://gitlab.com/&lt;/a&gt; hosting.    It does touch some proprietary services, but only via public APIs so that the functionality is included in the stack.&lt;/p&gt;

&lt;p&gt;One new development is the creation a standard pattern for managing profiles for collections of signatures to detect Anti-Features in Android apps.  F-Droid &lt;a href=&#34;https://gitlab.com/fdroid/suss&#34;&gt;SUSS&lt;/a&gt; (Suspicious or Unwanted Software Signatures) is the first live project, with F-Droid&amp;rsquo;s &lt;code&gt;scanner&lt;/code&gt; tool using it. Before this round of work began, there were multiple silos where related activities were happening.  F-Droid scans for non-free software, Mobil Sicher detects when apps transmit personal data, Exodus Privacy find for tracking software, and IzzySoft looks for Anti-Features of all kinds.  We hope that standardizing data formats and workflows will make contribution and shared maintenance easier, as well as making it easy for organizations to maintain their own collections of signatures they want to detect.  YARA serves as template for this effort. It began at one malware company, and is now used by a &lt;a href=&#34;https://virustotal.github.io/yara/#who-s-using-yara&#34;&gt;wide variety&lt;/a&gt; of organizations. YARA has become the standard tool for writing malware signatures for desktop platforms.  Unfortunately, it is &lt;a href=&#34;https://github.com/VirusTotal/yara/issues/1145&#34;&gt;not well structured&lt;/a&gt; to work for scanning Android apps or source code, but it can serve as a inspiration and model.&lt;/p&gt;

&lt;h2 id=&#34;appendix&#34;&gt;Appendix&lt;/h2&gt;

&lt;h3 id=&#34;a-know-the-local-laws-on-software-inspection&#34;&gt;A) Know the local laws on software inspection.&lt;/h3&gt;

&lt;p&gt;In many places, just the act of inspecting software can get you in trouble with local governments or companies.  This could be anything from &lt;a href=&#34;https://www.vidstromlabs.com/blog/the-legal-boundaries-of-reverse-engineering-in-the-eu/&#34;&gt;unclear laws&lt;/a&gt; &lt;a href=&#34;https://www.eff.org/issues/coders/reverse-engineering-faq&#34;&gt;regarding&lt;/a&gt; &lt;a href=&#34;https://www.twobirds.com/en/insights/2020/germany/vertraglicher-ausschluss-von-reverse-engineering&#34;&gt;reverse engineering&lt;/a&gt; to overreach from law enforcement.  Running the inspection in private means the app reviewers are much less exposed unwarranted or unjust interference.  Anyone doing software inspection should familiarize themselves with local laws and regulation that affect it.&lt;/p&gt;

&lt;p&gt;The biggest challenges that remain for making software inspection commonplace are around how organizations and governments apply this software.  Any organization that wants to start working on auditing software in the public interest will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Legal guidelines for getting any required permissions before downloading apps to review.&lt;/li&gt;
&lt;li&gt;A home organization for this repository that has a public mission aligned with these goals.&lt;/li&gt;
&lt;li&gt;Legal representation to handle any issues that arise, and to push back against illegitimate requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;b-what-no-ios&#34;&gt;B) What, no iOS?&lt;/h3&gt;

&lt;p&gt;We recognize that it is also important to inspect iOS apps.  Compared to Android, the Apple mobile ecosystem is smaller and much more closed and restrictive.  Therefore, it is much more more difficult to inspect.  The application executable binary in the &lt;code&gt;.ipa&lt;/code&gt; file is &lt;a href=&#34;https://stackoverflow.com/questions/5784169/does-apple-modify-ios-application-executables-on-apps-submitted-to-the-app-store/5784332#5784332&#34;&gt;encrypted&lt;/a&gt; which prevents examination of the binary.  The only way to get the actual &lt;code&gt;.app&lt;/code&gt; files is to have a jailbroken iOS device, then manually install them on the device.    Only then can they be extracted and inspected.&lt;/p&gt;

&lt;p&gt;(&lt;em&gt;This work was funded by NLnet as &lt;a href=&#34;https://nlnet.nl/project/EthicalApps/&#34;&gt;The Search for Ethical Apps&lt;/a&gt; under the umbrella of &lt;a href=&#34;https://guardianproject.info/2022/09/01/the-search-for-ethical-apps-lets-start-with-governments/&#34;&gt;Guardian Project&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://guardianproject.info/tags/tracking-the-trackers/&#34;&gt;Tracking the Trackers&lt;/a&gt; effort.&lt;/em&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Search for Ethical Apps: Let&#39;s start with governments</title>
      <link>https://guardianproject.github.io/info/2022/09/01/the-search-for-ethical-apps-lets-start-with-governments/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/09/01/the-search-for-ethical-apps-lets-start-with-governments/</guid>
      <description>

&lt;p&gt;Governments across the world are moving services to mobile apps.  The vast majority of these apps are only available in the Google Play store or in the Apple App store.  Installing apps from these services requires users to agree to their terms of service.  This means governments require their citizens to sign opaque and privacy invading contracts with foreign Big Tech in order to use digital services.  This feeds ever more into Big Tech data control, filtering, and information bubbles.  There are some exceptions here, like China has multiple app stores that are popular.  Chinese Big Tech also require restrictive terms of service agreements.  Additionally, many of apps are developed by the same firms that are tied into the surveillance capitalism ecosystem.  So they include features that track the end users. The governments are not demanding data transparency, and these firms have not been delivering it.&lt;/p&gt;

&lt;p&gt;In Austria, there is a clear example: the &lt;a href=&#34;https://www.a-trust.at/en/Handy-Signatur/&#34;&gt;&lt;em&gt;Handy Signatur&lt;/em&gt;&lt;/a&gt; app.  Public health insurance providers require this app for people to access their accounts online. Since COVID-19 countermeasures forced schools into online-mode, many public schools have been requiring education apps for students, parents and teachers to connect with and interact with the school. People with the that app can also sign petitions and download vaccination certificates those without have to do much more work.&lt;/p&gt;

&lt;p&gt;Mobile phone users want to know about what apps are doing with their personal data. Citizens around the world gaining consciousness about these issues.  In order to build public pressure, a critical mass must be aware of these problems. To learn, they must first discover how widespread and entrenched this problem is.  We received funding from &lt;a href=&#34;https://nlnet.nl/project/EthicalApps/&#34;&gt;NLnet&lt;/a&gt; to work on this key area.  This project integrates existing tools and builds a &amp;ldquo;software kit&amp;rdquo; to make it easy to generate data about the apps governments require.  This data will be simple to index so that it citizens and search it and discover the terms their governments are requiring them to take to access e-government services.&lt;/p&gt;

&lt;p&gt;Journalists are just starting to report on this large and growing problem.  One of the few stories in the European media came recently in the Dutch media: &amp;ldquo;&lt;a href=&#34;https://fd.nl/economie-politiek/1383007/overheid-dwingt-burger-in-de-richting-van-google-en-apple&#34;&gt;&lt;em&gt;Overheid dwingt burger in de richting van Google en Apple&lt;/em&gt;&lt;/a&gt;&amp;rdquo; (The authorities force citizens towards Google and Apple).  On top of transparency, governments should also ensure that the apps they make and use are available without privacy concerns or corporate control, and that they are not feeding data to companies that control search algorithms and limit user autonomy.&lt;/p&gt;

&lt;p&gt;This first step is to make a repository with the apps related to government services.  This then provides a template for others to do the same in other countries.  Next steps are include pushing organizations and companies to do the same, for example school and banking apps; getting more country repositories and perhaps an EU repository; an helping governments, organizations, and companies set up good distribution options.  Governments should also list F-Droid as an option for getting the apps whenever they mention Google Play and Apple App Store.  And when governments go &lt;a href=&#34;https://f-droid.org/packages/de.bwl.lfdi.app/&#34;&gt;all&lt;/a&gt; &lt;a href=&#34;https://www.baden-wuerttemberg.datenschutz.de/lfdi-bw-app-f-droid/&#34;&gt;the way&lt;/a&gt;, they should be lauded. 🎉&lt;/p&gt;

&lt;p&gt;We work partners to make this come to life:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;F-Droid provides all the tools for securely publishing and managing app repositories.  F-Droid&amp;rsquo;s community app &lt;a href=&#34;https://gitlab.com/fdroid/rfp/-/issues&#34;&gt;review&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/-/merge_requests&#34;&gt;process&lt;/a&gt; gives us a template to build upon for reviewing all apps in an open way.  F-Droid provides another option that does not lock anyone into any service. There are no terms of service, or even &lt;a href=&#34;https://f-droid.org/2022/02/28/no-user-accounts-by-design.html&#34;&gt;user accounts&lt;/a&gt; to sign up for.  And F-Droid provides a decentralized app distribution ecosystem where anyone can publish their own apps via their own repositories.  If the app is free software, it can be included in the main &lt;a href=&#34;https://f-droid.org&#34;&gt;f-droid.org&lt;/a&gt; repository.  Millions of users have installed F-Droid themselves, and companies like Fairphone have shipped devices with F-Droid pre-installed.  Anyone can freely install F-Droid on any Android device.  So F-Droid provides app distribution without being locked into any service, unlike Google Play.&lt;/li&gt;
&lt;li&gt;ITUJ&amp;rsquo;s &lt;a href=&#34;https://mobilsicher.de/&#34;&gt;mobilsicher&lt;/a&gt; project will provide the user facing service for Germany. Their new repository will serve both as an app distribution provider, and as an example of how other organizations can do the same.  Their impressive &lt;a href=&#34;https://git.app-check.org/app-check&#34;&gt;app-check&lt;/a&gt; review &lt;a href=&#34;https://appcheck.mobilsicher.de/&#34;&gt;platform&lt;/a&gt; is a complete stack for human reviewers to do dynamic analysis, and the database they have built up will be integrated into the review process.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://exodus-privacy.eu.org/&#34;&gt;Exodus Privacy&lt;/a&gt; focuses on tracking embedded in Android apps.  It works based on users requesting apps be reviewed.  It is an important source for this project since it is narrowly focused on detecting and reporting tracking in any Android app.&lt;/li&gt;
&lt;li&gt;EFF created and maintains &lt;a href=&#34;https://github.com/EFForg/apkeep&#34;&gt;&lt;em&gt;apkeep&lt;/em&gt;&lt;/a&gt;, the essential tool for getting the actual app files to inspect when the source code is not available.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://beta.pithus.org/about/&#34;&gt;Pithus&lt;/a&gt; is a mobile threat intelligence platform for activists, journalists, NGOs, researchers that is a entirely open platform supported and maintained by the community.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/techlore/plexus&#34;&gt;Techlore Plexus&lt;/a&gt; is a catalog of Android apps that have been reviewed in terms of compatibility with Google-free devices.  For example, they list whether an app requires Google Play Services to run.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, this is not the complete solution for &lt;a href=&#34;https://www.ethicsinapps.eu/&#34;&gt;ethical apps&lt;/a&gt;.  This is a stepping stone towards the end goal of &amp;ldquo;&lt;a href=&#34;https://publiccode.eu/&#34;&gt;Public&lt;/a&gt; &lt;a href=&#34;https://www.eff.org/deeplinks/2017/10/public-money-public-code-show-your-support-free-software-europe&#34;&gt;Money&lt;/a&gt;, &lt;a href=&#34;https://publiccode.asia/&#34;&gt;Public&lt;/a&gt; &lt;a href=&#34;https://blog.okfn.org/2017/09/20/public-money-public-code/&#34;&gt;Code&lt;/a&gt;&amp;rdquo;.  This project will push governments down that road by outlining easier steps to take as they move towards free software: making apps available for public audit, allowing users to install apps without agreeing to any terms of service, etc.  It enables users of free platforms like CalyxOS, LineageOS, Murena, etc. to get access to public services via their mobile devices.  It gives users with Google Play devices the option to disable Google Play, because they can get the apps they need via F-Droid.&lt;/p&gt;

&lt;h2 id=&#34;the-shape-of-the-work&#34;&gt;The shape of the work&lt;/h2&gt;

&lt;p&gt;Here is the general idea of what this project will do, as outlined in the funding propsal:&lt;/p&gt;

&lt;h3 id=&#34;1-low-maintenance-repositories&#34;&gt;1. Low maintenance repositories&lt;/h3&gt;

&lt;p&gt;Launch an F-Droid app repository for a pre-curated set of apps that includes direct download links.  Ongoing software maintenance is covered since it will be integrated into F-Droid&amp;rsquo;s core offering.  App updates, verification, and hosting for the Austria repository are all covered indefinitely by existing Guardian Project/F-Droid efforts.   Once complete, other launches will require only a website and a launch campaign.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrate APK download tools like EFF&amp;rsquo;s &lt;em&gt;apkeep&lt;/em&gt;, &lt;em&gt;gplaycli&lt;/em&gt;, etc. into &lt;em&gt;issuebot&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Build existing automation scripts into user tools&lt;/li&gt;
&lt;li&gt;Link repo publishing with &lt;em&gt;issuebot&lt;/em&gt; posts in GitLab project&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-ongoing-review&#34;&gt;2. Ongoing Review&lt;/h4&gt;

&lt;p&gt;Build a public facing app review site based on existing F-Droid methods and software.  This would clearly show the technical factors that go into the review process.  Chosen contributors can submit and review apps there, the public can watch.  This needs some software development and a GitLab instance (could be free hosting on gitlab.com).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrate review tools from collaborators&lt;/li&gt;
&lt;li&gt;Sync tracking lib data with Exodus Privacy&amp;rsquo;s public database&lt;/li&gt;
&lt;li&gt;Create canonical F-Droid database of proprietary libraries&lt;/li&gt;
&lt;li&gt;Build out data publishing system, so all extracted data is navigable by scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;3-community-review&#34;&gt;3. Community Review&lt;/h4&gt;

&lt;p&gt;Expand software tooling to allow submission and review to more contributors.  Stage 2 should be running smoothly before opening it up to the public. On top of software development, this needs staff or committed volunteer time spent on managing the community.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;user research on how people think about data extracted from apps&lt;/li&gt;
&lt;li&gt;UX design for &lt;em&gt;issuebot&lt;/em&gt; to represent extracted data in GitLab tracker posts&lt;/li&gt;
&lt;li&gt;document tools so community manager can effectively curate user interactions&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-launch-for-new-organization&#34;&gt;4. Launch for new Organization&lt;/h4&gt;

&lt;p&gt;Launch a campaign for other countries and perhaps EU-wide in partnership with civil society organizations and governments.  This could happen after any of the previous stages, e.g. we could help one government setup a &amp;ldquo;pre-curated&amp;rdquo; website and another organization with a &amp;ldquo;community review&amp;rdquo; setup.&lt;/p&gt;

&lt;h3 id=&#34;total-budget-48-000&#34;&gt;Total Budget: 48,000€&lt;/h3&gt;

&lt;p&gt;(&lt;em&gt;We&amp;rsquo;re a little late in publishing this post, the project runs from April through September 2022&lt;/em&gt;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Serving Websites Privately Over Tor Onion Services (From Your Laptop!)</title>
      <link>https://guardianproject.github.io/info/2022/08/29/serving-websites-privately-over-tor-onion-services-from-your-laptop/</link>
      <pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/08/29/serving-websites-privately-over-tor-onion-services-from-your-laptop/</guid>
      <description>

&lt;p&gt;In this day and age when our data is consistently being tracked and profited off of, sharing information safely and securely is difficult. However, that does not necessarily mean that all network services are subject to such scrutiny. Users now have the ability to combine the security of HTTPS with the privacy benefits of Tor Browser and share information through Tor’s anonymous network services – &lt;a href=&#34;https://community.torproject.org/onion-services/&#34;&gt;Onion Services&lt;/a&gt;. By using an onion service, users can hide their location while active, connect to other Tor users, and retain their privacy throughout. But to do so, one needs to know how to set up an Onion Service.&lt;/p&gt;

&lt;p&gt;While the following instructions are specific to a Mac, with minor differences this can be applied to other devices and systems.&lt;/p&gt;

&lt;h2 id=&#34;step-1-download-and-set-up-the-tor-service&#34;&gt;Step 1 → Download and Set Up the Tor Service&lt;/h2&gt;

&lt;p&gt;While there are multiple ways to download and set up tor, the simplest is to follow the instructions at &lt;a href=&#34;https://torproject.org/download/&#34;&gt;https://torproject.org/download/&lt;/a&gt; that goes along with the operating system you are using.&lt;/p&gt;

&lt;p&gt;For further information, you can follow the Tor installation guide: &lt;a href=&#34;https://community.torproject.org/onion-services/setup/install/&#34;&gt;https://community.torproject.org/onion-services/setup/install/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have successfully downloaded tor, to check if tor is running you can either open the browser and establish connection or use commands to check its success:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/opt/homebrew/bin/brew services start tor
/opt/homebrew/bin/brew services stop tor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Please note, in this step you are running the tor service on your machine to host the onion server. In later steps, we will be using the Tor Browser app to view the site remotely.&lt;/p&gt;

&lt;h2 id=&#34;step-2-download-and-set-up-a-web-server-optional-during-development-but-required-for-production&#34;&gt;Step 2 → Download and Set Up a Web Server (Optional during Development, but required for Production)&lt;/h2&gt;

&lt;p&gt;In order to set up a website or some content for a client to access, we need to set up a local web server. A web server is the computer software and underlying hardware that communicates with a web browser using HTTP to distribute web pages to the client who requested it, with local web server examples including Apache and Nginx. The reason for this is that when it comes to the finished product, you can copy the fields into the apache web directory and that would be your web server&lt;/p&gt;

&lt;p&gt;However, for websites that we are building on npm, as npm has its own built in web server for development, it has its own local host web server ready. Hence, we can just point our hidden service web server at that, for testing and development. Once we arrive at production, we will use the apache or another web server to host our local service.&lt;/p&gt;

&lt;p&gt;To install these web servers on MacOS can be difficult, so specifically for this operating system, it is best to install (or update) the homebrew package, which will then allow you to run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/opt/homebrew/bin/brew install apache
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have having trouble choosing a local web server or downloading it, a useful guidance tool is: &lt;a href=&#34;https://www.javatpoint.com/how-to-install-apache-on-mac&#34;&gt;https://www.javatpoint.com/how-to-install-apache-on-mac&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The default location where web servers run is on &lt;a href=&#34;https://localhost:80&#34;&gt;https://localhost:80&lt;/a&gt;. Hence, once you have downloaded the web server software, to check if it is working, open your browser and go to &lt;a href=&#34;https://localhost:80&#34;&gt;https://localhost:80&lt;/a&gt;. If you have successfully downloaded the web server software, you will be notified of this success.&lt;/p&gt;

&lt;p&gt;For further steps, or multiple uses you may need to start or stop the web server software which can be done using the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apachectl start
sudo apachectl stop
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-3-modify-your-tor-configuration-file&#34;&gt;Step 3 → Modify your Tor Configuration File&lt;/h2&gt;

&lt;p&gt;In order to create the onion service link, you must mody the the tor configuration file (torrc) by adding the following lines and save the changes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HiddenServiceDir /var/lib/tor/my_website/
HiddenServicePort 80 127.0.0.1:80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The HiddenServiceDir line is to inform tor of where to save the onion v3 service link, hence you must modify this line to point to a file whose permissions include both readable and writable.
The HiddenServicePort line is informing Tor of the port people visiting your Onion Service will be using, which is currently set as localhost.&lt;/p&gt;

&lt;p&gt;While the torrc file is saved in different places depending on the operating system being used, for MacOS, the file can be found at this filepath:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; /Library/”Application Support”/TorBrowser-Data/Tor/ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-4-create-the-hidden-service-folder-optional&#34;&gt;Step 4 → Create the Hidden Service Folder (Optional)&lt;/h2&gt;

&lt;p&gt;While this step is not necessary, doing this reduces the chance of problems later on.&lt;/p&gt;

&lt;p&gt;Once you have modified your tor configuration file, you should create the HiddenServiceDir directory where Tor will create the hostname file, which will contain your new onion v3 service address. For MacOS, this file should be created in the tor folder which can be found with this file path:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HiddenServiceDir /opt/homebrew/etc/tor/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The folder should be given the permissions to allow tor to read and write to it, which can be done by calling:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;filename chmod 700 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-restart-tor-and-check-for-the-onion-service-link&#34;&gt;Step 5 → Restart Tor and Check for the Onion Service Link&lt;/h2&gt;

&lt;p&gt;Once you have restarted Tor, it should have created the file hostname with the new onion v3 service in the directory which you pointed it to with the HiddenServiceDir line in your torrc.
If it has not, potential areas to check for faults are:
- The HiddenServiceDir directory’s file permissions
- If Tor was properly restarted
- The torrc file modifications and if there are any incorrect file paths or mistakes
- The log files which you can find using &lt;a href=&#34;https://support.torproject.org/#Logs&#34;&gt;https://support.torproject.org/#Logs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-6-test-your-onion-service&#34;&gt;Step 6 → Test Your Onion Service&lt;/h2&gt;

&lt;p&gt;If you have successfully acquired your onion service link, you can then run it on Tor and it should direct you to the page which has been initially configured on apache (the same page we saw at localhost:80). If not, potential problems could include:
- Your web server software is no longer running and needs to be started
- The page is found at a different port
- One important thing to remember is that once you have gotten your onion address, a new one will not be generated, this is your permanent link whose content can be manipulated.&lt;/p&gt;

&lt;h2 id=&#34;step-7-build-the-file-web-page-being-used&#34;&gt;Step 7 → Build the File/Web Page Being Used&lt;/h2&gt;

&lt;p&gt;Once your onion service link is up and running, it is now time to display on it the html files you intend to share. To do so, if the files are a Node app or a progressive web app, and not a static html page or website, it is important to build the code first by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm run build 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A potential problem could be that when you run a web service, especially a Node app or a progessive web app, it renders links for the domain it thinks it is at, not the one you intend it to be at. For a typical static website it wouldn&amp;rsquo;t matter because it is a static set of pages; however, when using a live node application, it&amp;rsquo;s helpful to know what the public address is.&lt;/p&gt;

&lt;p&gt;To fix this problem, to your code you should add the following line which points directly to your new onion service address, like the example here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public:’2xx7phs7hw5fduqulcrthkmfaesxbsy5om5xpkpsn4y54mnbj4b6ekd.onion’
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-8-run-the-file-and-test-your-onion-service&#34;&gt;Step 8 → Run the File and Test your Onion Service&lt;/h2&gt;

&lt;p&gt;1- For this step, there are two potential methods depending on the type of content you intend to display on your Onion Service. For html documents or simple websites, the simplest method to run the file is to copy it into the folder which localhost:80 (or whichever port you are using) is connected to. For MacOS, the folder can be found at:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/Library/WebServer/Documents
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To copy, the command to run is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /path/from /path/to
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once that is done, simply restart your Tor browser, head to your new onion service address and your html file can be found there.&lt;/p&gt;

&lt;p&gt;2- To run a Node app or progress website, first the file needs to be running on your local server. To do so, one tip is to specify the port you intend to run it on, especially other ports that are running other websites or html content. For that, run the following command (changing it to point to the port you are using):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm run service – –port 4000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To connect to this npm web server on port 4000 instead of apache, we need to modify the onion service configuration in the torrc:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HiddenServicePort 80 127.0.0.1:4000
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;accessing-the-onion-site&#34;&gt;Accessing the Onion site&lt;/h2&gt;

&lt;p&gt;Once the website is running on localhost at the port you have specified, restart your Tor service. Then, navigate to your new onion service address where your website is now live for all the people you have shared your secure link with. You can use any Tor-enabled browser, such as &lt;a href=&#34;https://www.torproject.org/download/&#34;&gt;Tor Browser for Desktops&lt;/a&gt;, &lt;a href=&#34;https://www.torproject.org/download/&#34;&gt;Tor Browser for Android&lt;/a&gt;, or &lt;a href=&#34;https://onionbrowser.com&#34;&gt;Onion Browser for iOS&lt;/a&gt; devices. You can also use a Tor-enabled vpn like &lt;a href=&#34;https://orbot.app&#34;&gt;Orbot for Android and iOS&lt;/a&gt;, to allow any browser, like Chrome or Brave, to access an onion address.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DWeb versus Web3: An Intern&#39;s Journey!</title>
      <link>https://guardianproject.github.io/info/2022/08/19/dweb-versus-web3-an-interns-journey/</link>
      <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/08/19/dweb-versus-web3-an-interns-journey/</guid>
      <description>&lt;p&gt;Close your eyes and imagine. You are sitting, designing the next game-changing innovative idea; however, you are not worried about any information leakage or spread, as you are in control. You not only hold ownership of your data, but with each online activity, your fear of being tracked dissipates more. This new internet you explore on understands each input, tailoring the content to your specific needs as it no longer runs on basic commands, but rather uses the combination of technologies and concepts such as machine learning, big data, and decentralized ledger technology to process information in a smart, human-like manner. This image in your mind is no longer a distant fantasy, but rather a closely approaching reality – this reality is the decentralized web, otherwise referred to as the DWeb.&lt;/p&gt;

&lt;p&gt;The DWeb can be understood through comparison to the current internet paradigm. Currently all web traffic travels through centralized servers controlled by the well-known oligopoly that consists of Meta, Google, AWS, etc. Hence, these servers not only hold power by controlling web traffic, permissions and protocols, but also expose our information as an asset to be exploited for profit. Contrastingly, decentralization implies that users retain control of their own data; to hold permission access there can be no middle-man in the process of sending and receiving data, meaning there is peer-to-peer connectivity and links point not to the web server where the information resides, rather the content itself. For these reasons, content can be stored in multiple places at once, thus eliminating the need for a centralized server. While this may seem complicated, the benefits it reaps are unparalleled; from better security to improved privacy rights, user control over data and even greater adaptability to changes. However, the key idea is that through decentralization no monopoly can form, or so one would hope.&lt;/p&gt;

&lt;p&gt;Having understood the DWeb as any decentralized technical project, the question arises if the implementation of decentralization actually follows through with the virtues of shared ownership and governance. To answer this question, we look towards the ubiquitous example of a decentralized project, Web3 – the Ethereum Solana based application. While the two terms have been interchangeably used, it is necessary to differentiate the theory, the DWeb, and how it can be manipulated in its application, starting with Web3. The DWeb is the umbrella term for all decentralized technological projects, while Web3 is an application of the decentralized web whose services are increasingly powered by blockchains, crypto-assets, artificial intelligence, machine learning, and meta-verses. As the current web, Web2, revolves around personal data being commercialized and is largely dictated by monopoly, censorship and control, Web3 is advertised as the revolutionary shift that solves these problems.&lt;/p&gt;

&lt;p&gt;When understanding if Web3 can fulfill this shift we look to why Web2 was a cause for concern. As 90% of websites are controlled by a handful of companies, they hold power and influence over its design and experience, thus manipulating it for self-benefit. While Web3 claims to overcome this through the umbrella of decentralization as enabling end-users to own their own data, the fact of the matter is that the same venture capital investors who guided the development of Web2 are now funding Web3 and thus shaping the design and experience to cater to their needs; hence, most of the benefits associated with a decentralized web no longer stand. For instance, what has been understood as a positive side effect of Web3 is the emphasis it will create towards open source software. Particularly with regard to the ineffective traditional funding model, a cause of the misalignment of big corporation&amp;rsquo;s profit models and open source projects, Web3 is said to face this concern as startups will be able to fund themselves with cryptocurrencies. However, if the system designers’ goal is to distribute wealth into the hands of the already wealthy, then the advancement of software that is free and open to all will not be a foremost priority. Hence, while the theory pushes forth ideas of shared ownership, the application is subject to the people who are in control and what they stand to gain.&lt;/p&gt;

&lt;p&gt;While it is now clear that applications of decentralization don’t necessarily follow through with the virtues of shared ownership and governance, decentralization is not the problem. Rather, when a term is as broadly applicable as this one, greater effort needs to be given to clearly defining it, differentiating its theory and how it can be realized to reflect its core tenets or principles. For instance, when looking at Web3, a step towards ensuring the control remains in the hands of the users, not only does the system need to be decentralized, but its funding should be as well.&lt;/p&gt;

&lt;p&gt;Sources:
- &lt;a href=&#34;https://supplain.io/news/web3-solve-web2-problems&#34;&gt;https://supplain.io/news/web3-solve-web2-problems&lt;/a&gt;
- &lt;a href=&#34;https://metal.equinix.com/blog/web3-and-open-source/&#34;&gt;https://metal.equinix.com/blog/web3-and-open-source/&lt;/a&gt;
- &lt;a href=&#34;https://hypha.coop/dripline/debate-over-dweb-vs-web3/&#34;&gt;https://hypha.coop/dripline/debate-over-dweb-vs-web3/&lt;/a&gt;
- &lt;a href=&#34;https://coinmarketcap.com/alexandria/article/what-is-web-3-0&#34;&gt;https://coinmarketcap.com/alexandria/article/what-is-web-3-0&lt;/a&gt;
- &lt;a href=&#34;http://milesberry.net/2006/11/open-source-and-web-20/&#34;&gt;http://milesberry.net/2006/11/open-source-and-web-20/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF114 Conference Report: Friday July 29, 2022</title>
      <link>https://guardianproject.github.io/info/2022/07/29/ietf114-conference-report-friday-july-29-2022/</link>
      <pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/07/29/ietf114-conference-report-friday-july-29-2022/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Five of the &lt;a href=&#34;https://www.ietf.org/how/meetings/114/&#34;&gt;114th IETF meeting&lt;/a&gt; in Philadelphia USA. For the rundown on Day Four, see my &lt;a href=&#34;https://guardianproject.info/2022/07/28/ietf114-conference-report-thursday-july-28-2022/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A quiet day today with only the &lt;a href=&#34;https://datatracker.ietf.org/wg/mls/charter/&#34;&gt;Messaging Layer Security&lt;/a&gt; Working Group holding its session. Draft 16 of the &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-mls-protocol/&#34;&gt;MLS protocol&lt;/a&gt; completed last-call in mid-July and has been submitted for review after significant technical and editorial feedback from the working group. Are we getting close (again)?  The &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-mls-architecture/&#34;&gt;MLS Architecture&lt;/a&gt; document was lightly revised and version 8 submitted for review.  Two new drafts were presented: &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-mahy-mls-content-neg/&#34;&gt;MLS Content Negotiation&lt;/a&gt; and &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-robert-mls-extensions/&#34;&gt;MLS Extensions&lt;/a&gt;. The former has yet to be adopted as a Working Group item, but the latter was adopted during IETF114 (before the MLS session, over the mailing list).&lt;/p&gt;

&lt;p&gt;Federation (between messaging systems supporting MLS) was upgraded to BoF (Birds of a Feather) status at IETF114, with the &lt;a href=&#34;https://datatracker.ietf.org/doc/bofreq-mahy-mimi-more-im-interop/&#34;&gt;formal announcement&lt;/a&gt; that the activity would, if agreed by BoF participants, be seeking Working Group status.  The implication here is that the current MLS Working Group might &lt;em&gt;fold the tent&lt;/em&gt; after completion of the architecture and protocol work (a MLSbis Working Group would conceivably follow to handle protocol extensions and updates).  The existing draft on &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ietf-mls-federation&#34;&gt;MLS Federation&lt;/a&gt; would then be picked up by this new Working Group as a starting point.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF114 Conference Report: Thursday July 28, 2022</title>
      <link>https://guardianproject.github.io/info/2022/07/28/ietf114-conference-report-thursday-july-28-2022/</link>
      <pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/07/28/ietf114-conference-report-thursday-july-28-2022/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Four of the &lt;a href=&#34;https://www.ietf.org/how/meetings/114/&#34;&gt;114th IETF meeting&lt;/a&gt; in Philadelphia USA. For the rundown on Day Three, see my &lt;a href=&#34;https://guardianproject.info/2022/07/27/ietf114-conference-report-wednesday-july-27-2022/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At IETF112 (online) a formal Birds of a Feather (BoF) session was held on the concept of &lt;a href=&#34;https://datatracker.ietf.org/meeting/112/materials/slides-112-priv-chair-slides-agenda-01&#34;&gt;Privacy Preserving Measurement&lt;/a&gt;.  A Working Group was &lt;a href=&#34;https://datatracker.ietf.org/wg/ppm/about/&#34;&gt;chartered&lt;/a&gt; and, at IETF113 in Vienna, we were treated to an incredibly detailed presentation on &lt;a href=&#34;https://eprint.iacr.org/2021/576.pdf&#34;&gt;Prio&lt;/a&gt;, an academic concept for supporting privacy in the context of Internet-scale measurement. Quickly following that presentation was an IETF proposal for a &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ppm-dap/&#34;&gt;defined protocol&lt;/a&gt; for &lt;em&gt;distributed aggregation&lt;/em&gt; of measurement data, based on Prio&amp;rsquo;s core concepts and using a range of cryptographic and system architecture techniques to separate measurements from the identities of the human users being measured.&lt;/p&gt;

&lt;p&gt;Here at IETF114, an alternative proposal was brought forward by &lt;a href=&#34;https://brave.com/about/&#34;&gt;Brave Software&lt;/a&gt; called &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-dss-star&#34;&gt;STAR&lt;/a&gt;.  STAR uses techniques (specifically, distributed &lt;a href=&#34;https://www.geeksforgeeks.org/shamirs-secret-sharing-algorithm-cryptography/&#34;&gt;Shamir Secret Sharing&lt;/a&gt;) which make the system simpler to build and presents a smaller attack surface for adversaries.  Brave reported that STAR is in production use for some telemetry in the current &lt;a href=&#34;https://brave.com/download/&#34;&gt;Brave browser&lt;/a&gt;.  Several enhancements are planned, among them use of Oblivious HTTP Application Intermediation (&lt;a href=&#34;https://www.ietf.org/id/draft-ietf-ohai-ohttp-02.html&#34;&gt;OHAI&lt;/a&gt;) to reduce exposure of Brave users&amp;rsquo; IP addresses when they share telemetry data.&lt;/p&gt;

&lt;p&gt;In what is certainly a milestone in the IETF&amp;rsquo;s efforts to have positive impact on user privacy, Apple presented its experience with deploying its &lt;em&gt;private label&lt;/em&gt; version of the &lt;a href=&#34;https://datatracker.ietf.org/wg/privacypass/about/&#34;&gt;Privacy Pass protocol&lt;/a&gt; called Private Access Tokens - defined &lt;a href=&#34;https://www.ietf.org/archive/id/draft-private-access-tokens-01.html&#34;&gt;here&lt;/a&gt; and announced &lt;a href=&#34;https://developer.apple.com/news/?id=huqjyh7k&#34;&gt;here&lt;/a&gt;. Private Access Tokens is a service fully compliant with Type 2 (Publicly Verifiable Basic Tokens) of the Privacy Pas specification, using the Split Origin/Attester/Issuer model and supporting origin-bound or cross-origin tokens.  Apple has also made developer tools available so applications (and not just browsers) can make use of the technology. Importantly, two open source implementations of the Type 2 spec are also available, and several CDN vendors are cooperating in providing test points. See more &lt;a href=&#34;https://datatracker.ietf.org/meeting/114/materials/slides-114-privacypass-deployment-experience-00&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Significant progress has been made on the protocol&amp;rsquo;s &lt;a href=&#34;https://datatracker.ietf.org/meeting/114/materials/slides-114-privacypass-base-drafts-update-00&#34;&gt;three base drafts&lt;/a&gt;. The success of these drafts might, however, be overtaken by the need to support an important use case - rate limiting.  Rate limiting can be used to subjugate DDoS type attacks and it can also be used to enforce &lt;em&gt;paywall&lt;/em&gt; type subscription services.  The challenge? Rate limiting necessarily weakens the privacy guarantees that form the basis for Privacy Pass. The Working Group &lt;a href=&#34;https://datatracker.ietf.org/meeting/114/materials/slides-114-privacypass-rate-limited-tokens-slides-v2-00&#34;&gt;is debating&lt;/a&gt; what sort of damage limitation needs to be applied to this degradation in order to keep the value of the idea strong enough to justify the expense of maintaining it while also encouraging trust in the service by users.&lt;/p&gt;

&lt;p&gt;With the HTTP protocol &lt;a href=&#34;https://httpwg.org/specs/&#34;&gt;long defined&lt;/a&gt;, the &lt;a href=&#34;https://datatracker.ietf.org/wg/httpbis/charter/&#34;&gt;HTTPbis Working Group&lt;/a&gt; is chartered to maintain and develop the core specifications as well as extensions to the protocol agreed to be generally useful.  To that end, the Working Group heard four new proposals for extension. Important for privacy are &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-pauly-httpbis-geoip-hint/&#34;&gt;GeoIP&lt;/a&gt; and &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-schinazi-httpbis-transport-auth/&#34;&gt;HTTP Transport Authentication&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GeoIP attempts to address the problem of sharing personal location data, but in a manner that doesn&amp;rsquo;t induce harm or threaten privacy.  The author&amp;rsquo;s idea is to support a location &lt;em&gt;hint&lt;/em&gt;, as an option, on HTTP transactions. They were quickly reminded that IETF has tried to address location privacy for over a decade with nothing to show for it. In the end, however, most participants agreed it was important for IETF to address this area, even if the specific proposal was (tragically?) flawed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-schinazi-httpbis-transport-auth/&#34;&gt;HTTP Transport Authentication&lt;/a&gt; has been revived after a long period of dormancy caused by the work on proxying over HTTP/3 (now almost complete).  Impacted by that proxying work as well as many of the new concepts being developed around &lt;em&gt;oblivious&lt;/em&gt; services (those that don&amp;rsquo;t leak the user&amp;rsquo;s IP address), this proposal has moved away from it&amp;rsquo;s focus on CONNECT tunnel authentication to a proxy server in favor of a general authentication scheme to suit situations in which servers do not want to expose the fact they are hosting authenticated services (&lt;em&gt;silent&lt;/em&gt; or non-probe-able authentication). The Working Group found the concept useful but asked for a number of editorial changes before they would vote to accept it as a work item.  A technical flaw will need to be addressed as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF114 Conference Report: Wednesday July 27, 2022</title>
      <link>https://guardianproject.github.io/info/2022/07/27/ietf114-conference-report-wednesday-july-27-2022/</link>
      <pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/07/27/ietf114-conference-report-wednesday-july-27-2022/</guid>
      <description>&lt;p&gt;*Day Three of the &lt;a href=&#34;https://www.ietf.org/how/meetings/114/&#34;&gt;114th IETF meeting&lt;/a&gt; in Philadelphia USA. For the rundown on Day Two, see my &lt;a href=&#34;https://guardianproject.info/2022/07/26/ietf114-conference-report-tuesday-july-26-2022/&#34;&gt;daily report&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Interest is starting to consolidate on the need for additional definition for serving media over the QUIC transport layer, particularly for streaming and conferencing applications.  Following an informal gathering at IETF113 in March 2022, a formal Birds of Feather session met today with a draft &lt;a href=&#34;https://datatracker.ietf.org/meeting/114/materials/slides-114-moq-moq-charter-proposal-00&#34;&gt;charter proposal&lt;/a&gt; and two draft documents describing the intended &lt;a href=&#34;https://www.ietf.org/id/draft-gruessing-moq-requirements-02.html&#34;&gt;use cases&lt;/a&gt; and a &lt;a href=&#34;https://www.ietf.org/id/draft-jennings-moq-quicr-proto-01.html&#34;&gt;protocol&lt;/a&gt;. &lt;a href=&#34;https://datatracker.ietf.org/meeting/114/materials/slides-114-moq-if-time-permits-quicr-01&#34;&gt;Here&amp;rsquo;s&lt;/a&gt; a more visual overview.  There was broad concensus (at this well-attended session) as to the need for this work, but a split between one camp that sought a much narrower set of use cases (not wanting to &lt;em&gt;boil the Internet&lt;/em&gt; as it were) and another who wanted to &lt;em&gt;solve this problem once&lt;/em&gt;. This will be addressed as the BoF leaders work towards a vote on chartering the effort.  Either way, this is substantial work ahead.  I mention this here not so much in the realm of privacy as to look towards a future where QUIC&amp;rsquo;s efficiency and scalability benefits might make media-rich services available to those of lesser economic means or with mediocre connectivity.&lt;/p&gt;

&lt;p&gt;Directly related to our interests in privacy and a free and open Internet, the MASQUE Working Group presented the status of what will be the last of its core specifications, &lt;a href=&#34;https://www.ietf.org/archive/id/draft-kuehlewind-masque-connect-ip-01.html&#34;&gt;CONNECT-IP&lt;/a&gt;.  With implementations ready for interoperability testing, the protocol definition is being scrubbed for &lt;a href=&#34;https://github.com/ietf-wg-masque/draft-ietf-masque-connect-ip/issues&#34;&gt;burning issues&lt;/a&gt;. Of these, some headway was made at the meeting, though all are still officially under discussion.&lt;/p&gt;

&lt;p&gt;Recall the challenges with actual interoperability testing with CONNECT-IP at the Hackathon last weekend (see &lt;a href=&#34;https://guardianproject.info/2022/07/24/ietf114-hackathon-report-sunday-july-24-2022/&#34;&gt;report&lt;/a&gt;)?  With spec definition work almost complete, the Working Group&amp;rsquo;s mission will also be complete and, officially, put the group in a position to disband.  But those interoperability challenges provide the next raison d&amp;rsquo;être for continuation and, with five proposals already before the group, concensus was that the group leaders should move forward with re-chartering with a new mission which - at least by concensus of those present - will focus on assuring MASQUE is deployable in real-world scenarios. With CONNECT-IP lowest in the protocol stack individual vendors and implementors face vastly different integration scenarios and, in many cases, with quite different teams who have (historically) faced divergent requirements. That said, the demand for proxying IP over QUIC is already huge, with both major mobile device vendors lining up extensive services for their platforms using the MASQUE model.  IETF&amp;rsquo;s implementation-checks-definition model is well-suited to this sort of aggressive development, thankfully.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF114 Conference Report: Tuesday July 26, 2022</title>
      <link>https://guardianproject.github.io/info/2022/07/26/ietf114-conference-report-tuesday-july-26-2022/</link>
      <pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/07/26/ietf114-conference-report-tuesday-july-26-2022/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day Two of the &lt;a href=&#34;https://www.ietf.org/how/meetings/114/&#34;&gt;114th IETF meeting&lt;/a&gt; in Philadelphia USA. For the rundown on Day One, see my &lt;a href=&#34;https://guardianproject.info/2022/07/25/ietf114-conference-report-monday-july-25-2022/&#34;&gt;daily report&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lucas Pardue, of Cloudflare and co-chair of the QUIC Working Group, gave a not-so-tongue-in-cheek &lt;a href=&#34;https://datatracker.ietf.org/meeting/114/materials/slides-114-anrw-sessa-keynote-00&#34;&gt;talk&lt;/a&gt; about the breakdown of the OSI layering model of the Internet. His focus was on the &lt;em&gt;top&lt;/em&gt; of the stack, illustrating handsomely what QUIC and HTTP/3 have done (unknowingly to most) to our perception of layers.  A key challenge: tools for HTTP/1 are widely available and the protocol and its impacts are widely understood.  HTTP/2 and HTTP/3? Not so much (both are binary, not text-based, protocols).  Yet, here in mid-2022, the world of the Internet is predominantly (91%!) HTTP/2 and HTTP/3 traffic.  Similarly, TLS/1.3 and QUIC represent 87% of traffic. And many of the now-being-standardized protocols for privacy insert several layers of proxy into every transaction. From a &lt;em&gt;sound knowledge&lt;/em&gt; perspective, we seem to have taken a rather quick, and rather deep, step backwards.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://datatracker.ietf.org/wg/ohai/about/&#34;&gt;OHAI Working Group&lt;/a&gt; has brought the core draft of &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-ohai-ohttp/&#34;&gt;Oblivious HTTP Application Intermediation&lt;/a&gt; nearly to Working Group Last Call (technical finalization). With multiple interoperable implementations said to exist, this bodes well for rapid completion and standardization. The twistingly-worded name engenders confusion (or distain) but the goal is laudable: make the requester&amp;rsquo;s IP address private in any &lt;em&gt;transactional&lt;/em&gt; HTTP-based protocol. Transactional protocols include DNS and Online Certification Status Protocol. But the dominant imagined use case is &lt;em&gt;telemetry&lt;/em&gt; - monitoring vendor-, application- or operating system-define usage parameters on centralized systems. A few holes remain, however, for services that do not want (or need) to be tightly-coupled (systems that are not, for example, an operating system&amp;rsquo;s fault reporting service).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF114 Conference Report: Monday July 25, 2022</title>
      <link>https://guardianproject.github.io/info/2022/07/25/ietf114-conference-report-monday-july-25-2022/</link>
      <pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/07/25/ietf114-conference-report-monday-july-25-2022/</guid>
      <description>&lt;p&gt;&lt;em&gt;Day One of the &lt;a href=&#34;https://www.ietf.org/how/meetings/114/&#34;&gt;114th IETF meeting&lt;/a&gt; in Philadelphia USA.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With privacy a key consideration in new protocol design, cryptography has become a major focus of IETF activities.  The Internet Research Task Force (IRTF) has the &lt;a href=&#34;https://irtf.org/cfrg&#34;&gt;Crypto Forum Research Group&lt;/a&gt; where new cryptography schemes are brought forward and vetted for use in IETF protocols.  Well, &lt;em&gt;new&lt;/em&gt; is a misnomer. Much of the mathematics has long been defined, at least at its core, and the work is rather being brought into the IETF context where important engineering considerations apply: use of memory (at rest or in flight), processing required, round-trips required, etc.. Of significance at this meeting, mechanisms for &lt;em&gt;blinding&lt;/em&gt; a digitial signature are in high demand given the prevalence of multi-tiered approaches to privacy (that is, approaches that insert one or more proxies between entities in a transaction).  Something similar is in the works for cryptographic keys. A number of IETF protocol specifications, still in development, are in line to receive these mathematical gems including &lt;a href=&#34;https://datatracker.ietf.org/group/privacypass/about/&#34;&gt;Privacy Pass&lt;/a&gt;, &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-private-access-tokens/&#34;&gt;Private Access Tokens&lt;/a&gt;, &lt;a href=&#34;https://datatracker.ietf.org/wg/ohai/charter/&#34;&gt;Oblivious HTTP Application Intermediation&lt;/a&gt; and others.  An excellent summary of the National Institute for Standards and Technology (NIST) &lt;a href=&#34;https://csrc.nist.gov/publications/detail/nistir/8413/final&#34;&gt;Post-Quantum Cryptography &lt;em&gt;contest&lt;/em&gt;&lt;/a&gt; was also provided. The topic itself, let alone the solutions chosen, is not for the weak-kneed.&lt;/p&gt;

&lt;p&gt;Among IETF&amp;rsquo;s most difficult challenges - for those of us interested in privacy - is the massive amount of surveillance that Internet users endure in everyday life.  One problem is simply defining what &lt;em&gt;surveillance&lt;/em&gt; means, in the commercial rather than law enforcement sense. Toward that end, the &lt;a href=&#34;https://datatracker.ietf.org/rg/pearg/about/&#34;&gt;Privacy Enhancements and Assessments Research Group&lt;/a&gt; hosted an excellent &lt;em&gt;first principles&lt;/em&gt; presentation teasing out ideas around &lt;em&gt;decoupling&lt;/em&gt; who we are versus what we do, and specifically architectures and design principles to increase decoupling for the purpose of preserving privacy. IETF has a new Working Group looking at &lt;a href=&#34;https://datatracker.ietf.org/wg/ppm/about/&#34;&gt;Privacy Preserving Measurement&lt;/a&gt; where some of the decoupling ideas are key.  While one approach to privacy preserving measurement has been presented to IETF in the past, PEARG hosted a well-considered survey presentation that looked at a number of techniques in this field at different stages of development. Not considered here: the &lt;a href=&#34;https://cleaninsights.org&#34;&gt;Clean Insights&lt;/a&gt; project, with which Guardian Project is associated and which was perhaps the first to take a user-consent approach, and the &lt;a href=&#34;https://opendp.org&#34;&gt;Open Differential Privacy Project&lt;/a&gt; which seeks to make its tools explicitly transparent for public scrutiny.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF114 Hackathon Report: Sunday July 24, 2022</title>
      <link>https://guardianproject.github.io/info/2022/07/24/ietf114-hackathon-report-sunday-july-24-2022/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/07/24/ietf114-hackathon-report-sunday-july-24-2022/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post begins a daily blog, live from the 114th meeting of the &lt;a href=&#34;https://www.ietf.org/how/meetings/114/&#34;&gt;Internet Engineering Task Force&lt;/a&gt; in Philadelpha Pennsylvania USA, July 23-29, 2022 (in-person meetings having restarted in March 2022 after the COVID pandemic abated). We&amp;rsquo;re focusing on standards activities of importance to the Internet Freedom community.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://www.ietf.org/how/runningcode/hackathons/114-hackathon/&#34;&gt;Hackathon&lt;/a&gt; event kicks off each IETF event, with projects that run the gamut from early implementations of just-emerging specifications to full multi-vendor interoperability testing of nearly-mature protocols. At this event, I sat in on the &lt;a href=&#34;https://datatracker.ietf.org/wg/masque/about/&#34;&gt;MASQUE&lt;/a&gt; team&amp;rsquo;s effort to commence work on the new &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-masque-connect-ip/&#34;&gt;CONNECT-IP&lt;/a&gt; specification. With the recent completion of two key specifications -  &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-masque-connect-udp/&#34;&gt;CONNECT-UDP&lt;/a&gt; and &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-masque-h3-datagram/&#34;&gt;H3 Datagrams&lt;/a&gt; - MASQUE has become IETF&amp;rsquo;s solution for proxying all types of network traffic over QUIC and HTTP/3, including VPN and other privacy-focused scenarios. CONNECT-IP will complete the trio.  But this initial effort didn&amp;rsquo;t go well.  Google and Ericcson (co-authors on the spec) had brought teams who, indeed, implemented the key protocol elements of CONNECT-IP live and in-the-moment but were both stymied setting up testbeds that could deliver raw IP packets for routing by this new code. Wait, you might say, aren&amp;rsquo;t these network engineers?  True, but it was mostly the practicalities that got in the way - only laptops as test machines, working from the open source &lt;a href=&#34;https://github.com/google/quiche&#34;&gt;QUICHE&lt;/a&gt; repository on a machine that also hosts an environment for building production code, even deciding what sort of packets could be used for testing and where to route them. These are the frustrations of a first-ever effort.&lt;/p&gt;

&lt;p&gt;Other teams had much better luck even if they are not specifically focused on privacy.  Fourteen vendors worked together on the first interoperabiltiy test of &lt;em&gt;Low Loss Low Latency Scalable Throughput&lt;/em&gt;, &lt;a href=&#34;https://www.ietf.org/archive/id/draft-ietf-tsvwg-l4s-arch-12.html&#34;&gt;L4S&lt;/a&gt;, an ambitious effort that was ultimately successful (that is, both at functioning at all and producing excellent results). Another team working on the Drone Remote ID Protocol &lt;a href=&#34;https://datatracker.ietf.org/wg/drip/about/&#34;&gt;DRIP&lt;/a&gt; were also successful - despite the lack of hackable drones or access to the key server software this protocol will eventually have to interoperate with &amp;ndash; and produced the first working demonstration of DRIP&amp;rsquo;s session registration protocol (which, it happens, involves almost all aspects of the proposed standard).  These two projects will surely be the hits of the upcoming Hackdemo Happy Hour!&lt;/p&gt;

&lt;p&gt;With the Hackathon complete, IETF turns to the serious business of creating new specifications.  This week&amp;rsquo;s meeting will see working sessions on &lt;a href=&#34;https://datatracker.ietf.org/group/ohai/about/&#34;&gt;Oblivious HTTP Application Intermediation&lt;/a&gt;, &lt;a href=&#34;https://datatracker.ietf.org/wg/privacypass/about/&#34;&gt;Privacy Pass&lt;/a&gt;, &lt;a href=&#34;https://datatracker.ietf.org/wg/mls/charter/&#34;&gt;Messaging Layer Security&lt;/a&gt; and &lt;a href=&#34;https://datatracker.ietf.org/wg/ppm/about/&#34;&gt;Privacy Preserving Measurement&lt;/a&gt; in addition to emerging ideas from the Internet Research Task Force&amp;rsquo;s &lt;a href=&#34;https://datatracker.ietf.org/doc/charter-irtf-pearg/&#34;&gt;Privacy Enhancements and Assessments Research Group&lt;/a&gt;.  And MASQUE, where we&amp;rsquo;ll have some explaining to do about our Hackathon gaff.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF113 Conference Report: Friday March 25, 2022</title>
      <link>https://guardianproject.github.io/info/2022/03/28/ietf113-conference-report-friday-march-25-2022/</link>
      <pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/03/28/ietf113-conference-report-friday-march-25-2022/</guid>
      <description>&lt;p&gt;Final day of the 113th IETF meeting, in Vienna Austria.&lt;/p&gt;

&lt;p&gt;The IETF is looking to make a clear contribution to the problem of hyper-aggressive measurement of user activities on the Internet and the many misuses thereof.  To do so, the IETF recognizes that some measurement is important but that many desirable measurements require data most people consider sensitive.  It also recognizes that aggregated measurements often provide the most value, rather than individual ones.  Yet, today, parties interested in measurement need to collect and store individual records in order to aggregate them, exposing themselves to potential violations of their privacy agreements with users (or governments) and to theft of that data by outsiders.  Instead, IETF is looking at ways this aggregation can be managed in ways that protect user privacy while still providing much of the statistical power needed.  The &lt;a href=&#34;https://datatracker.ietf.org/group/ppm/about/&#34;&gt;Privacy Preserving Measurement Working Group&lt;/a&gt; has formed.&lt;/p&gt;

&lt;p&gt;The IETF&amp;rsquo;s effort centers around new cryptographic techniques that allow an intermediary aggregation service to aggregate measurements in a variety of ways &lt;em&gt;without&lt;/em&gt; learning the individual values themselves, then passing that aggregated information along to &lt;em&gt;collectors&lt;/em&gt; (organizations that use the measurements).  The protocol design will include mechanisms for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Safe submission of individual measurements by the client (potentially including proof of validity)&lt;/li&gt;
&lt;li&gt;Verification of such validity proofs at the &lt;em&gt;aggregator&lt;/em&gt; when provided by the client&lt;/li&gt;
&lt;li&gt;Computation of aggregates at the &lt;em&gt;aggregator&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Reporting of results to the &lt;em&gt;collector&lt;/em&gt; without leaking the individual measurements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Working Group is chartered to deliver one or more protocols that can accommodate multiple privacy-preserving algorithms as necessary.  Two such algorithms are already under consideration - one based on &lt;a href=&#34;https://educatedguesswork.org/posts/ppm-prio/&#34;&gt;Prio&lt;/a&gt; (&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-gpew-priv-ppm/&#34;&gt;Draft&lt;/a&gt;), the other based on &lt;a href=&#34;https://www.ietf.org/staging/draft-dss-star-00.html&#34;&gt;STAR&lt;/a&gt;. The protocol(s) will be designed to limit abuse by both clients and servers (aggregation servers, collector servers), including exposure of individual user measurements and denial of service attacks.&lt;/p&gt;

&lt;p&gt;While this work has the character of &lt;em&gt;seeming&lt;/em&gt; appropriate and necessary, there are many aspects to consider - just in the protocol design, let alone the social and policy implications - that caused attendees to say, to the effect, &amp;ldquo;&lt;em&gt;I&amp;rsquo;m leaving here more confused than when I entered&lt;/em&gt;&amp;rdquo;.  The unique trust model implied, the increased centralization implied, the completeness of the approach (that is, how much measurement it subsumes), the alignment with laws and agreements already in place, the pragmatics around what organizations can run such a service - these are questions yet unaddressed.  But at least now IETF has a solid stake in the ground from which to move forward.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF113 Conference Report: Thursday March 24, 2022</title>
      <link>https://guardianproject.github.io/info/2022/03/27/ietf113-conference-report-thursday-march-24-2022/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/03/27/ietf113-conference-report-thursday-march-24-2022/</guid>
      <description>&lt;p&gt;Day four of the 113th IETF meeting, in Vienna Austria.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/group/privacypass/about/&#34;&gt;Privacy Pass&lt;/a&gt; - originating at Cloudflare in 2017 as a solution to user frustration with CAPTCHA - has been in full swing as an IETF activity since mid-2020.  Privacy Pass allows a client to solve some form of validity check (a CAPTCHA, a puzzle, a user-pass authentication) to then receive some number of tokens to be used at websites accepting Privacy Pass, thus eliminating the need to do a CAPTCHA at each site.  Sites hosted on large CDNs like Cloudflare benefit (Cloudflare provides the service for them) and users get a more convenient experience.  Users accessing the Internet through Tor are even more positively affected since they are most prone to CAPTCHA.  Privacy Pass is now in Version 3 and working to support a multi-issuer environment to provide another uplift to the user experience (tokens can be validated across issuers).  Just prior to this IETF meeting, a standardized mechanism for exchanging Privacy Pass tokens was adopted by the Working Group - &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-privacypass-auth-scheme/&#34;&gt;The Privacy Pass HTTP Authentication Scheme&lt;/a&gt;. Both request and response mechanisms are provided so that use of (or demand for) the token can be either server- or client-initiated. Going forward, it will be interesting to see if Privacy Pass benefits mostly the web browsing environment or finds its way into applications using HTTP as a substrate for richer styles of interaction.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s important to point out that Privacy Pass, in practice, requires relatively-centralized infrastructure (issuers, who grant and redeem tokens).  In fact, the mathematics behind the multi-issuer capability in Version 3 requires that the number of issuers is limited to avoid users being de-anonymized too easily.  A more complete discussion of centralization and Privacy Pass is available &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-mcfadden-pp-centralization-problem-01&#34;&gt;here&lt;/a&gt;.  IETF members have, for some years now, expressed concern about increasing centralization - not only of Internet hardware (which the work of IETF can not in practice impact) but also of the  protocol designs themselves. The Internet Architecture Board has, during its recent Open Meetings, taken on the weight of this discussion, providing a forum for both studies of, and individual views on, the topic.  A formal statement from the group, though, has been harder to achieve.  As an alternative, individual voices have been encouraged, the most recent being former IAB member &lt;a href=&#34;https://datatracker.ietf.org/person/Mark%20Nottingham&#34;&gt;Mark Nottingham&lt;/a&gt; who has produced &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-nottingham-avoiding-internet-centralization/&#34;&gt;&lt;em&gt;Centralization and Internet Standards&lt;/em&gt;&lt;/a&gt; that tries to define the problem in ways that can eventually be addressed within the IETF.&lt;/p&gt;

&lt;p&gt;Though it seems like very early days here, I&amp;rsquo;m encouraged both that discussions are vocal and pubic, and that more &lt;em&gt;human-centric&lt;/em&gt; voices are now present at IETF who have been working &lt;em&gt;within the system&lt;/em&gt; to provide tools and guidelines that can inform protocol design in ways that maybe, just maybe, will pull us back from the edge.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF113 Conference Report: Wednesday March 23, 2022</title>
      <link>https://guardianproject.github.io/info/2022/03/26/ietf113-conference-report-wednesday-march-23-2022/</link>
      <pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/03/26/ietf113-conference-report-wednesday-march-23-2022/</guid>
      <description>&lt;p&gt;Day three of the 113th IETF meeting, in Vienna Austria.&lt;/p&gt;

&lt;p&gt;Messaging Layer Security (&lt;a href=&#34;https://datatracker.ietf.org/wg/mls/about/&#34;&gt;MLS&lt;/a&gt;) is (finally) closing in on &lt;a href=&#34;https://www.ietf.org/about/glossary/?query=wglc&#34;&gt;Last Call&lt;/a&gt; at protocol Draft 14 and architecture Draft 7 (which will be taken forward together). Sometimes referred to as the &lt;em&gt;TLS for messaging systems&lt;/em&gt;, Messaging Layer Security creates a uniform secure group discussion protocol, scalable to very large groups and providing similarly uniform security guarantees across providers. The near completion of the architecture and protocol drafts, and commencement of interoperability testing has prompted the Working Group to dust off the &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ietf-mls-federation&#34;&gt;Federation draft&lt;/a&gt; as the next object of their affection.  Will I be able to connect my &lt;a href=&#34;https://wire.com/en/&#34;&gt;Wire&lt;/a&gt; client to the &lt;a href=&#34;https://www.messenger.com/&#34;&gt;Facebook Messenger&lt;/a&gt; server? Don&amp;rsquo;t hold your breath, but in the meantime you&amp;rsquo;ll be able to enjoy the manifest benefits of secure group chat (with security guarantees as high as the industry knows how to produce) on your own network.&lt;/p&gt;

&lt;p&gt;Oblivious HTTP Application Intermediation (&lt;a href=&#34;https://datatracker.ietf.org/wg/ohai/charter/&#34;&gt;OHAI&lt;/a&gt;) is another in the suite of new designs aimed at reducing misuse of the client&amp;rsquo;s IP address.  OHAI is complementary to &lt;a href=&#34;https://datatracker.ietf.org/wg/masque/about/&#34;&gt;MASQUE&lt;/a&gt; - the former focused on &lt;em&gt;transactional&lt;/em&gt; service protocols like DNS and &lt;a href=&#34;https://datatracker.ietf.org/doc/rfc8954/&#34;&gt;OCSP&lt;/a&gt; queries, the latter on fully bi-directional interactive exchanges.  Like MASQUE, proxies are involved (between requester and request destination) and in both cases the client (user) has to trust the proxy.  However, in the case of bad-actor clients, it is imagined that the proxy will want to communicate on a side channel with its counterpart to stop things like reply attacks or other mischief via &lt;em&gt;shadow banning&lt;/em&gt;.  This, however, raises the spectre of collusion among the intermediaries - something OHAI was initially defined to avoid.  There seems to be significant effort remaining on this proposal.&lt;/p&gt;

&lt;p&gt;As mentioned in the prior post, the Human Rights Protocol Considerations(&lt;a href=&#34;https://sandbox-ng.ietf.org/group/hrpc/documents/&#34;&gt;HRPC&lt;/a&gt;) Research Group considered a new Individual Contribution on &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-giuliano-blocking-considerations/&#34;&gt;Regional Internet Blocking Considerations&lt;/a&gt;. While the current geopolitical environment was the impetus for this work, the content isn&amp;rsquo;t specific to a particular event. Rather, it catalogs - for policy makers - the technical mechanisms available to &lt;em&gt;withdraw&lt;/em&gt; geographic areas from connection to the global network, effectively &lt;em&gt;de-mystifying&lt;/em&gt; the concept.  Also via HRPC, the IETF got its first look at the idea of &lt;em&gt;content provenance&lt;/em&gt; in the work of the &lt;a href=&#34;https://c2pa.org&#34;&gt;Coalition for Content Provenance and Authenticity&lt;/a&gt; and their efforts to create &lt;a href=&#34;https://c2pa.org/specifications/specifications/1.0/specs/C2PA_Specification.html&#34;&gt;specifications&lt;/a&gt; around this idea.  Guardian Project&amp;rsquo;s pioneering &lt;a href=&#34;https://proofmode.org/about&#34;&gt;ProofMode&lt;/a&gt; work got a shout out!  Of special importance here, and perhaps more significance to IETF than the &lt;em&gt;data at rest&lt;/em&gt; work of the specification itself, are its generally-applicable definitions in the area of &lt;em&gt;Harms Modelling&lt;/em&gt;, readapted from work by &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/architecture/guide/responsible-innovation/harms-modeling/&#34;&gt;Microsoft&lt;/a&gt;. This concept is core to HRPC&amp;rsquo;s research mission as defined in &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc8280&#34;&gt;rfc8280&lt;/a&gt; and this is the most rigor I&amp;rsquo;ve seen in defining the concept in ways that can have protocol impact.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF113 Conference Report: Tuesday March 22, 2022</title>
      <link>https://guardianproject.github.io/info/2022/03/24/ietf113-conference-report-tuesday-march-22-2022/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/03/24/ietf113-conference-report-tuesday-march-22-2022/</guid>
      <description>&lt;p&gt;Day two of the &lt;a href=&#34;https://www.ietf.org/how/meetings/113/&#34;&gt;113th IETF meeting&lt;/a&gt;, in Vienna Austria.  The crisis in Ukraine is on everyone&amp;rsquo;s mind, lending immediacy to the work of the Global Access to the Internet for All (GAIA) Research Group. While past and continuing work has focused on Internet access for the world&amp;rsquo;s population (especially those disadvantaged by economics, distance, mobility, and social constraints) the situation in Ukraine resulting from military activities give cause for both concern and hope.  While communications access points have been obviously targeted, the inherently decentralized topology of the Internet infrastructure in Ukraine has afforded surprising resiliency, increased by the willingness of nominal competitors to patch the communication systems back together for the good of all.  Few will remember that this resiliency from military attack was the raison d&amp;rsquo;être for ARPANet, predecessor to the Internet.  Perhaps, in this era of increasing centralization (hardware and software), the crisis in Ukraine will give us the impetus to consider changes to the trajectory of consolidation we&amp;rsquo;ve allowed to occur. We&amp;rsquo;ll follow up on this topic tomorrow after the Human Rights Protocol Considerations (HRPC) Research Group who will take up the topic of Regional Internet Blocking.&lt;/p&gt;

&lt;p&gt;Another important consideration from today&amp;rsquo;s GAIA presentations: the environmental impact of decisions we make about the architecture of the Internet.  While it&amp;rsquo;s easy to trash cryptocurrency for its unfathomable consumption of electricity (live dashboard &lt;a href=&#34;https://ccaf.io/cbeci/index&#34;&gt;here&lt;/a&gt;), it&amp;rsquo;s almost certainly necessary to think about these same considerations in the work of the IETF, impacting as it does, billions of people on a daily basis.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF113 Conference Report: Monday March 21, 2022</title>
      <link>https://guardianproject.github.io/info/2022/03/21/ietf113-conference-report-monday-march-21-2022/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/03/21/ietf113-conference-report-monday-march-21-2022/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s opening day at the &lt;a href=&#34;https://www.ietf.org/how/meetings/113/&#34;&gt;113th IETF meeting&lt;/a&gt;, the first in-person meeting in two years due to the COVID pandemic and being held in Vienna Austria. We&amp;rsquo;re focusing on standards activities of importance to the Internet Freedom community.&lt;/p&gt;

&lt;p&gt;New work is brought to the IETF via Birds-of-a-Feature sessions and also each technical area&amp;rsquo;s Dispatch Working Group.  The Application area often sees the most unique and interesting ideas and this meeting was no exception.  The &lt;a href=&#34;https://openethics.ai/&#34;&gt;Open Ethics Initiative&lt;/a&gt; introduced its idea for an &lt;em&gt;ethics disclosure&lt;/em&gt; or &lt;a href=&#34;https://openethics.ai/oetp/&#34;&gt;transparency protocol&lt;/a&gt; to help promote trust among users and service providers in a way similar to nutrition labelling on foods.  Two &lt;a href=&#34;https://www.ietf.org/archive/id/draft-mahy-dispatch-immi-content-00.html&#34;&gt;new&lt;/a&gt; &lt;a href=&#34;https://www.ietf.org/archive/id/draft-mahy-dispatch-immi-mls-mime-00.html&#34;&gt;drafts&lt;/a&gt; have been written related to the format of data exchange among messaging services. I know what you&amp;rsquo;re thinking: &amp;ldquo;but messaging services don&amp;rsquo;t interoperate&amp;rdquo;.  Exactly. These drafts are a push to get that to happen, initially in the context of the Messaging Layer Security (&lt;a href=&#34;https://datatracker.ietf.org/wg/mls/about/&#34;&gt;MLS&lt;/a&gt;) effort.  Along the same lines, a plea was made to liberate messaging from the confines of the encapsulating (and in some cases proprietary) protocols, to be used as first-class network transactions on their own via the &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-spinella-event-streaming-open-network/&#34;&gt;Event Streaming Open Network&lt;/a&gt;. And, the team doing Encrypted Client Hello (&lt;a href=&#34;https://tools.ietf.org/id/draft-ietf-tls-esni-13.html&#34;&gt;ECH&lt;/a&gt;) introduced an idea to &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-farrell-tls-wkesni/&#34;&gt;liberate ECH&amp;rsquo;s host configuration information from the DNS&lt;/a&gt; to which some folks believe it is inextricably bound.  Well, they didn&amp;rsquo;t present it &lt;em&gt;quite&lt;/em&gt; that way, but&amp;hellip; Liberation was the theme of the event, it seems!&lt;/p&gt;

&lt;p&gt;The Privacy Enhancements and Assessments Research Group (&lt;a href=&#34;https://pearg.org&#34;&gt;PEARG&lt;/a&gt;) had a detailed presentation on the EU&amp;rsquo;s General Data Protection Regulation (&lt;a href=&#34;https://gdpr.eu&#34;&gt;GDPR&lt;/a&gt;) as it relates to network privacy. It&amp;rsquo;s much richer than I imagined, indicating there&amp;rsquo;s a lot more there in terms of enforcement in the future. The long-incubating &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-irtf-pearg-censorship/&#34;&gt;A Survey of Worldwide Censorship Techniques&lt;/a&gt; seems to be near &lt;em&gt;last call&lt;/em&gt; in its Version 5.  The difficulty of getting it published has as much to do with hesitancy around the term &lt;em&gt;censorship&lt;/em&gt; as with the actual content.&lt;/p&gt;

&lt;p&gt;The major news today, however, is that the &lt;a href=&#34;https://datatracker.ietf.org/wg/masque/documents/&#34;&gt;MASQUE Working Group&lt;/a&gt;, whose charter is to develop mechanisms that allow configuring and concurrently running multiple proxied stream- and datagram-based flows inside an HTTPS connection, is coming to closure on &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ietf-masque-connect-udp&#34;&gt;CONNECT_UDP&lt;/a&gt; and &lt;a href=&#34;https://www.ietf.org/id/draft-ietf-masque-h3-datagram-06.html&#34;&gt;HTTP Datagrams&lt;/a&gt; while &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-masque-connect-ip/&#34;&gt;CONNECT_IP&lt;/a&gt; has a few more issues to sort out.  Though QUIC and HTTP/3 are the focus of this work, these changes are being defined for HTTP/2 and HTTP/1.1 as well, implying the medium-term availability of robust proxying options in the Internet&amp;rsquo;s service hubs.  As we mentioned in yesterday&amp;rsquo;s post, &lt;a href=&#34;https://www.ietf.org/archive/id/draft-schinazi-httpbis-transport-auth-05.html&#34;&gt;HTTP Transport Authentication&lt;/a&gt; is an idea for privately authenticating these flows.  We hope this work gets picked up again upon completion of these three initial efforts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IETF113 Hackathon Project</title>
      <link>https://guardianproject.github.io/info/2022/03/20/ietf113-hackathon-project/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2022/03/20/ietf113-hackathon-project/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post begins a daily blog, live from IETF113 in Vienna Austria, March 19-25, 2022 (first in-person meeting after six remote-only meetings during the COVID pandemic).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://www.ietf.org/how/runningcode/hackathons/113-hackathon/&#34;&gt;Hackathon&lt;/a&gt; event kicks off IETF and, at this meeting,  we picked up work originally done by one of our teammates implementing version 5 of &lt;a href=&#34;https://www.ietf.org/archive/id/draft-schinazi-httpbis-transport-auth-05.html&#34;&gt;Internet Draft HTTP Transport Authentication&lt;/a&gt;. &lt;em&gt;HTTP Transport Authentication&lt;/em&gt; is designed to authenticate such protocol flows in a manner that does not reveal any information to an attacker during failure cases.  Therefore, applications using &lt;em&gt;HTTP Transport Authentication&lt;/em&gt; are resistant to active probing by network adversaries.&lt;/p&gt;

&lt;p&gt;We got the original code running in Google Conscrypt (TLS for Java/Android), verified its function (as defined in the Internet Draft) and created a public open source repository with a demonstration capability. We presented the work to Hackathon attendees (~50 people) and discussed the work with the specification’s author.&lt;/p&gt;

&lt;p&gt;Here’s the specification for HTTP Transport Authentication &lt;a href=&#34;https://www.ietf.org/archive/id/draft-schinazi-httpbis-transport-auth-05.html&#34;&gt;Internet Draft&lt;/a&gt;.  Here’s our  implementation &lt;a href=&#34;https://github.com/guardianproject/HTTPTransportAuthentication&#34;&gt;repository&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian over HTTPS</title>
      <link>https://guardianproject.github.io/info/2021/12/08/debian-over-https/</link>
      <pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2021/12/08/debian-over-https/</guid>
      <description>

&lt;p&gt;Debian&amp;rsquo;s package manager &lt;a href=&#34;https://wiki.debian.org/SecureApt&#34;&gt;&lt;em&gt;apt&lt;/em&gt;&lt;/a&gt; has a
time-tested method of securely providing packages from the network built on
OpenPGP signatures.  Even though this signing method works well for verifying
the indexes and package files, there are new threats that have become relevant
as man-in-the-middle attacks and data mining become ever easier.  Since 2013,
&lt;em&gt;apt&lt;/em&gt; developers have supported encrypted transport methods HTTPS and Tor Onion
Service.  We have been &lt;a href=&#34;https://guardianproject.github.io/info/2016/07/31/howto-get-all-your-debian-packages-via-tor-onion-services/&#34;&gt;recommending&lt;/a&gt; &lt;a href=&#34;https://guardianproject.github.io/info/2019/01/23/use-onions/https-for-software-updates/&#34;&gt;their&lt;/a&gt; &lt;a href=&#34;https://guardianproject.github.io/info/2014/10/16/reducing-metadata-leakage-from-software-updates/&#34;&gt;use&lt;/a&gt; since &lt;a href=&#34;https://guardianproject.github.io/info/2013/10/31/issues-when-distributing-software/&#34;&gt;2013&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most major mirrors already support HTTPS, and now &lt;a href=&#34;https://security.debian.org&#34;&gt;https://security.debian.org&lt;/a&gt;
has finally joined the party.  That means it is possible to use HTTPS on all of
the official repositories.  On top of that, many Debian Developers are working
on making &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=992692&#34;&gt;HTTPS the
default&lt;/a&gt; for new
installs.&lt;/p&gt;

&lt;h2 id=&#34;the-threats&#34;&gt;The threats&lt;/h2&gt;

&lt;p&gt;Now is a good time to reiterate the areas of concern:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Package authenticity (software can be modified while being downloaded).&lt;/li&gt;
&lt;li&gt;Repository availability (whole sites or specific URL paths can be selectively
blocked by the network).&lt;/li&gt;
&lt;li&gt;Package availability (software security updates can be individually blocked).&lt;/li&gt;
&lt;li&gt;Who is downloading what package (currently visible to anyone who can see the
network traffic, including open wifi, etc.).&lt;/li&gt;
&lt;li&gt;Vulnerabilities in &lt;em&gt;apt&lt;/em&gt; or its signature validation (&lt;em&gt;apt&lt;/em&gt; can be
exploited, authenticity checks can be bypassed).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The current &lt;em&gt;apt&lt;/em&gt; model with HTTP covers #1 well, but only covers #2 and #3 with
a one week window (the &lt;code&gt;Valid-Until&lt;/code&gt; header sets the expiration date on the repo
metadata).  That gives attackers a short-term window where blocking and replay
attacks remain effective.  The And it does not cover #4 or #5 at all.&lt;/p&gt;

&lt;p&gt;Using HTTPS adds a weak backup security layer for #1.  HTTPS makes it much more
difficult for certain files from a mirror to be selectively blocked or replayed,
as well as making related errors louder and earlier (e.g. #2 and #3).  Tracking
package downloads needs only simple passive listening with HTTP, but with HTTPS,
the attacker must build full indexes of package sizes, then parse the size from
TLS streams.  So HTTPS helps a little with #4.  Lastly,
&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1829&#34;&gt;there&lt;/a&gt;
&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1358&#34;&gt;have&lt;/a&gt;
&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-3587&#34;&gt;been&lt;/a&gt;
&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3462&#34;&gt;bugs&lt;/a&gt;
&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-1252&#34;&gt;in&lt;/a&gt;
&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0501&#34;&gt;&lt;em&gt;apt&lt;/em&gt;&amp;rsquo;s&lt;/a&gt; GPG
verification.  With HTTP, any network can inject exploits into &lt;em&gt;apt&lt;/em&gt;&amp;rsquo;s
downloads.  HTTPS helps with #5 by providing a backup layer of encryption,
albeit weaker.&lt;/p&gt;

&lt;p&gt;It is of course important to point out that HTTPS itself has flaws, and it is
not the best option out there, especially for protecting anonymity.  HTTPS is
quite easy to use for &lt;em&gt;apt&lt;/em&gt; repositories, so there is hardly any trade-off to
using it.  That is why it is the focus of this post.  If protecting privacy is
important to you, you should use the &lt;a href=&#34;https://onion.debian.org&#34;&gt;Tor Onion Service
repositories&lt;/a&gt;, especially if #4 and #5 concern you.&lt;/p&gt;

&lt;h2 id=&#34;the-risks-of-adding-https&#34;&gt;The risks of adding HTTPS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The only security critique of using HTTPS for repositories that still makes
sense is that there might be vulnerabilities in the code that handles HTTPS,
since its a lot more complicated that HTTP.  In &lt;em&gt;apt&lt;/em&gt;, HTTPS requires GnuTLS,
which is currently linked in by default.  In order to fully protect against
exploits related to the HTTPS code, the machine would need to use a custom build
of &lt;em&gt;apt&lt;/em&gt; with GnuTLS support not included.  It is possible to limit exposure of
the HTTPS implementation by setting &lt;code&gt;Acquire::AllowTLS false&lt;/code&gt;.  This kind of
attack seems to be theoretical as of the time of writing, whereas there are at
least 6 CVEs related to exploiting the GPG verification.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Using HTTPS makes using caching proxies much harder to setup.  Caching proxies
can reduce the leakage of metadata about which machine is getting which package,
so using direct HTTPS connections would therefore increase the leakage of that
kind of metadata.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-that-can-be-improved&#34;&gt;Things that can be improved&lt;/h2&gt;

&lt;p&gt;There are some additional bits of metadata that can be protected when using
HTTPS, thereby further improving the privacy protections in &lt;em&gt;apt&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;With &lt;a href=&#34;https://www.gnutls.org/manual/gnutls.html#On-Record-Padding&#34;&gt;TLSv1.3 Record
Padding&lt;/a&gt;, TLS
streams &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1001335&#34;&gt;can be
padded&lt;/a&gt;, which
would obscure the size of the packages being downloaded from network
observers.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Pipelining downloads through a reused HTTPS connection makes it even more
difficult for the network observer to track packages by size.&lt;/del&gt; Update
2021-12-09: It turns out that &lt;em&gt;apt&lt;/em&gt; is
&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1001335#10&#34;&gt;already&lt;/a&gt;
&lt;a href=&#34;https://salsa.debian.org/apt-team/apt/commit/895417ef99bb1371d8970da1afe87c6d64382f67&#34;&gt;pipelining&lt;/a&gt;
requests by default, so that can be crossed off the list of things to be
improved.&lt;/li&gt;
&lt;li&gt;The Server Name Indication (SNI) field in TLS will leak the domain name in
plaintext.  The upcoming TLS Encrypted Client Hello standard will encrypt that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The SNI field issue does not exist when using Tor Onion Services.  Package
sizes would still be visible to network observers when using Onion Services, so
TLS padding and pipelining would help there also.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implementing TLS Encrypted Client Hello</title>
      <link>https://guardianproject.github.io/info/2021/11/30/implementing-tls-encrypted-client-hello/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2021/11/30/implementing-tls-encrypted-client-hello/</guid>
      <description>

&lt;p&gt;As part of the &lt;a href=&#34;https://defo.ie/&#34;&gt;DEfO&lt;/a&gt; project, we have been working on
accelerating the development &lt;a href=&#34;https://www.ietf.org/archive/id/draft-ietf-tls-esni-13.html&#34;&gt;Encrypted Client Hello
(ECH)&lt;/a&gt; as
standardized by the IETF.  ECH is the next step in improving Transport Layer
Security (TLS).  TLS is one of the basic building blocks of the internet, it is
what puts the S in HTTPS.  The ECH standard is nearing completion.  That is
exciting because ECH can encrypt the last plaintext TLS metadata that it is
possible to encrypt.  So ECH will bring some real improvements in privacy and
censorship resistance.&lt;/p&gt;

&lt;p&gt;ECH is built on top of TLSv1.3 and &lt;a href=&#34;https://blog.cloudflare.com/handshake-encryption-endgame-an-ech-update/&#34;&gt;completes unfinished
work&lt;/a&gt;
from the TLSv1.3 effort, now that private DNS is a thing. ECH is now in draft-13
and there are many implementations that are interoperating. ECH is working for
&lt;a href=&#34;https://github.com/sftcd/openssl&#34;&gt;OpenSSL&lt;/a&gt;, &lt;a href=&#34;https://bugs.chromium.org/p/boringssl/issues/detail?id=275&#34;&gt;BoringSSL&lt;/a&gt;, &lt;a href=&#34;https://github.com/sftcd/nginx&#34;&gt;nginx&lt;/a&gt;, &lt;a href=&#34;https://github.com/sftcd/httpd&#34;&gt;Apache HTTPD&lt;/a&gt;, &lt;a href=&#34;https://github.com/sftcd/lighttpd1.4&#34;&gt;lighttpd&lt;/a&gt;,
&lt;a href=&#34;https://github.com/sftcd/haproxy/commits/ECH-experimental&#34;&gt;HAProxy&lt;/a&gt;, &lt;a href=&#34;https://github.com/guardianproject/conscrypt/tree/2.6.alpha1638179154.job1828169525&#34;&gt;Conscrypt&lt;/a&gt;, &lt;a href=&#34;https://github.com/niallor/curl&#34;&gt;curl&lt;/a&gt;, and more. There is work underway in &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1725938&#34;&gt;Firefox&lt;/a&gt;
and &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=1091403&#34;&gt;Chromium&lt;/a&gt;. It has been sketched out for &lt;a href=&#34;https://github.com/square/okhttp/issues/6539&#34;&gt;OkHTTP&lt;/a&gt;. Draft versions of ESNI
and ECH have been deployed in Firefox releases and some production web services.&lt;/p&gt;

&lt;p&gt;The main downside of ECH is that it is
&lt;a href=&#34;https://defo.ie/report.html#issuesarising&#34;&gt;complex&lt;/a&gt;, and most of that is
unavoidable.  Large scale websites have complicated server-side setups, and ECH
has to work in those setups.  That is where ECH&amp;rsquo;s complexity comes from.  &lt;a href=&#34;https://www.ietf.org/archive/id/draft-ietf-dnsop-svcb-https-07.html&#34;&gt;DNS
SVCB and HTTPS RR
Types&lt;/a&gt; is a
related standard to encapsulate the complexity of large scale websites a single
DNS lookup.  It adds additional complexity since it might include the TCP port
number for the service, while TLS implementations mostly assume that the port
number is known before doing a DNS lookup.&lt;/p&gt;

&lt;p&gt;ECH was formerly known as Encrypted SNI (ESNI), which it replaces.  So do not
expect updates to ESNI unless ECH proves too complicated for implementers. ECH
is more complex to implement in the TLS library than ESNI.  Once it is
implemented in the TLS library, then implementing the next level of managing the
keys and hostnames is quite similar between ESNI and ECH.  The rest of this post
will be diving into details about that complexity and what it takes to implement
ECH.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;do-not-stick-out.jpg&#34; alt=&#34;Do Not Stick Out&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;do-not-stick-out&#34;&gt;Do Not Stick Out&lt;/h2&gt;

&lt;p&gt;ECH implementers must also work to ensure that their implementation does not
create packets that look &lt;a href=&#34;https://www.ietf.org/archive/id/draft-ietf-tls-esni-13.html#name-do-not-stick-out&#34;&gt;look
different&lt;/a&gt;
than other implementations.  How ECH is implemented will affect
fingerprintability.  Right now, BoringSSL, OpenSSL, and Firefox all put the ECH
extension in different places, so it is easy for a network observer to tell
which of them is serving as the client in a TLS session.  Ideally, all
implementations would create network packages that look identical to the network
observer.  To get an idea of this problem in the real world, see &lt;a href=&#34;https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/snowflake/-/issues/40014&#34;&gt;this detailed
technical
discussion&lt;/a&gt;
of metadata ordering in DTLS as used in WebRTC.&lt;/p&gt;

&lt;h2 id=&#34;getting-the-keys&#34;&gt;Getting the keys&lt;/h2&gt;

&lt;p&gt;ECH encrypts the first stage of the negotiation between the client and server,
the &lt;em&gt;ClientHello&lt;/em&gt; packet using a new type of key and related configuration.
This is known as an &amp;ldquo;ECH Config&amp;rdquo;.  This negotiation is what sets up the
encrypted TLS connection, so to encrypt the negotiation, so the keys can not be
derived from the certificates and negotiation itself.  ECH also needs new
methods distributing this ECH Config.  HTTPS/SVCB therefore includes ECH Config Lists,
and DNS is the recommended way to get ECH Config Lists.  Other distribution
methods are also possible, and ECH implementation should provide a method to
directly supply ECH Config Lists.&lt;/p&gt;

&lt;p&gt;When using ECH in conjunction with HTTPS/SVCB, the DNS needs to be handled differently
than the common, decades old practices that most TLS stacks are built on.  The
ECH Config List must match the IP address so that multi-CDN setups still work.
That ensures the server gets the ECH Config that matches its ECH private keys,
not the one for a separate server.  If the A/AAAA lookup is done separately from
the HTTPS/SVCB lookup, they might not match since the results could come from
different caches, etc.  It is not yet clear where the right place to handle that
DNS is, but it is clear that clients that implement HTTPS/SVCB and ECH will need to
consider that DNS will touch different parts of the stack.&lt;/p&gt;

&lt;p&gt;Which part of the stack will handle the HTTPS/SVCB look up depends on whether
the code is acting as a library or more as the client itself.  For example,
libraries like OkHTTP or Conscrypt can both act as a TLS library, providing the
blocks for implementing TLS in an app.  They can also act as the TLS client
itself, the app just needs to open the hostname and port to get a connection.
This is especially true for OkHTTP, which can also handle DNS itself with its
own DNS-over-HTTPS implementation.  Most apps will expect to just open a URL and
have it work without providing anything else.  In the case of HTTP libraries
like OkHTTP or Volley, Conscrypt becomes the provider of TLS functions rather
than the client.  OkHTTP&amp;rsquo;s default setup will probably want to treat Conscrypt
like the client and do zero config.  But there are use cases where apps want to
handle DNS in OkHTTP, in that case Conscrypt is a library.  Another way this
could be broken down would be to have Conscrypt only be the TLS library, then
leave the DNS to the HTTP stacks.  Then each HTTP library would have to have
their own ECH and HTTPS/SVCB handling (In Android, that would mean
&lt;tt&gt;HttpURLConnection&lt;/tt&gt;, OkHTTP, Volley, Apache HTTP Client, etc).  Python
provides another example with HTTP libraries like &lt;a href=&#34;https://github.com/psf/requests/issues/5972&#34;&gt;Requests&lt;/a&gt; working in
combination with the core &lt;a href=&#34;https://bugs.python.org/issue45567&#34;&gt;&lt;tt&gt;ssl&lt;/tt&gt;&lt;/a&gt; module.&lt;/p&gt;

&lt;p&gt;One thing that is clear here: whichever piece initiates the HTTPS/SVCB DNS query
should also handle the ECH Config, and setting up the lower levels.  On top of
this, ECH has GREASE and &amp;ldquo;Retry Configs&amp;rdquo;.  GREASE is a key part of ensuring that
ECH connections do not stick out.  GREASE makes the network observer see TLS
packets that look the same as connections that successfully used an ECH Config
to encrypt.  Retry Configs are sent by the server if it cannot decrypt what the
client sent.  Whichever piece of the code handles the ECH Config List should
then also handle GREASE and the Retry Configs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.cloudflare.com/encrypted-client-hello/&#34;&gt;&lt;img src=&#34;tls-ech-negotiation.png&#34; alt=&#34;TLS ECH Negotiation&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;outer-and-inner-clienthello&#34;&gt;Outer and Inner &lt;em&gt;ClientHello&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;This post began by saying that ECH was complex.  Most of that complexity stems
from the concept of &lt;em&gt;ClientHelloOuter&lt;/em&gt; and &lt;em&gt;ClientHelloInner&lt;/em&gt;.  They are sort of
parallel versions of the TLS &lt;em&gt;ClientHello&lt;/em&gt;, with &lt;em&gt;ClientHelloOuter&lt;/em&gt; being
plaintext and &lt;em&gt;ClientHelloInner&lt;/em&gt; being encrypted.  Many of the same bits of
metadata can be set in either &lt;em&gt;ClientHelloOuter&lt;/em&gt; or &lt;em&gt;ClientHelloInner&lt;/em&gt;, or even
in both.  And the outer and inner values can be different.  For example, the
outer plaintext SNI could be set to a generic domain name, while the inner could
be set to a different domain name that the client wants to protect.  Whenever
the client needs to manage what is set in &amp;ldquo;inner&amp;rdquo;, &amp;ldquo;outer&amp;rdquo;, etc., then extra
complexity is exposed all the way up to the app using the ECH client.  Also, so
many possible configuration options also means so many ways that the negotiation
might fail.&lt;/p&gt;

&lt;p&gt;BoringSSL&amp;rsquo;s &lt;code&gt;SSL_set1_ech_config_list()&lt;/code&gt; provides a good example of this complexity:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If a supported ECHConfig is found, &lt;tt&gt;ssl&lt;/tt&gt; will encrypt the true
ClientHello parameters. If the server cannot decrypt it, e.g. due to a key
mismatch, ECH has a recovery flow. &lt;tt&gt;ssl&lt;/tt&gt; will handshake using the
cleartext parameters, including a public name in the ECHConfig. If using
&lt;tt&gt;SSL_CTX_set_custom_verify&lt;/tt&gt;, callers should use
&lt;tt&gt;SSL_get0_ech_name_override&lt;/tt&gt; to verify the certificate with the public
name. If using the built-in verifier, the &lt;tt&gt;X509_STORE_CTX&lt;/tt&gt; will be
configured automatically.&lt;/p&gt;

&lt;p&gt;If no other errors are found in this handshake, it will fail with
&lt;tt&gt;SSL_R_ECH_REJECTED&lt;/tt&gt;. Since it didn&amp;rsquo;t use the true parameters, the
connection cannot be used for application data. Instead, callers should handle
this error by calling &lt;tt&gt;SSL_get0_ech_retry_configs&lt;/tt&gt; and retrying the
connection with updated ECH parameters. If the retry also fails with
&lt;tt&gt;SSL_R_ECH_REJECTED&lt;/tt&gt;, the caller should report a connection failure.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;a-walk-through-which-pieces-needs-to-do-what&#34;&gt;A walk through which pieces needs to do what&lt;/h2&gt;

&lt;p&gt;Let us return to the Python example to go through the pieces needed to implement
ECH there.  Starting at the lowest level, the Python &lt;tt&gt;ssl&lt;/tt&gt; is built on
top of OpenSSL, so the new ECH functions in OpenSSL need to be included and
exposed in &lt;tt&gt;ssl&lt;/tt&gt;&amp;rsquo;s API.  Unlike with a plain TLSv1.3 connection,
&lt;tt&gt;ssl&lt;/tt&gt; would not set up an ECH connection without additional configuration
as long as &lt;tt&gt;ssl&lt;/tt&gt; does not include the additional DNS requirements needed
to fetch the ECH Config.  The DNS could instead be implemented in the HTTP
library.  Requests is built on top of urllib3, so urllib3 could implement
HTTPS/SVCB handling.  Then Requests would automatically get ECH connections.
Since it can be necessary to handle the ECH Config outside of DNS, urllib3 and
Requests could provide methods for the app to submit the ECH Config.  This would
mean overriding any HTTPS/SVCB handling in Requests and urllib3.&lt;/p&gt;

&lt;p&gt;Based on this outline, these are the pieces that need to be implemented:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS/SVCB DNS queries for getting ECH Config Lists, IP, and other config.&lt;/li&gt;
&lt;li&gt;A way to provide ECH Config Lists as bytes directly to the &lt;tt&gt;ssl&lt;/tt&gt; module.&lt;/li&gt;
&lt;li&gt;A method to ensure encrypted DNS is used so all metadata is encrypted.&lt;/li&gt;
&lt;li&gt;A method to enable and disable GREASE, ideally with GREASE default on.&lt;/li&gt;
&lt;li&gt;A callback that gets called whenever ECH negotiation fails and the server
offers a &amp;ldquo;Retry Config&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Potentially also controls of what to send in the &lt;em&gt;ClientHelloOuter&lt;/em&gt; versus the
&lt;em&gt;ClientHelloInner&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the point of view of the client implementation, there is a big difference
between TLS before and after ECH.  This new complexity may look scary but this
is a clear path to providing strong privacy protections with TLS that can be as
widely deployed as TLSv1.3 is now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New insights into clean analytics</title>
      <link>https://guardianproject.github.io/info/2021/03/02/new-insights-into-clean-analytics/</link>
      <pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2021/03/02/new-insights-into-clean-analytics/</guid>
      <description>

&lt;p&gt;There is a giant problem with the &amp;ldquo;collect it all&amp;rdquo; status quo that pervades on the Internet, this has been clear for a long time.  Tracking people has become so &lt;a href=&#34;https://www.ghostery.com/study/&#34;&gt;widespread&lt;/a&gt; that &lt;a href=&#34;https://noyb.eu&#34;&gt;organizations&lt;/a&gt;, &lt;a href=&#34;https://f-droid.org&#34;&gt;communities&lt;/a&gt;, &lt;a href=&#34;https://exodus-privacy.eu.org&#34;&gt;projects&lt;/a&gt; and &lt;a href=&#34;https://privacylab.yale.edu/&#34;&gt;university&lt;/a&gt; &lt;a href=&#34;https://privacylab.at&#34;&gt;labs&lt;/a&gt; have sprung up dedicated to detecting and publicizing their presence.  Data and analytics are clearly useful for software creators and funders, but they also easily lead to harming people&amp;rsquo;s privacy and well-being.  The past year of work on Clean Insights has clarified our goals to make analytics possible without injuring the very people we aim to serve.  Clean Insights takes the world of data analytics and turns it on its head.   The Clean Insights approach starts with thinking about the data, then choosing only the data that is clearly safe to use.  A user&amp;rsquo;s location, complete device description, or other identifying information is dangerous to gather.  A simple count of how many times a feature was used, or a webpage was visited, can be gathered without links to people.&lt;/p&gt;

&lt;p&gt;There are some widely known efforts for preserving privacy when doing analytics.  The most famous is perhaps &amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Differential_privacy&#34;&gt;differential privacy&lt;/a&gt;&amp;rdquo;, which is used by the US Census Bureau and Apple.  This approach has certain assumptions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Personally Identifiable Information (PII) is collected and stored.&lt;/li&gt;
&lt;li&gt;A legal compliance team reviews the legal ramifications of storing PII.&lt;/li&gt;
&lt;li&gt;A security team defends the stored data.&lt;/li&gt;
&lt;li&gt;Administrative staff handles compliance with data regulations.&lt;/li&gt;
&lt;li&gt;A PR team to do outreach when PII is leaked or spilled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These assumptions are only possible for large, well-funded organizations to fulfill.  Apple already has extensive staff around the world to handle all this.  A dissident newspaper from a small country does not.  Metrics are nonetheless valuable for this dissident newspaper, and for so many other small- and medium-sized organizations.  So Clean Insights starts with different core assumptions that are much more broadly applicable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As little data as possible is stored to reduce the security and leakage risks.&lt;/li&gt;
&lt;li&gt;The stored data does not reveal identities if made public.&lt;/li&gt;
&lt;li&gt;Legal review is reduced as much as possible.&lt;/li&gt;
&lt;li&gt;No expensive computing resources required.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.accessnow.org/understanding-differential-privacy-matters-digital-rights/&#34;&gt;&lt;img src=&#34;local-vs-global.png&#34; alt=&#34;Clean Insights vs differential privacy&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;starting-out-with-clean-insights&#34;&gt;Starting out with Clean Insights&lt;/h2&gt;

&lt;p&gt;In order to make the Clean Insights approach work, it must start with &lt;a href=&#34;https://gitlab.com/cleaninsights/clean-insights-design/-/blob/master/docs/Clean%20Insights%20-%20%20Feb%202020.pdf&#34;&gt;thinking about the data&lt;/a&gt;.  When setting up metrics and analytics, there is a natural temptation to want to have all the information.  We recommend starting with a very small set of safe measurements as a way to avoid temptation, which might lead the project into hazardous ground.  For web server logs, start by eliminating the PII at the source: use a privacy log configuration for &lt;a href=&#34;https://guardianproject.info/2017/06/08/tracking-usage-without-tracking-people/&#34;&gt;Apache&lt;/a&gt; or &lt;a href=&#34;https://f-droid.org/2019/04/15/privacy-preserving-analytics.html&#34;&gt;NGINX&lt;/a&gt;. Or use a &lt;a href=&#34;https://gitweb.torproject.org/webstats.git/tree/src/sanitize.py&#34;&gt;sanitizing script&lt;/a&gt;.  For other scenarios, do a quick review and see what kinds of counts can be easily and safely gathered and start with those.  These are not always easy questions to answer.  What kind of data is available?  What can that data actually tell us?  What are the risks of gathering and storing that data?  One of the safest types of useful data is simple counts of events.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How many times did an image fail to download?&lt;/li&gt;
&lt;li&gt;How many conversations do users have open?&lt;/li&gt;
&lt;li&gt;How many notifications are swiped away without being viewed?&lt;/li&gt;
&lt;li&gt;How long did users wait for Tor to be available?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The existing analytics tools skirt this step, instead making it easy to gather as much as possible.  They can then rapidly display all sorts of pretty graphs and charts derived from the data.  That points to another key problem with the status quo in metrics: the emphasis on what it easy to represent.  When there is a big pile of &amp;ldquo;collect it all&amp;rdquo; data, there are many views that analytics packages instantly provide.  This is often in conflict with what is actually valuable.  These instant graphs oversimplify things, making it easy to forget that good metrics come from first thinking in depth about the problems that can be solved by metrics.  The old adage is &lt;a href=&#34;https://en.wikipedia.org/wiki/Garbage_in,_garbage_out&#34;&gt;garbage in, garbage out&lt;/a&gt;.  Data about campaigns that is easy to graph may end up leading the effort astray if the valuable metrics are hidden behind lots of pretty charts that distract.&lt;/p&gt;

&lt;p&gt;One recent example of gathering less data is GitHub: they recently &amp;ldquo;&lt;a href=&#34;GitHub got rid of cookie consent screen https://www.theregister.com/2020/12/17/github_will_no_longer_present/&#34;&gt;removed all non-essential cookies&lt;/a&gt;&amp;rdquo;.  Their analytics did not need the extra data those cookies provided.  On top of that, using such tracking methods now requires an &lt;a href=&#34;https://www.smashingmagazine.com/2021/03/state-gdpr-2021-cookie-consent-designers-developers/&#34;&gt;extensive and complicated&lt;/a&gt; design process.&lt;/p&gt;

&lt;h2 id=&#34;stored-data-needs-maintenance&#34;&gt;Stored data needs maintenance&lt;/h2&gt;

&lt;p&gt;Large collections of PII are valuable to others besides the software designers.  Databases are routinely stolen.  Tracking is also very useful to attackers to find their targets.  PII is also key for building a social graph,  which can be used to uncover networks of dissidents.  Or sometimes it is just vandalism, and the private data is simply dumped onto the open internet.&lt;/p&gt;

&lt;p&gt;Then there are data regulations like the EU&amp;rsquo;s GDPR.  They require that services turn over all the user&amp;rsquo;s personal data when they request it.  Users can also request that their data be deleted.  Implementing such a system is a chunk of work.  First, figure out up front what data is being either deliberately or inadvertently collected. Then compare that to which data is actually technically required.  From that perspective, it is possible to eliminate the need for a complicated system managing user data by ensuring that PII is not gathered at all.  That can also eliminate unwanted surprises down the line. If you find out after years of running a service that you have been collecting personal data, and users make requests, you might suddenly have a pile of work tracking down all that data and assembling it for delivery to the user.  A bug in that system could then leak data to the wrong user, which can lead to large fines from regulators.&lt;/p&gt;

&lt;h2 id=&#34;measure-responsibly&#34;&gt;Measure responsibly&lt;/h2&gt;

&lt;p&gt;Even with all these methods to do metrics more responsibly, the question remains: does it need to be measured?  There are working projects that have achieved widespread adoption and usage without tracking users.  Debian and F-Droid have risen while not really gathering many metrics at all.  It is not always a simple question: so many important problems require grant funding to solve.  Yet many funders require extensive metrics.  Digital privacy tools have been largely funded by governments, from Tor to Signal.   Governments should measure and evaluate the projects they are funding.  Governments should also be open about the data they have.  The well-established methods governments use to track projects require lots of data, including PII.  This is a catch-22 when working on software privacy, where the goal is to make it impossible to gather PII.  Government-funded agencies like &lt;a href=&#34;https://opentech.fund&#34;&gt;OTF&lt;/a&gt; funded so many key privacy tools. They put a lot of work into running government-funded grants without requirements to track their users.  This meant pushing back against the US Federal Government&amp;rsquo;s widespread policies about measurement and evaluation.  Using metrics based on safe data sources means projects can provide useful analytics and strong privacy at the same time.  Even when considering that usability and user research are &lt;a href=&#34;https://guardianproject.github.io/info/2021/02/18/usability-the-wonderful-powerful-idea-that-betrayed-us/&#34;&gt;central&lt;/a&gt; to driving the big tracking companies&amp;rsquo; ever expanding data collection, we believe that usability and user research can still be done responsibly.  It is possible to use data to inform UX Design without tracking people at all.  As these techniques are widely adopted, they will also help designers focus on what is most important, thereby delivering better digital experiences for users.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Usability: the wonderful, powerful idea that betrayed us</title>
      <link>https://guardianproject.github.io/info/2021/02/18/usability-the-wonderful-powerful-idea-that-betrayed-us/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2021/02/18/usability-the-wonderful-powerful-idea-that-betrayed-us/</guid>
      <description>

&lt;p&gt;Usability triggered a revolution in computing, taking arcane number crunching machines and making them essential tools in so many human endeavors, even those that have little to do with mathematics.  It turned the traditional design approach on its head.  Initially, experts first built a system then trained users to follow it. User experience design starts with goals, observes how people actually think and act in the relevant context, then designs around those observations, and tests with users to ensure it fits the users&amp;rsquo; understanding.  These ideas were pioneered in the Silicon Valley. This was driven by the unusual confluence of a pioneering spirit and deep engineering skills. That merged with a strong &lt;a href=&#34;https://en.wikipedia.org/wiki/Midpeninsula_Free_University&#34;&gt;counter&lt;/a&gt;-&lt;a href=&#34;https://en.wikipedia.org/wiki/Homebrew_Computer_Club&#34;&gt;culture&lt;/a&gt; looking to &lt;a href=&#34;https://en.wikipedia.org/wiki/People%27s_Computer_Company&#34;&gt;empower&lt;/a&gt; individuals and communities. So much of the best of digital technology has its roots in these ideas.  I feel fortunate to have grown up immersed in these ideas in the Silicon Valley of the 70s and 80s, and still feel that sense of idealism that these ideas can truly make the world a better place.&lt;/p&gt;

&lt;p&gt;Unfortunately, &amp;ldquo;making the world a better place&amp;rdquo; has become a catch phrase.  It is now mostly associated with single-minded investors (aka Venture Capitalists) looking to make money as fast as possible. One key piece is inspiring engineers to work non-stop by constantly telling them they are doing something valuable.  Yet another social media doodad monetized by &lt;a href=&#34;https://en.wikipedia.org/wiki/Surveillance_capitalism&#34;&gt;surveillance capitalism&lt;/a&gt; is clearly the opposite of making the world a better place.  On top of that, these now well honed ideas of usability are widely used to &lt;a href=&#34;https://www.vox.com/2018/2/27/17053758/phone-addictive-design-google-apple&#34;&gt;make&lt;/a&gt; &lt;a href=&#34;https://dl.acm.org/doi/10.1145/2254129.2254137&#34;&gt;digital media&lt;/a&gt; technology &lt;a href=&#34;https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0180094&#34;&gt;literally&lt;/a&gt; an &lt;a href=&#34;https://psycnet.apa.org/doiLanding?doi=10.1037%2Fadb0000379&#34;&gt;addictive&lt;/a&gt; &lt;a href=&#34;http://rali.bournemouth.ac.uk/wp-content/uploads/2015/03/raian_ali_et_al_2015_refsq_the_emerging_requirement_for_digital_addiction_labels.pdf&#34;&gt;drug&lt;/a&gt; so that wealthy investors can make money even faster.  The rise of usability parallels the rise of surveillance capitalism.  These two support each other and feed off of each other.  Software must be fluid and easy in order to become addictive.  Even if the task at hand is mundane: just keep clicking,  look at the pretty animations, and keep following the likes!  The Silicon Valley &lt;a href=&#34;https://www.thesocialdilemma.com/&#34;&gt;insiders&lt;/a&gt; &lt;a href=&#34;https://vimeo.com/462049229&#34;&gt;know&lt;/a&gt; how destructive their wares are, &lt;a href=&#34;https://www.businessinsider.de/international/silicon-valley-parents-raising-their-kids-tech-free-red-flag-2018-2/&#34;&gt;they ban their own children from using them&lt;/a&gt; while continuing to sell them to the world.&lt;/p&gt;

&lt;p&gt;Those of us who still truly believe in usability as a potential force of good are left feeling used and abused, wondering what on earth we can now do to stop the monster we helped create.  Tools and design processes can be used for both good and evil.  It is important to note that does not mean technology is neutral. &amp;ldquo;&lt;a href=&#34;https://weaponsofmathdestructionbook.com/&#34;&gt;Algorithms are opinions embedded in code&lt;/a&gt;&amp;rdquo;.  Basically all &lt;a href=&#34;https://medium.com/thoughts-and-reflections/racial-bias-and-gender-bias-examples-in-ai-systems-7211e4c166a1&#34;&gt;technologies&lt;/a&gt; &lt;a href=&#34;https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing&#34;&gt;have&lt;/a&gt; &lt;a href=&#34;https://peopleofcolorintech.com/articles/recognizing-cultural-bias-in-ai/&#34;&gt;a bias&lt;/a&gt;, and the designers of those technologies have power to affect those biases.  When someone designs a knife for use in the kitchen, it looks quite different than a knife designed to attack other humans.  Of course, both can be used to attack people, but its much easier to attack with the switchblade, and a switchblade is a bad kitchen tool.  Using &lt;a href=&#34;https://www.interaction-design.org/courses/gamification-creating-addictive-user-experience&#34;&gt;addictive design&lt;/a&gt;, we have been sold on the idea that a switchblade is an all-purpose tool.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;!-- --&gt;&lt;/th&gt;
&lt;th&gt;&lt;!-- --&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;paringknife.jpg&#34; alt=&#34;paring knife&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;switchblade.jpg&#34; alt=&#34;switchblade&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Like social media, a hammer is great when you need it, but otherwise should be left in the toolbox.  The &lt;a href=&#34;http://openresearch.ocadu.ca/id/eprint/1743/ - http://openresearch.ocadu.ca/id/eprint/1743/7/Hsu_Cheryl_2017_MDES_SFI_MRP.pdf&#34;&gt;tools&lt;/a&gt; of addictive design have convinced us to constantly carry our hammer around.  It buzzes in our pocket, nagging us to try it out in just about any context.  It uses our innate human desire for social approval to reward us whenever we use the hammer.  Now its use is so widespread, wielding the hammer no longer looks out of context.  There are people hammering while eating, working, walking, talking, and even in the bathroom.&lt;/p&gt;

&lt;h2 id=&#34;meet-usability-s-offspring-surveillance-capitalism&#34;&gt;Meet Usability’s Offspring: Surveillance Capitalism&lt;/h2&gt;

&lt;p&gt;Mobile phones could truly benefit people, but it is nearly impossible to open your phone to do one thing.  Apps and ads immediately compete for your attention and time.  Posting updates to family and friends happens through Facebook.  Search, maps, and many other activities happen through Google. YouTube steers us to watch another video.  Facebook inserts itself into our personal relationships.  All of these are designed to keep you using them more and more, since that is how those companies make money.  These services are built on usability, which causes us to use them more and more.  &lt;strong&gt;Remember, with surveillance capitalism, the users are &lt;a href=&#34;https://quoteinvestigator.com/2017/07/16/product/&#34;&gt;not the customer, they are the product&lt;/a&gt;.&lt;/strong&gt;  So those companies are using usability design to figure out how to keep users &amp;ldquo;engaged&amp;rdquo;, meaning using that platform as much as possible.  That is the design problem they are solving.  &lt;strong&gt;When the user is the customer, that can look very different.&lt;/strong&gt;  WhatsApp became massively popular with a business model of charging a dollar a year, regardless of usage. Their users were also their customers. Now &lt;a href=&#34;https://arstechnica.com/tech-policy/2021/01/whatsapp-users-must-share-their-data-with-facebook-or-stop-using-the-app/&#34;&gt;Facebook&lt;/a&gt; aims to change all that, and WhatsApp users &lt;a href=&#34;https://www.bloomberg.com/news/articles/2021-01-11/why-whatsapp-s-privacy-rules-sparked-moves-to-rivals-quicktake&#34;&gt;do not like it&lt;/a&gt;.  Turns out it is very difficult to compete with free, so responsible business models are at a tremendous disadvantage.  And many WhatsApp users are now &lt;a href=&#34;https://www.nytimes.com/2021/01/13/technology/telegram-signal-apps-big-tech.html&#34;&gt;flooding to Signal&lt;/a&gt;, which is a non-profit foundation working to survive on donations.&lt;/p&gt;

&lt;p&gt;Foundations and governments need to measure and evaluate the projects that they fund, and they are starting to request surveillance capitalism techniques from the projects they fund.  Schools are using web services that use addictive design, ostensibly to help kids learn, but are nonetheless getting kids hooked.   Metrics are central to addictive design, it is based on tracking actual people and what keeps their attention.  A/B testing provides a rapid way to test how to suck people in.  &lt;a href=&#34;https://en.wikipedia.org/wiki/Recommender_system&#34;&gt;Recommender systems&lt;/a&gt; are very effective at getting users to click on the next video or post.  For those kinds of predictions to work, they first need a lot of data about how lots of people respond.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;ldquo;&lt;a href=&#34;http://openresearch.ocadu.ca/id/eprint/1743/7/Hsu_Cheryl_2017_MDES_SFI_MRP.pdf&#34;&gt;how designers shift the burden of responsibility through design&lt;/a&gt;&amp;ldquo;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://openresearch.ocadu.ca/id/eprint/1743/7/Hsu_Cheryl_2017_MDES_SFI_MRP.pdf&#34;&gt;&lt;img src=&#34;shifting-responsibility.png&#34; alt=&#34;how designers shift the burden of responsibility through design&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;data-driven-design-is-dangerous-and-powerful&#34;&gt;Data-driven design is dangerous and powerful&lt;/h2&gt;

&lt;p&gt;Data-driven design can also be used to find the borders of what things they will tolerate beyond things in their interest.  For example, so many software business models involve offering a service without payment, then finding ways to get the users to pay.  This can be with their data or by upselling.  An ethical approach to this kind of business model is to clearly define upfront what types of things require payment.  Unfortunately, a more common approach is to &lt;a href=&#34;https://www.nirandfar.com/want-to-hook-your-users-drive-them-crazy/&#34;&gt;first get users hooked&lt;/a&gt; on the service without paying.  Getting users hooked is offered as a design service, the design equivalent of someone pushing addictive drugs.  Once hooked, when the cost of migrating away from the tool is high, hit users with payment requirements.  Using data-driven design, a service can measure that response in detail.  Tracking all the users provides even better targeting of users based on profiling them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data-driven design is clearly powerful but it need not lead to harmful practices.&lt;/strong&gt;  Usage data can let small organizations effectively direct resources to the areas of biggest need.  Crash report analytics quickly point out important bugs that otherwise would have taken days or weeks of effort to track down.  Neither of these need data about people to be effective techniques.&lt;/p&gt;

&lt;h2 id=&#34;measure-effectiveness-rather-than-engagement&#34;&gt;Measure effectiveness rather than &amp;ldquo;engagement&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;The best mobile software would be designed to make users spend as little time as possible using it.  This is hard to measure.  Users who find the software difficult to use would also use it as little as possible.  We need to figure out how to measure that difference.  Once we do, we can begin to understand what makes a good design in which people use the tool to efficiently solve a problem, then put the tool away once they are done. I think this is one of the biggest questions we can now work on as part of our work on Clean Insights.  It is clear that learning to measure effectiveness will not be easy.  Creating the discipline of &lt;a href=&#34;https://en.wikipedia.org/wiki/User_experience_design&#34;&gt;user experience design&lt;/a&gt; was also not.  After thinking about human-computer interaction and usability for over 25 years, I watched these ideas go from a nice idea to the dominant paradigm.  &lt;strong&gt;It is clearly possible to reclaim usability by thinking ethically about how data is collected and used.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One key thing that makes user-centered design work so well is the cycle of research, design, implementation and testing.  This is akin to scientific experiments, where there is a hypothesis that is tested.  It can happen so fast because it can be decentralized and pieced out into a wide range of scales. User-focused design starts by trying to solve a problem, and iterates to continually improve.  The goals often change as well, in response to new use cases, business models, technologies, and even product goals.&lt;/p&gt;

&lt;p&gt;So often, the central focus shifts from real needs to keeping users &amp;ldquo;engaged&amp;rdquo;.  Designing for engagement shifts the focus away from the task at hand, and instead is about making people use the software as much as possible.  That distracts from providing solutions that reduce the time the user needs to complete a task.  For example, no one is asking for software to help them send and receive ever more messages.  The goal is effective communication and organization.  If software is really addressing that need, that means users will spend less and less time using that communication tool.  That is in direct conflict with a design process focused on &amp;ldquo;engagement&amp;rdquo;, which pushes for as much eyeball time as possible.   The same design thinking based on psychology used in addictive design can also be used to actively &lt;a href=&#34;https://www.researchgate.net/profile/Aditya-Purohit-4/publication/340903372_Designing_for_Digital_Detox_Making_Social_Media_Less_Addictive_with_Digital_Nudges/links/5ea3740ea6fdccd7945168ae/Designing-for-Digital-Detox-Making-Social-Media-Less-Addictive-with-Digital-Nudges.pdf&#34;&gt;avoid addictive qualities&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As long as a person is being tracked and profiled, there is an inevitable pull towards trying to keep that person &amp;ldquo;engaged&amp;rdquo;.  If the data is instead about actions, not people, then the emphasis is on what the user wants to achieve.  Billions have been spent on learning how to effectively track people, that does not need to be thrown away.  The analytics software can be retooled to focus on usage rather than people.  Responsible collection of usage data is the clear place to start in order to shift from &amp;ldquo;engagement&amp;rdquo; to effectiveness.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Easy translation workflows and the risks of translating in the cloud</title>
      <link>https://guardianproject.github.io/info/2020/06/08/easy-translation-workflows-and-the-risks-of-translating-in-the-cloud/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2020/06/08/easy-translation-workflows-and-the-risks-of-translating-in-the-cloud/</guid>
      <description>

&lt;p&gt;Crowdsourced translation has opened up software and websites to whole
new languages, regions, and uses.  Making translating easier has
brought in more contributors, and deploying those languages requires
less work.  A number of providers now offer &amp;ldquo;live&amp;rdquo;, integrated
translation, speeding up the process of delivering translated
websites. On the surface, this looks like a big win.  Unfortunately,
the way such services have been implemented opens up a big can of
worms.  Third parties must be trusted with user data.  The translators
cannot work without being tracked. Displaying the translation requires
JavaScript.  The security profile is more complicated and harder to
defend.&lt;/p&gt;

&lt;p&gt;For projects with elevated security and privacy requirements, these
are deal breakers.  Translators can get in trouble for working on
publishing software or translating censorship circumvention
documentation.  Minority languages are suppressed in many places
around the world, even publicly working in some languages can get
people into trouble.&lt;/p&gt;

&lt;p&gt;We have been working for many years now to help make software and
website translation easier, more accessible, and more efficient.  We
also balance that with privacy and security concerns.  This post
outlines how to balance all those concerns.&lt;/p&gt;

&lt;h2 id=&#34;live-integrated-translation-systems&#34;&gt;Live, integrated translation systems&lt;/h2&gt;

&lt;p&gt;Using this new class of translation services means that the
translations are not shipped with the website or app, but instead
dynamically downloaded and delivered.  These translation services
require that third party code is integrated into the website or app to
deliver the translations.  All of the regular
&lt;a href=&#34;https://browserleaks.com/&#34;&gt;privacy&lt;/a&gt; and
&lt;a href=&#34;https://owasp.org/www-project-top-ten/&#34;&gt;security&lt;/a&gt; concerns of dynamic
web services apply here.&lt;/p&gt;

&lt;p&gt;For example, Transifex Live is based around
&lt;a href=&#34;https://docs.transifex.com/live/installing-the-JavaScript-snippet&#34;&gt;JavaScript&lt;/a&gt;,
it uses JavaScript to dynamically load the translated strings from the
Transifex CDN hosted on Amazon AWS.  They also provide an iFrame
option, which has its own &lt;a href=&#34;https://stackoverflow.com/a/9428051&#34;&gt;security
concerns&lt;/a&gt;.  Crowdin provides
&amp;ldquo;&lt;a href=&#34;https://support.crowdin.com/in-context-localization/&#34;&gt;in-context
localization&lt;/a&gt;&amp;ldquo;
which lets translators see the translations live in the website as
they are working.  This is a huge benefit to the translators, but it
has all the same issues as Transifex Live.  Their code must run in
your site.  They use other providers like Amazon to provide their own
service.  All of these third-parties have to be trusted to provide
security and privacy.  On top of that, Crowdin and Transifex are
monolithic, proprietary offerings, it is not possible run your own
instance.  Like many cloud-based services, it is all-or-nothing:
accept all the tracking, the privacy concerns, and security issues, or
do not use such a service&lt;/p&gt;

&lt;p&gt;Lastly, the data from the translation contributors must be considered.
These live services provide the translators a direct channel to feed
data into the website.  A malicious translator could feed an exploit
to the website using this channel.  Such a setup relies entirely on
any automated checks that the translation platform provides.  These
checks are optional, and often disabled by default.  Also, attackers
regularly find ways around even the best checkers and sanitizers, like
Mozilla &lt;a href=&#34;https://github.com/mozilla/bleach&#34;&gt;Bleach&lt;/a&gt; or Ruby
&lt;a href=&#34;https://github.com/flavorjones/loofah&#34;&gt;loofah&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For all these reasons, projects like
&lt;a href=&#34;https://weblate.securedrop.org/&#34;&gt;SecureDrop&lt;/a&gt; and
&lt;a href=&#34;https://translate.tails.boum.org/&#34;&gt;Tails&lt;/a&gt; self-host Weblate to
provide crowdsourced translation..&lt;/p&gt;

&lt;h2 id=&#34;static-sites-with-live-previews&#34;&gt;Static sites with live previews&lt;/h2&gt;

&lt;p&gt;Static sites built with tools like Jekyll and Hugo offer big benefits
in terms of privacy, security, and cost of operation.  But they
generally require more technical skills to operate, and have
restricted possibilities in terms of dynamic interaction.  There is a
lot that still can be done, and things are improving fast.  The dream
of live localization and in-context translation workflows without
privacy and security concerns is within reach.&lt;/p&gt;

&lt;p&gt;Live display of translations is not possible with a fully static site.
Live translation requires front end JavaScript or a dynamic backend
server.  The vast majority of web tracking and security
vulnerabilities come from JavaScript, sites that serve high risk
communities should use static sites that work without JavaScript
enabled.&lt;/p&gt;

&lt;p&gt;Translation updates can be highly &lt;a href=&#34;https://guardianproject.github.io/info/2020/04/23/figuring-out-crowdsourced-translation-of-websites/&#34;&gt;automated&lt;/a&gt; with a static site.  This means new translations can be reviewed
and deployed within minutes.&lt;/p&gt;

&lt;p&gt;Jekyll and Hugo can also provide live previews while editing the
source pages and translations. Unfortunately, using these features
requires base level familiarity with technical things like working in
the terminal.  When Jekyll or Hugo is installed locally on the
translators computer, &lt;code&gt;jekyll serve&lt;/code&gt; and &lt;code&gt;hugo serve&lt;/code&gt; generate the
whole website on the fly, and the browser will automatically refresh
the page with each change.&lt;/p&gt;

&lt;h2 id=&#34;wordpress-translation-and-static-sites&#34;&gt;Wordpress, Translation, and Static Sites&lt;/h2&gt;

&lt;p&gt;Wordpress remains a popular option for running websites, especially
for small and non-technical organizations.  It provides intuitive
editing and publishing tools combined with a wide array of attractive
templates to build on.  It is free software that can be self-hosted,
and it can even be used as a static site generator.  Even with the
rise of Jekyll, Hugo, and so many other static site generators,
Wordpress remains a &lt;a href=&#34;https://www.brianshim.com/webtricks/wordpress-static-site-generator/&#34;&gt;good
option&lt;/a&gt;
for small organizations with privacy and security concerns, given that
it is used with the &lt;a href=&#34;https://wordpress.org/plugins/static-html-output-plugin/&#34;&gt;static HTML output
plugin&lt;/a&gt;.
The one missing piece is crowdsourced translation that fits in with
all that.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://poedit.net/&#34;&gt;Poedit&lt;/a&gt; provides an alternate approach that is
self-hosted and free software, but is not entirely a typical
crowdsourced translation workflow.  It is an editor app that runs
locally on the translator&amp;rsquo;s own machine.  It supports translating
Wordpress directly via its API.  Then the results are included when
Wordpress generates the static HTML output.&lt;/p&gt;

&lt;p&gt;Using self-hosted Weblate, the full website and translation workflow
can be as private as needed.  The static HTML output can be fed
&lt;a href=&#34;https://docs.weblate.org/en/latest/formats.html#html-files&#34;&gt;directly to
Weblate&lt;/a&gt;
or &lt;a href=&#34;https://guardianproject.github.io/info/2020/04/23/figuring-out-crowdsourced-translation-of-websites/#translation-setup-with-po4a&#34;&gt;use &lt;em&gt;po4a&lt;/em&gt;&lt;/a&gt; to set up an automated workflow that is tailored to your needs.&lt;/p&gt;

&lt;p&gt;If self-hosting the translation platform is not a requirement, then
Crowdin and Transifex are options for translating the static HTML that
comes from Wordpress.  It is important to consider that both of these
will send data to many different companies, so they cannot be
considered private.  Using Crowdin sends data to Amazon, Google, and
Sentry.  Using Transifex sends data to Amazon, ChurnZero, Google,
jsDelivr, New Relic, Sentry, Stripe, Adobe (Typekit), and VWO.  Both
can potentially also send data to Facebook, GitHub, GitLab, LinkedIn,
and Twitter since those can be used for signing in.&lt;/p&gt;

&lt;p&gt;Two good patterns for setting up the languages are the hosting each
language on a subdomain like how wikipedia does it; or, use path
segments for each language.  With GitHub Pages and GitLab Pages, each
language can be a project, then each language will be deployed to a
sub-directory, e.g.:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mysite.gitlab.io/en&#34;&gt;https://mysite.gitlab.io/en&lt;/a&gt; comes from &lt;a href=&#34;https://gitlab.com/mysite/en&#34;&gt;https://gitlab.com/mysite/en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the main site is the language chooser, e.g.
&lt;a href=&#34;https://mysite.gitlab.io&#34;&gt;https://mysite.gitlab.io&lt;/a&gt; comes from &lt;a href=&#34;https://gitlab.com/mysite/mysite.gitlab.io&#34;&gt;https://gitlab.com/mysite/mysite.gitlab.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One idea further improve the Wordpress workflow is to combine the
&lt;a href=&#34;https://www.transifex.com/integrations/wordpress-multilingual-plugin/&#34;&gt;Transifex Wordpress Plugin&lt;/a&gt;
with the
[Wordpress Static HTML Output Plugin](&lt;a href=&#34;https://wordpress.org/plugins/static-html-output-plugin/&#34;&gt;https://wordpress.org/plugins/static-html-output-plugin/&lt;/a&gt;
to customize and streamline the whole process.  This could work with
Crowdin, Transifex, and Weblate, since they all provide APIs to
integrate with.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Onion Browser Release 2.6 Tutorial</title>
      <link>https://guardianproject.github.io/info/2020/06/02/onion-browser-release-2.6-tutorial/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2020/06/02/onion-browser-release-2.6-tutorial/</guid>
      <description>

&lt;p&gt;In this tutorial we&amp;rsquo;re going to talk about the best practices to browse the web securely on iOS using &lt;a href=&#34;https://onionbrowser.com&#34;&gt;Onion Browser&lt;/a&gt; Release 2.6 and the &lt;a href=&#34;https://torproject.org&#34;&gt;Tor network&lt;/a&gt;. &lt;a href=&#34;https://onionbrowser.com&#34;&gt;Onion Browser for iOS&lt;/a&gt; is a free, open-source web browser app developed originally by &lt;a href=&#34;https://mike.tig.as/&#34;&gt;Mike Tigas&lt;/a&gt;, with Release 2.6 as a collaboration with the Guardian Project. Onion Browser has Tor built-in and uses Tor to protect your web activity.&lt;/p&gt;

&lt;p&gt;You can also watch the &lt;a href=&#34;https://www.youtube.com/playlist?list=PL4-CVUWabKWeHeBpadBLjzlWVa7binXpj&#34;&gt;Onion Browser Video Tutorial&lt;/a&gt; on YouTube.&lt;/p&gt;

&lt;!-- ![](image25.jpg) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image25.jpg&#34;&gt;
        &lt;img class=&#34;size1&#34; src=&#34;image25.jpg&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&#34;who-is-this-tutorial-designed-for&#34;&gt;Who is this Tutorial designed for?&lt;/h2&gt;

&lt;p&gt;A few questions for you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is your internet content being blocked?&lt;/li&gt;
&lt;li&gt;Are you concerned about your privacy while browsing the web?&lt;/li&gt;
&lt;li&gt;Do you want to protect your data from aggressive advertisers?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If any of these are true, this tutorial is for you!&lt;/p&gt;

&lt;h2 id=&#34;don-t-have-an-ios-device&#34;&gt;Don&amp;rsquo;t have an iOS device?&lt;/h2&gt;

&lt;!-- ![](image21.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image21.png&#34;&gt;
        &lt;img class=&#34;size1&#34; src=&#34;image21.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/apps/orbot&#34;&gt;Try Orbot&lt;/a&gt;, the Tor connection for Android devices developed by the Guardian Project. Orbot allows you to route the apps on your phone through Tor.&lt;/p&gt;

&lt;!-- ![](image20.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image20.png&#34;&gt;
        &lt;img class=&#34;size1&#34; src=&#34;image20.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;You may also try the &lt;a href=&#34;https://torproject.org&#34;&gt;Tor Browser for Android&lt;/a&gt;, the official Tor browser for Android developed by the Tor Project team.&lt;/p&gt;

&lt;h2 id=&#34;first-what-exactly-is-the-tor-network&#34;&gt;First, what exactly is the Tor network?&lt;/h2&gt;

&lt;!-- ![](image11.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image11.png&#34;&gt;
        &lt;img class=&#34;size1&#34; src=&#34;image11.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;The Tor network is a collection of servers, run by volunteers, that allows users to improve their privacy and security on the Internet. Tor&amp;rsquo;s users employ this network by connecting to their favorite services through a series of virtual tunnels rather than making a direct connection, thus allowing both organizations and individuals to share information over public networks without compromising their privacy.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how Tor works: When you connect to the internet using Tor, a circuit is created. A circuit is a group of 3 different Tor relays located in different parts of the world that work together with encryption to obfuscate your connection to websites and web services, making it hard for third parties to trace the activity back to you.&lt;/p&gt;

&lt;!-- ![](image17.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image17.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image17.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h2 id=&#34;onion-browser-with-tor-is-an-important-application-for-ios-users&#34;&gt;Onion Browser, with Tor, is an important application for iOS users&lt;/h2&gt;

&lt;p&gt;Why? Because when you use Onion Browser&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All your browsing is private, since your traffic is encrypted through the Tor network&lt;/li&gt;
&lt;li&gt;No one can see your activities, save your history, or influence your browsing&lt;/li&gt;
&lt;li&gt;And there is no trace left behind since tabs don&amp;rsquo;t hang around. They close when you&amp;rsquo;re done, so every search is new&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;how-is-the-onion-browser-different-from-other-browsers-for-ios&#34;&gt;How is the Onion Browser different from other browsers for iOS?&lt;/h2&gt;

&lt;p&gt;Security and privacy require some compromises, and you should be aware that there are some limitations when using the Onion Browser:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apple requires all web browser apps to use the same core web rendering engine. Due to this limitation, we are unable to compile and include our own web engine, based on Firefox Gecko, as with Tor Browser for desktop and Android&lt;/li&gt;
&lt;li&gt;Onion Browser only tunnels traffic within the Onion Browser app. If you are using a smartphone be aware that information outside of Onion Browser is not protected&lt;/li&gt;
&lt;li&gt;Sometimes your bandwidth speeds will be reduced, depending on the relays you are connecting to&lt;/li&gt;
&lt;li&gt;Websites that flag Tor as suspicious will show a CAPTCHA loop and you won&amp;rsquo;t be able to access them&lt;/li&gt;
&lt;li&gt;Certain features of many websites may be disabled or work poorly on Onion Browser, especially at the higher security levels&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;onboarding&#34;&gt;Onboarding&lt;/h2&gt;

&lt;p&gt;After &lt;a href=&#34;https://apps.apple.com/us/app/onion-browser/id519296448&#34;&gt;downloading Onion Browser from the App Store&lt;/a&gt;, we&amp;rsquo;ll give you a smooth start to using the app. After the initial loading screen, you&amp;rsquo;ll be invited to connect to Tor before you start browsing. Be advised: Onion Browser always needs to connect to Tor before you browse. There&amp;rsquo;s no operational mode that doesn&amp;rsquo;t use Tor.&lt;/p&gt;

&lt;p&gt;&lt;!-- ![](image24.png) --&gt; &lt;!-- ![](image14.png) --&gt;
&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image24.png&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image24.png&#34;&gt;
    &lt;/a&gt;
    &lt;a href=&#34;image14.png&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image14.png&#34;&gt;
    &lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;There are two options here: connecting directly to Tor, as most users do, or connecting via a special &amp;ldquo;bridge&amp;rdquo;. This latter option requires configuration, and we&amp;rsquo;ll discuss it in a separate section of this tutorial. Select &amp;ldquo;Connect to Tor&amp;rdquo; and the app will let you know when it is ready.&lt;/p&gt;

&lt;!-- ![](image18.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image18.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image18.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Click on &amp;ldquo; Next&amp;rdquo; to set up your security level.&lt;/p&gt;

&lt;!-- ![](image30.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image30.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image30.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;There are three levels of security you can select, according to your needs. For many users, Level 2 is the best choice to start. Click on &amp;ldquo;Learn More&amp;rdquo; to see more details about each option. Tap &amp;ldquo;Start Browsing&amp;rdquo; to begin using Onion Browser.&lt;/p&gt;

&lt;h2 id=&#34;the-onion-browser-home-page&#34;&gt;The Onion Browser Home Page&lt;/h2&gt;

&lt;p&gt;On the home page of Onion Browser you&amp;rsquo;ll see a couple of website suggestions, as well as more information about the app. We&amp;rsquo;d welcome your support for our work. Use the Donate Link to see the ways you can contribute with a donation. You can also subscribe to the Tor Newsletter to get updates about security and privacy on the Internet from the Tor team.&lt;/p&gt;

&lt;!-- ![](image22.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image22.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image22.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;On the home page, in the top navigation bar, you&amp;rsquo;ll see there are two icons you don&amp;rsquo;t find in other browsers, a Shield on the top left side and an Onion on the top right side.&lt;/p&gt;

&lt;p&gt;&lt;!-- ![](image15.jpg) --&gt; &lt;!-- ![](image5.jpg) --&gt;
&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image15.jpg&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image15.jpg&#34;&gt;
    &lt;/a&gt;
    &lt;a href=&#34;image5.jpg&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image5.jpg&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll discuss these in a bit. The Onion Browser also includes features you&amp;rsquo;ll recognize like Bookmarks, Share, New Tab, Switch Tabs, and Accessing Settings. These are common in other browsers and work in the same manner here.&lt;/p&gt;

&lt;h2 id=&#34;visiting-websites&#34;&gt;Visiting websites&lt;/h2&gt;

&lt;p&gt;When you visit websites, Onion Browser will give you additional information about the security and nature of your connection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS websites will show a green lock on the right side of the URL bar, tap on it to verify the Certificate Information.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ![](image1.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image1.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image1.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tap on the Shield icon to see your current security level&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ![](image13.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image13.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image13.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tap on the Onion icon to see the Tor circuit you are using, sometimes your current circuit will be too slow or it will not work properly, for those cases use the &amp;ldquo;New Circuit&amp;rdquo; button and you will be automatically connected to a new one.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ![](image7.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image7.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image7.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;On this drop-down menu, you will also find the option to connect to Tor using bridges. Please remember that you should always try to connect to Tor without using bridges and only use them if that fails. We&amp;rsquo;ll talk more about bridges later.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Share icon allows you to send a link to the website you are looking at using other apps in your device. It also allows you to open the link using Safari if the site is not opening properly using Tor. This will be out of the Tor network and is not safe&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ![](image19.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image19.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image19.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The same applies to open images and links with Safari. But you can also open links safely on a new tab, and navigate them the same way you will do it on any other browser&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- ![](image12.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image12.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image12.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If your screen times out or you send the browser to the background all your current tabs will disappear when you return to your browser, this is a security feature that can be changed in your settings&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Downloading content is easiest with the Share icon. Display your content (such as a PDF-formatted article) in a tab, then tap the Share icon. Select &amp;lsquo;Save to Files&amp;rsquo;, then on the next screen, choose the desired locations (&amp;ldquo;Downloads&amp;rdquo; folder is shown here). Tap &amp;lsquo;Save&amp;rsquo; and the content will be saved in the Downloads folder for later use or further sharing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!-- ![](image23.png) --&gt; &lt;!-- ![](image16.png) --&gt;
&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image23.png&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image23.png&#34;&gt;
    &lt;/a&gt;
    &lt;a href=&#34;image16.png&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image16.png&#34;&gt;
    &lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;h2 id=&#34;security-connectivity&#34;&gt;Security &amp;amp; Connectivity&lt;/h2&gt;

&lt;h3 id=&#34;bridges&#34;&gt;Bridges&lt;/h3&gt;

&lt;p&gt;There&amp;rsquo;s a special way to connect to the Tor network, designed for users in the most restrictive geographies or users personally at risk of invasive monitoring. Bridges are like special on-ramps for Tor that are more aggressive about defeating monitoring. That comes at a cost in performance, though. We like to reserve these pathways for most impacted users, so please use them sparingly.&lt;/p&gt;

&lt;p&gt;If you know bad actors are monitoring Tor usage in your geography, you&amp;rsquo;ll want to configure a bridge immediately when you first open Onion Browser. You can do that right from the first onboarding screen, before connecting to Tor&lt;/p&gt;

&lt;!-- ![](image6.jpg) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image6.jpg&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image6.jpg&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Whether you configure your bridge immediately or after you&amp;rsquo;ve been using Onion Browser for a while, you need to be careful how you get your bridge information. You have several options. See the Bridge Configuration settings (accessed during on-boarding as above or by tapping on the Onion icon when viewing a website and then tapping &amp;lsquo;Bridge Configuration&amp;rsquo;).&lt;/p&gt;

&lt;!-- ![](image2.jpg) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image2.jpg&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image2.jpg&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Your first option should be the list of bridges using the so-called Obfs4 technology, a list already built into Onion Browser. Select the &amp;ldquo;Built-in Obfs4&amp;rdquo; option and Onion Browser will instruct Tor to use that selection of bridges as it attempts to connect. Tap &amp;ldquo;connect&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Unfortunately the bridges on that list can become crowded and connection may fail here, too. If you know a trustworthy person who uses a bridge to connect to Tor, your second option is to have your friend help you by sending you a bridge QRCode your device can scan and automatically configure to use that bridge. Or, less securely, you can copy/paste a bridge identifier that your friend sends you via another service (messaging, for example). To use this option, tap &amp;ldquo;Custom Bridges&amp;rdquo;, and then either scan the provided QRCode or paste your provided bridge into the text area shown, then tap &amp;ldquo;Connect&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;!-- ![](image4.jpg) --&gt; &lt;!-- ![](image8.jpg) --&gt;
&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image4.jpg&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image4.jpg&#34;&gt;
    &lt;/a&gt;
    &lt;a href=&#34;image8.jpg&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image8.jpg&#34;&gt;
    &lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;If these options fail, you can get access to a fresh selection of Obfs4 bridges using the service called MOAT to get up-to-date information in real-time. This option works in a way that does not expose itself to suspicion. To use this option, select &amp;ldquo;Built-in Meek/Azure&amp;rdquo; and tap &amp;ldquo;connect&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Last, the Tor Project itself also maintains a list of bridges. For this option, tap &amp;lsquo;Custom Bridges&amp;rsquo;, then &amp;lsquo;Request Bridges from torproject.org&amp;rsquo; and follow the instructions there. You&amp;rsquo;ll get a bridge identifier, and you&amp;rsquo;ll paste it into the text area, same as you would if a friend provided it to you. After pasting, tap &amp;ldquo;connect&amp;rdquo;. Note that this method of contacting the Tor Project to get a bridge identifier is an action that itself might be blocked.&lt;/p&gt;

&lt;p&gt;Again, we want to steer you away from using bridges. The degradation of the user experience can be extreme and please remember that there are people who actually require this capability to get any connection at all. As capacity is limited, we want to give those people the first opportunity.&lt;/p&gt;

&lt;h3 id=&#34;biometric-authentication&#34;&gt;BioMetric Authentication&lt;/h3&gt;

&lt;p&gt;You can place a second level of access security on Onion Browser by using its authentication option. You might prefer this option if you believe you face a physical security threat, if there is a chance your device might get stolen or if your device might be otherwise misused by people you don&amp;rsquo;t trust.&lt;/p&gt;

&lt;p&gt;First, you need to set up your iOS device to require security at login via a 6-digit numeric Passcode, FaceID or TouchID. Use the iOS Settings app. Select and configure the method you prefer. If you&amp;rsquo;ve already done that, there&amp;rsquo;s no need to change. Be aware that all manipulations of our authentication settings here will require you to enter your password.&lt;/p&gt;

&lt;!-- ![](image10.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image10.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image10.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Now tap the Onion Browser settings icon to get to the Settings page. You&amp;rsquo;ll see a selection option for &lt;strong&gt;&amp;ldquo;Lock App with TouchID/FaceID or Device Passcode&amp;rdquo;&lt;/strong&gt;. Select that option to enable it and restart Onion Browser. On your next use, Onion Browser will require your ID (in whatever form you&amp;rsquo;ve requested) before it will start up.&lt;/p&gt;

&lt;h2 id=&#34;useful-tips&#34;&gt;Useful Tips&lt;/h2&gt;

&lt;h3 id=&#34;dark-mode&#34;&gt;Dark Mode&lt;/h3&gt;

&lt;p&gt;The Onion Browser has a built-in Dark Mode that allows it to comply with the system setting for the &amp;ldquo;dark&amp;rdquo; color scheme. To set Dark Mode, visit the iOS Settings application and tap Display &amp;amp; Brightness. Select your appearance here and Onion Browser will comply with this setting.&lt;/p&gt;

&lt;!-- ![](image3.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image3.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image3.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h3 id=&#34;tab-security-hide-web-pages-when-switching-apps&#34;&gt;Tab Security - Hide Web Pages When Switching Apps&lt;/h3&gt;

&lt;p&gt;Hiding web pages when switching apps is a feature required by people who are in danger of having their device removed from their person by other bad actors. If that happens, the contents of their open tabs can be seen and perhaps screen-shotted by those bad actors and used in prosecution. While hiding web pages sounds great at first, it means you lose your browsing &amp;ldquo;state&amp;rdquo; when switching back to Onion Browser later. Frankly, it is terribly inconvenient for most users. So, there are lesser options, too. From the Onion Browser Settings page, tap &amp;ldquo;Tab Security&amp;rdquo;&lt;/p&gt;

&lt;!-- ![](image29.jpg) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image29.jpg&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image29.jpg&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Then select from:&lt;/p&gt;

&lt;h4 id=&#34;forget-in-background&#34;&gt;Forget in Background&lt;/h4&gt;

&lt;p&gt;Happens when you tap the HOME button, otherwise switch apps, or the display times-out and the login screen is presented.&lt;/p&gt;

&lt;h4 id=&#34;forget-at-shutdown&#34;&gt;Forget at Shutdown&lt;/h4&gt;

&lt;p&gt;Happens only when user actually closes the app or shuts down the device&lt;/p&gt;

&lt;h4 id=&#34;remember-tabs&#34;&gt;Remember Tabs&lt;/h4&gt;

&lt;p&gt;Tabs are NOT hidden; this setting is also called &amp;ldquo;Startup in last state&amp;rdquo; and it&amp;rsquo;s the opposite of &amp;ldquo;remove web pages when switching apps&amp;rdquo; because it means your browsing state is saved between sessions. For many, this is a tremendous time-saver, but users concerned about their device being taken from them should not enable this feature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: Your bookmarks are also an indication of your browsing interests. Creating many bookmarks on the device leaves a certain &amp;ldquo;fingerprint&amp;rdquo; about your browsing intentions in the same way open tabs indicate what&amp;rsquo;s actually being used. See the&lt;/em&gt; Nextcloud Bookmarks &lt;em&gt;feature as a way to resolve this problem.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;onion-browser-as-your-default-system-browser&#34;&gt;Onion Browser As Your Default System Browser&lt;/h3&gt;

&lt;p&gt;There are a lot of ways you can acquire a link to web content and resources. Many applications, when seeing a link, will offer the option to open that link in the web browser. On iOS, Safari is the system browser, registered to open links, and iOS doesn&amp;rsquo;t usually allow other browsers to have that privilege. Safari doesn&amp;rsquo;t use Tor, so it&amp;rsquo;s not safe to open links that way. We can&amp;rsquo;t make Onion Browser the &amp;ldquo;system browser&amp;rdquo;, but there is a way to disable Safari and allow Onion Browser to open your links. Follow these steps:&lt;/p&gt;

&lt;p&gt;Open the iOS Settings app. Tap &amp;ldquo;Screen Time&amp;rdquo; (if it&amp;rsquo;s your first time using this feature, several help screens will follow).&lt;/p&gt;

&lt;!-- ![](image28.png) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image28.png&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image28.png&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Tap &amp;ldquo;Content &amp;amp; Privacy Restrictions&amp;rdquo; to enable it. Tap &amp;ldquo;Allowed Apps&amp;rdquo;. Tap &amp;ldquo;Safari&amp;rdquo; to disable it. This way, Safari won&amp;rsquo;t be opened when links are clicked in any app starting with http:// or https://. OnionBrowser can now open the links safely.&lt;/p&gt;

&lt;h3 id=&#34;nextcloud-bookmarks&#34;&gt;NextCloud Bookmarks&lt;/h3&gt;

&lt;p&gt;Bookmarks make it easy to access frequently-desired content as well as to preserve access to infrequently-visited, but necessary, sites. However, bookmarks can also represent intent or interest and, for those in danger of losing their device to bad actors, this can be an issue.&lt;/p&gt;

&lt;p&gt;If you use NextCloud, you can manage your Onion Browser bookmarks on your other devices and synchronize them with Onion Browser. Here&amp;rsquo;s how:&lt;/p&gt;

&lt;p&gt;&lt;!-- ![](image26.png) --&gt; &lt;!-- ![](image9.png) --&gt;
&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image26.png&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image26.png&#34;&gt;
    &lt;/a&gt;
    &lt;a href=&#34;image9.png&#34;&gt;
        &lt;img class=&#34;size2&#34; src=&#34;image9.png&#34;&gt;
    &lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tap the Bookmarks icon, then tap &amp;lsquo;Sync with Nextcloud&amp;rsquo;.Enter the link for your Nextcloud server along with your username and password, then tap &amp;lsquo;Sync Bookmarks&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re not a Nextcloud user and this sounds interesting, find more about NextCloud at nextcloud.com.&lt;/p&gt;

&lt;h2 id=&#34;some-failure-modes-and-how-to-recover&#34;&gt;Some Failure Modes and How to Recover&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s talk about ways in which Onion Browser - and the mountain of software and Internet network architecture behind it - can let you down. Yes, it DOES happen. Sometimes your network just doesn&amp;rsquo;t have the performance and responsiveness it requires. Sometimes your network is under heavy surveillance. Sometimes the Tor network is under direct attack by bad actors. Let&amp;rsquo;s look at a few of the failures you might experience and see what you can do to mitigate at least some of the impacts. We regret that this list is not complete.&lt;/p&gt;

&lt;h3 id=&#34;on-start-up&#34;&gt;On Start-up&lt;/h3&gt;

&lt;p&gt;What if I have no network connection of any kind and I don&amp;rsquo;t realize it? What if my network connection is very slow? What if Tor is blocked in my country?&lt;/p&gt;

&lt;p&gt;First, if you know - via friends or trusted information sources - that Tor is blocked in your country, you&amp;rsquo;ll need configure access via a bridge on your very first startup. Please revisit the prior discussion on how to properly configure Tor bridge access. Please remember, bridges tend to degrade the user experience in a number of ways. They&amp;rsquo;re a &amp;ldquo;last resort&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re not connected to a local or wide-area network (and don&amp;rsquo;t realize it) or if your connection is very poor (low-bandwidth), or if Tor is blocked in your country, Onion Browser won&amp;rsquo;t be able to start. Unfortunately, there&amp;rsquo;s no safe way to automatically distinguish between these different conditions. First, try to verify that the device itself has a connection or move to another location &amp;amp; network. Please remember, Tor can be slow to start up - especially on your first use - even under the best circumstances because it has to discover its network of nodes (at least partly) before it can build circuits. This does take a little patience.&lt;/p&gt;

&lt;h3 id=&#34;on-restart&#34;&gt;On Restart&lt;/h3&gt;

&lt;p&gt;What if Tor fails to start or restart properly within Onion Browser (can this happen, for example, when switching tabs)?&lt;/p&gt;

&lt;p&gt;If Tor fails on start/restart, Onion Browser assumes that it&amp;rsquo;s because the Tor nodes available from your location are blocked. Onion Browser will urge you to configure bridges. You won&amp;rsquo;t be able to proceed, though. You actually need to stop Onion Browser (switch to another app, or kill the app by swiping it out of iOS&amp;rsquo; app-cards overview) and then start it again.&lt;/p&gt;

&lt;p&gt;If you experience a lot of this type of failure, you may want to consider the Onion Browser setting that allows you to &amp;ldquo;Remember Tabs&amp;rdquo; (also called &amp;ldquo;start up in last state&amp;rdquo;). That&amp;rsquo;s available using &amp;ldquo;Settings -&amp;gt; Tab Security -&amp;gt; Remember Tabs&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;after-a-heavy-use-session&#34;&gt;After A Heavy-Use Session&lt;/h3&gt;

&lt;p&gt;There&amp;rsquo;s a lot going on within Onion Browser and sometimes after a lot of use (or maybe due to a lot of tabs open for a long time) Onion Browser will run out of working memory on the device. In this case, iOS will probably kill the app by itself (though you may have to swipe it away from the app-cards overview under certain circumstances). When you start it again, it will be a fresh start.&lt;/p&gt;

&lt;p&gt;This is another good time to remember, if your situation allows it, use the &amp;ldquo;Remember Tabs&amp;rdquo; feature.&lt;/p&gt;

&lt;h3 id=&#34;failures-under-regular-use&#34;&gt;Failures Under Regular Use&lt;/h3&gt;

&lt;p&gt;You may experience using Onion Browser in a normal way, seemingly fine, and then when tapping a link or visiting a new site nothing seems to happen. It&amp;rsquo;s hard to know if the link or site is the problem, or if Onion Browser or Tor is the problem.&lt;/p&gt;

&lt;p&gt;You can check if Tor is still running by creating a new tab and visiting, for example, DuckDuckGo.com. If Tor really has failed, you should leave the app and enter back after a few seconds (that is, switch to another app, then return). That action should restart Tor. If that fails to help, go to iOS&amp;rsquo; app-cards overview, swipe-away Onion Browser and start it again.&lt;/p&gt;

&lt;p&gt;If the new tab opening to DuckDuckGo.com does work, then Tor is still operating and that&amp;rsquo;s a good indicator that the link or website you visited contains some JavaScript Onion Browser thinks is unsafe.&lt;/p&gt;

&lt;p&gt;Onion Browser has a pop-up and ad blocker integrated. These, unfortunately, might interfere with the web page in a way that makes it break. These features cannot be switched off, currently.&lt;/p&gt;

&lt;p&gt;Lastly, failure can happen when the Security Level currently set for the page is denying the website from taking certain actions. Loading media is one such action, though not every time. If you&amp;rsquo;re sure leaking your browsing information to somebody listening on your connection isn&amp;rsquo;t a problem, you might want to lower the security level to &amp;ldquo;Bronze&amp;rdquo;, at least for that site.&lt;/p&gt;

&lt;h3 id=&#34;what-are-these-circuits-you-talk-about&#34;&gt;What Are These &amp;ldquo;Circuits&amp;rdquo; You Talk About?&lt;/h3&gt;

&lt;p&gt;The circuit is the path your communications take through the Tor network (whose nodes exist in many countries in the world). Normally, you don&amp;rsquo;t need to take specific care regarding the circuit, because that&amp;rsquo;s Tor&amp;rsquo;s business. However, depending on the &amp;ldquo;exit node&amp;rdquo; Tor has chosen, you might see a website localized wrongly or a website that mistakes you for a hostile due to your country-of-origin (which Tor has set). In those cases you can request a new circuit. It&amp;rsquo;s easy, right there on the circuit display.&lt;/p&gt;

&lt;!-- ![](image7.jpg) --&gt;

&lt;p class=&#34;ctr&#34;&gt;
    &lt;a href=&#34;image7.jpg&#34;&gt;
        &lt;img class=&#34;size3&#34; src=&#34;image7.jpg&#34;&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;The circuit display could also hint to the reason of a slow connection. If you&amp;rsquo;re routed around the world, that might be the problem. However, Tor typically tries to avoid these situations automatically and chooses circuits with hops near you.&lt;/p&gt;

&lt;h3 id=&#34;custom-site-settings&#34;&gt;Custom Site Settings&lt;/h3&gt;

&lt;p&gt;Now that we&amp;rsquo;ve introduced &amp;ldquo;Security Levels&amp;rdquo; in the new Onion Browser, there&amp;rsquo;s much less need to store custom settings for individual websites. That&amp;rsquo;s a good thing because these settings are hard to remember once customized. For example, did you remove all restrictions from a website because you were once on a less restricted network? Well, when you&amp;rsquo;re back on your surveilled network, it&amp;rsquo;s hard to remember that you customized just that one site. That can lead to an unplanned exposure.&lt;/p&gt;

&lt;p&gt;We hope you like the new &amp;ldquo;Security Levels&amp;rdquo; mechanism - it&amp;rsquo;s much easier to monitor how much risk you&amp;rsquo;re exposed to using this mechanism. Enjoy it!&lt;/p&gt;

&lt;h2 id=&#34;support&#34;&gt;Support&lt;/h2&gt;

&lt;p&gt;Work on Onion Browser during 2019 and through mid-2020 was funded by the &lt;a href=&#34;https://www.opentech.fund/&#34;&gt;Open Technology Fund&lt;/a&gt; and sponsored by the &lt;a href=&#34;https://guardianproject.info/&#34;&gt;Guardian Project&lt;/a&gt;. &lt;a href=&#34;https://github.com/mtigas&#34;&gt;Mike Tigas&lt;/a&gt; was development architect, &lt;a href=&#34;https://github.com/tladesignz&#34;&gt;Benjamin Erhart&lt;/a&gt; was lead developer. &lt;a href=&#34;https://okthanks.com/&#34;&gt;OkThanks&lt;/a&gt; provided user-centered design services.&lt;/p&gt;

&lt;p&gt;To contribute to the long-term maintenance of Onion Browser, please visit the &lt;a href=&#34;https://onionbrowser.com/donate&#34;&gt;donation page&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On the classification of tracking</title>
      <link>https://guardianproject.github.io/info/2020/05/20/on-the-classification-of-tracking/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2020/05/20/on-the-classification-of-tracking/</guid>
      <description>

&lt;p&gt;This position paper tries to outline a framework for defining trackers
in smart phones and lists mechanisms for identifying them.  It hopes
to serve as the foundation for the work done in the
Tracking-the-Trackers project.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;#section-1-levels-of-unwanted-behaviour&#34;&gt;section 1&lt;/a&gt; we start with
an abstract analysis of levels of unwanted behaviour in the context of
tracking.&lt;/p&gt;

&lt;p&gt;Next, in &lt;a href=&#34;#section-2-an-attacker-s-perspective-and-a-taxonomy&#34;&gt;section
2&lt;/a&gt;, we focus on
an attacker’s perspective, on anonymity and pseudonymity. This
foundation allows us to define terms which are needed throughout the
paper.&lt;/p&gt;

&lt;p&gt;Finally, we list proposed mechanisms for identifying trackers - based
on the threat model (attacker) as well as the level of acceptable
tracking.&lt;/p&gt;

&lt;h2 id=&#34;scope&#34;&gt;Scope&lt;/h2&gt;

&lt;p&gt;This document talks about trackers in general on mobile devices
(smartphones). However, for the purpose of verification, we
exclusively focus on Android apps. First of all, Android has a &lt;a href=&#34;https://www.idc.com/promo/smartphone-market-share/os&#34;&gt;85%
global market
share&lt;/a&gt;, secondly
Android apps (APKs) are easier to work on.  With iOS apps, monitoring
trackers (or instrumenting running code) is not as easy as on Android
based systems.  Therefore, whenever any claims are made, we refer to
the Android ecosystem. We however believe that very similar behaviours
exist on iOS based systems.&lt;/p&gt;

&lt;p&gt;Also, this document does not talk about contact tracing (as in
Covid-19 contact tracing).&lt;/p&gt;

&lt;h2 id=&#34;section-1-levels-of-unwanted-behaviour&#34;&gt;Section 1: Levels of unwanted behaviour&lt;/h2&gt;

&lt;p&gt;The following section tries to categorize tracking respectively
potential unwanted behaviour in apps by level of severity. This is
done with a perspective for categories (labels) in a machine learning
approach.&lt;/p&gt;

&lt;h3 id=&#34;level-0-no-tracking-at-all-no-network-communication&#34;&gt;Level 0: No tracking at all / no network communication&lt;/h3&gt;

&lt;p&gt;The most harmless situation: an app is downloaded or shared in an
anonymous way (Tor, etc.) and only uses offline features and/or uses
unlinkable side channels for updates (for example flash cards).  An
example could be a map application which only displays a map and reads
a phone’s GPS position to display the user’s location. There is no
network communication at all and it still offers a useful service to
its users. Map updates may be installed via flash cards or other
physical transportation media. The app does not need to request a new
map interactively from any server.&lt;/p&gt;

&lt;h3 id=&#34;level-1-inadvertent-tracking&#34;&gt;Level 1: Inadvertent tracking&lt;/h3&gt;

&lt;p&gt;This category includes tracking but the service provider and the app
never intended to actually use the resulting data / meta-data for the
purpose of tracking individuals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: to illustrate this category, recall our map app from above. Only
this time, it does request map (base layer) updates from a map server  every 7
days. It also checks every day, if the map viewer app is the latest version.
Based on this information, an attack could theoretically derive weekly IP
address &amp;ldquo;beacons&amp;rdquo; from some user. Since the update check was not personalized,
an attack can not be for sure, if an update request is from the same person or
not.  Hence, a user still has potentially enough anonymity.&lt;/p&gt;

&lt;p&gt;This and the next category probably (to be verified) constitute the majority of
&amp;ldquo;clean&amp;rdquo; apps.&lt;/p&gt;

&lt;h3 id=&#34;level-2-unintentional-tracking-by-use-of-chatty-libraries&#34;&gt;Level 2: Unintentional tracking by use of chatty libraries&lt;/h3&gt;

&lt;p&gt;This category tracks users already quite heavily. The motive is not to increase
ad revenue, build up user profiles to sell them nor to pass on the data to an
aggregator. The unintentional tracking stems more from the fact that the app
developer(s) used libraries which help them in developing the app and/or which
are simply useful for the overall user experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: if we revisit our map example, we could imagine that the map app
now also includes a search functionality. Users can type in the initial letters
of a street name and for every letter they type, an AJAX HTTP request is sent
to the map server. In addition, the developers felt that it would be useful to
receive APM (application performance monitoring) logs as well as crash reports
as well as a set of libraries to measure which features of an app the users
actually use the most. These logs are sent periodically to some log collection
server run by the developers.&lt;/p&gt;

&lt;p&gt;Note that we still do not talk about (Google, Facebook etc) cookies here. We
only talk about watching what users are typing (including backspace and
corrections - an attacker can literally watch their thoughts via the global
click-stream).&lt;/p&gt;

&lt;h3 id=&#34;level-3-ad-revenue-focused-tracking-of-users-and-or-user-behaviour-pseudonymized&#34;&gt;Level 3: Ad-revenue focused tracking of users and/or user behaviour (pseudonymized)&lt;/h3&gt;

&lt;p&gt;With this category, we are entering the area often described as surveillance
capitalism: users are receiving cookies (if it&amp;rsquo;s a web based app) and or have
unique IDs embedded in the app and these unique identifies (which are not tied
to a person in the first place and hence are a &amp;lsquo;nym of the user) are being sent
for nearly every network interaction. These IDs may (but not necessarily have
to ) serve as authentication / authorization token ( see OAUTH 1,2, OpenID
Connect) or may be purely auto-generated and simply serve for tracking actions
users takes over the course of his day (so that the interest of a user may be
extracted). These tracking IDs may then be forwarded and sold to aggregators.&lt;/p&gt;

&lt;p&gt;While this may be acceptable to some users, since the techniques use
pseudonymization, there is an implicit trap hidden in this approach: unique IDs
are usually long enough so that they are unique globally (for example UUID
strings). Thus, they can easily be correlated with real PII data and the
pseudonymization vanishes instantly.&lt;/p&gt;

&lt;h3 id=&#34;level-4-ad-revenue-focused-tracking-of-users-and-or-user-behaviour-linked-to-person&#34;&gt;Level 4: Ad-revenue focused tracking of users and/or user behaviour (linked to person)&lt;/h3&gt;

&lt;p&gt;This category fits most non-open source commercial apps such as FB messenger,
twitter, etc. (but it can occur as well in open source apps).  The business
model is to fully understand a user, his/her interests, his/her behaviour,
location (-&amp;gt; location tracking),  and very important - his/her circle of
friends (contacts), etc.  The &amp;ldquo;gold&amp;rdquo; in the app gold rush is a users&amp;rsquo; interest
and intent. In order to serve him/her adds better and faster (in the
sub-millisecond range). Again, as in the previous category, these tracking IDs
may then be forwarded and sold to aggregators.&lt;/p&gt;

&lt;p&gt;We assume the vast majority of apps fall into this category.&lt;/p&gt;

&lt;h3 id=&#34;level-5-full-scale-stealthy-tracking-surveilling-the-spouse-kids-state-actors-apt-attacks-general-surveillance-etc&#34;&gt;Level 5: Full scale stealthy tracking (surveilling the spouse, kids, state actors, APT attacks, general surveillance, etc.)&lt;/h3&gt;

&lt;p&gt;This category would fit any technique which tries to secretly monitor as many
actions on the whole smartphone (or potentially also via the smart phone on
computers) of a person.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: kids tracking apps. Or hidden apps which check what your
husband/wife is doing on his/her phone (and forwarding call logs , messages,
etc.). State actors tracking dissidents, journalists or any chosen target also
would use these techniques.&lt;/p&gt;

&lt;p&gt;Often these apps can be identified by their extended permissions but not
necessarily so. Well written apps in this category may be impossible to detect
without major reverse engineering efforts.&lt;/p&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Our work in the Tracking the Trackers project limits itself to Levels 3 and 4.
We intentionally omit level 5, since this is a cat-and-mouse game with the
attackers. It is rather trivial to change some behaviour for an attacker while
our detection mechanism remains open source.&lt;/p&gt;

&lt;h1 id=&#34;section-2-an-attacker-s-perspective-and-a-taxonomy&#34;&gt;Section 2: an attacker’s perspective and a taxonomy&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;There is nothing as practical as a good theory&amp;rdquo;
 &amp;ndash; Kurt Lewin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This section builds upon the work of &lt;a href=&#34;http://dud.inf.tu-dresden.de/literatur/Anon_Terminology_v0.31.pdf&#34;&gt;Pfitzmann and
Hansen&lt;/a&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
who did (to the author&amp;rsquo;s knowledge) the first thorough comparison of
terminology in literature with respect to the concepts of anonymity,
linkability, pseudonymity, etc. We believe that their work is a good
framework for thought. It also hints at some connections to Shannon&amp;rsquo;s
information theory and probability. However, the paper does not follow
through on the maths.&lt;/p&gt;

&lt;p&gt;The core insight of their work is that - if you include metadata of
communication flows over the internet, and if you assume an attacker which can
observe the whole network (passively)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, then true anonymity is nearly
impossible to achieve for any regular app or program.&lt;/p&gt;

&lt;p&gt;In this paper, we first briefly describe Pfitzmann&amp;rsquo;s and Hansens&amp;rsquo; model and
especially their attacker&amp;rsquo;s model / threat model. We then replicate their
definitions and add some definitions of our own. The next step is to link their
definitions to our categories of tracking.&lt;/p&gt;

&lt;p&gt;Equipped with these theoretical tools, we can proceed to define what we
consider tracking in Android apps and derive feature sets for an ML based
approach.&lt;/p&gt;

&lt;h2 id=&#34;the-pfitzmann-hansen-threat-model&#34;&gt;The Pfitzmann-Hansen threat model&lt;/h2&gt;

&lt;p&gt;The threat model assumes a classical sender-receiver (source/sink) information
model where the communication network is usually the internet. They assume an
attacker to be yet another (possibly all-knowing) passive receiver. If messages
pass the communication network, attributes (i.e. meta-data&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; such as time +
time zone when a message was sent, received, the packet size, the protocols
used etc) may be derived by a receiver. These attributes may become another new
message.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;sender-receiver-model.png&#34; alt=&#34;sender-receiver-model&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If we apply  Pfitzmann&amp;rsquo;s and Hansens&amp;rsquo; model to our levels, we arrive at the following insights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Level 0&lt;/strong&gt;: the app is quiet → no harm, an all-knowing attacker can see the download of a level 0 app in the very best of cases.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Level 1&lt;/strong&gt;: the passive attack may derive IP addresses (and hence some ideas of a user’s location) and time stamps of when the app was in use. → the passive attacker can already track the user to some extent iff (if and only if) he also has access to the telecom’s IP address assignment database for that particular time window. This is usually only possible for nation state attackers. &lt;strong&gt;→&lt;/strong&gt; out of scope.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Level 2&lt;/strong&gt;: In this scenario, it already depends a lot if the app is sending APMs, crash reports, or other “chatty library” messages. If unencrypted, a passive attacker may - already in this category gain a lot of information on the user.  &lt;strong&gt;→&lt;/strong&gt; we propose to include detection of APMs/crash reporting libraries in future versions of the tracking the trackers project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Level 3&lt;/strong&gt;: While it is nice to notice that the developers tried to pseudonymise tracking in this category, it does not help the user very much. As long as a passive attacker may detect the pseudonymized IDs in messages flowing to a central server, he wins. He can track the user. Countermeasure: a guaranteed rotation of these unique IDs/tokens every x seconds (at fixed intervals).
→ we propose to look at this level of tracking in our research in order to identify unique tokens/API keys, unique IDs in apps which are easily detectable in order to guide the F-Droid store developer on how to avoid common pitfalls associated with fixed IDs/API keys etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Level 4&lt;/strong&gt;: for an attacker, this is the gold mine. Here, nearly every action may be passively observed. This is the case, we assume to be the most prevalent one in most apps (proof: just take a random app and look at the tcpdump stream of data it sends every second). We will aim to detect the most common tracking libraries.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Level 5&lt;/strong&gt;: here the attacker basically gains an upgrade from a passive attacker to an active attacker should he wish so. Game over for the user → out of scope for our research.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;

&lt;p&gt;We identified a rough categorization of 5 levels of tracking. We reasoned what
information an attacker may gain at each level and we defined the scope of our
research.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;(&lt;em&gt;This work was supported by NLnet&amp;rsquo;s &lt;a href=&#34;https://nlnet.nl/thema/NGIZeroPET.html&#34;&gt;NGI Zero PET&lt;/a&gt; fund.&lt;/em&gt;)&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&amp;ldquo;Anonymity, Unlinkability, Undetectability, Unobservability, Pseudonymity, and Identity Management – A Consolidated Proposal for Terminology&amp;rdquo;, 2008, Andreas Pfitzmann (TU Dresden), Marit Hansen (ULD Kiel). &lt;a href=&#34;http://dud.inf.tu-dresden.de/literatur/Anon_Terminology_v0.31.pdf&#34;&gt;http://dud.inf.tu-dresden.de/literatur/Anon_Terminology_v0.31.pdf&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;An assumption which is not far fetched - see the Snowden papers.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;Compare with the quote &amp;ldquo;we kill people based on metadata&amp;rdquo; by the former CIA/NSA director Hayden. &lt;a href=&#34;https://abcnews.go.com/blogs/headlines/2014/05/ex-nsa-chief-we-kill-people-based-on-metadata&#34;&gt;https://abcnews.go.com/blogs/headlines/2014/05/ex-nsa-chief-we-kill-people-based-on-metadata&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Promise and Hazards of COVID Contact Tracing Apps</title>
      <link>https://guardianproject.github.io/info/2020/04/09/the-promise-and-hazards-of-covid-contact-tracing-apps/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2020/04/09/the-promise-and-hazards-of-covid-contact-tracing-apps/</guid>
      <description>&lt;p&gt;There has been increasing interest in the possibilities of tracking
people who are infected with Coronavirus using all of the various
methods that smart phones provide.  There is good reason: &amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Contact_tracing&#34;&gt;contact
tracing&lt;/a&gt;&amp;rdquo; has been a
pillar of public health efforts for decades.  It is an effective means
to curtail the spread of infectious disease.  At the same time,
governments, companies, and organizations are acting fast to offer
services to help end this current pandemic.  The problem is that many
of these are taking advantage of these times to introduce more
tracking of people, more data collection, and more control over
people.  We must not let contact tracing be used to reduce privacy
and increase unnecessary data collection.&lt;/p&gt;

&lt;p&gt;Privacy International has been collecting examples of
&lt;a href=&#34;https://privacyinternational.org/examples/tracking-global-response-covid-19&#34;&gt;new data and tracking that are being introduced&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then there this is the specific issue of contact tracing apps that are
being introduced around the world.  These apps can be made in a way to
fully respect privacy, and to build trust with its users.  Unfortunately the majority of the ones introduced are failing to live up to this promise.  Singapore&amp;rsquo;s TraceTogether was the first to rise to prominence, it is proprietary software with obfuscated operations. (&lt;em&gt;update: the source for a &lt;a href=&#34;https://github.com/opentrace-community&#34;&gt;reference implementation&lt;/a&gt; has since been released, but TraceTogether is still proprietary&lt;/em&gt;)   A &lt;a href=&#34;https://medium.com/@zerotypic/reversing-tracetogether-initial-analysis-edc940e86aa8&#34;&gt;some&lt;/a&gt; &lt;a href=&#34;https://splira.com/2020-03-28/&#34;&gt;audits&lt;/a&gt; pointed to failings, including potentially sending location data to a third-party analytics service.  There are now many of these apps, and based on &lt;a href=&#34;https://forensic.defensive-lab.agency/covid/&#34;&gt;this analysis&lt;/a&gt;, most of them are sending data to third party tracking companies.&lt;/p&gt;

&lt;p&gt;On top of that, these audits took much more effort because the apps
were not open source.  There have been many pledges of making these
apps open source, but the only one that we have found that is actually
open source is &lt;a href=&#34;https://privatekit.mit.edu/&#34;&gt;Private Kit&lt;/a&gt;.  &lt;a href=&#34;https://fsfe.org/news/2020/news-20200402-02.en.html&#34;&gt;Free, open
source software is essential&lt;/a&gt;
for software that needs to be widely
trusted.  This is only key design element, the CCC has laid out a
complete list of &lt;a href=&#34;https://www.ccc.de/en/updates/2020/contact-tracing-requirements&#34;&gt;requirements for creating trustworthy contact
tracing apps&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We stand ready to help any of these efforts achieve real privacy and
build public confidence.  People must trust these apps for them to be
effective.  Transparency is essential to building trust.  They must be
secure so they do not leak personal data.  And they must be usable by
the vast majority of the population.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MASQUE Review</title>
      <link>https://guardianproject.github.io/info/2020/02/25/masque-review/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2020/02/25/masque-review/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/wg/masque/about/&#34;&gt;MASQUE&lt;/a&gt; is set of related IETF drafts for specifying flexible proxying built into a standard webserver.  It is meant to be deployed on a server that is serving public websites, then this connection can be reused for proxying generic connections.  It is very much a work in progress, so any of this can change.  It is currently built on top of the QUIC+HTTP/3 and HTTP/2+TLS+TCP protocols.  The website and proxy packets look the same, and all connections to the webserver will be shared and reused, regardless of whether its a web page request or proxy traffic.  Each new proxy/website request will reuse any existing connection, providing a key reduction in metadata that makes all the packets blend together from the point of view of the network observer.  For example, to prevent the network observer from corrolating requests to proxy with the outbound request to the destination, a client could first connect to the website, then some time later, connect to the proxy.&lt;/p&gt;

&lt;p&gt;QUIC is an Internet protocol on the verge of being standardized by the IETF, initially developed by Google.  Approximately 50% of traffic from Chrome browsers to Google sites currently use QUIC, so it already has some large scale adoption.  MASQUE is very similar to Meek and Encrypted &lt;em&gt;ClientHello&lt;/em&gt; (aka ECH or Encrypted SNI) domain fronting in how it functions, and all of them &amp;ldquo;hide in plain site&amp;rdquo; by making circumvention traffic look the same as traffic that censors are unwilling to block.  Like ESNI, MASQUE could be totally blocked in countries that deem QUIC too large a risk, e.g. China already blocks Google, so blocking the QUIC protocol right now would have very low cost to them.  So it must be rolled out and gain broad adoption before it can be an effective circumvention tool.&lt;/p&gt;

&lt;p&gt;One use case is individuals enabling MASQUE on their personal websites, or organizations on their websites.  Another use case is to provide travelling employees with VPN access even with local networks are blocking VPNs based on the protocols (e.g. DPI to identify OpenVPN or Wireguard traffic).  Hosting providers and CDNs are not likely to to deploy MASQUE behind their main TLS certificate, as they are not willing to take the risk of getting blocked, just like with domain fronting.  MASQUE/QUIC does not change the domain fronting formula, instead, it just provides a different mechanism to leverage.&lt;/p&gt;

&lt;p&gt;One key feature of MASQUE is a means of requiring authentication to the proxy before it gives any information back at all, including even if it exists.  It does this with a custom authentication method where the replies are defined only as &lt;code&gt;200 OK&lt;/code&gt; for successful authentication or &lt;code&gt;404 Not Found&lt;/code&gt; for everything else.  This is an idea that could also be used in Pluggable Transports in general.&lt;/p&gt;

&lt;h2 id=&#34;relation-to-pluggable-transports&#34;&gt;Relation to Pluggable Transports&lt;/h2&gt;

&lt;p&gt;The MASQUE Obsfuscation and HTTP Transport Authentication pieces of MASQUE are directly relevant to Pluggable Transports (PT), and could be included as part of the suite of standards for implementing complete PT solutions.  The non-discoverable authentication method is useful for any PT that already requires some kind of key and is served via an public network socket.   Standardizing the proxy setup and configuration makes sense to do both for MASQUE as much as PT.  Right now, there are a wide variety of proxy configurations for PT with circumvention and VPN service providers.&lt;/p&gt;

&lt;h2 id=&#34;masque-as-onion-routing-and-tor-components&#34;&gt;MASQUE as Onion Routing and Tor Components&lt;/h2&gt;

&lt;p&gt;There are also some efforts to expand the scope of MASQUE into a Tor replacement based on QUIC and HTTP CONNECT proxies.  This is a nice idea, but it should not distract from the core MASQUE pieces which will provide real value now.  This area of work is now represented by three drafts: HTTP Transport Authentication, MASQUE Obfuscation, and MASQUE.  Without a drastically expanded scope, MASQUE cannot replace Tor.  It can provide one key but small building block: the base mechanism for onion routing based on HTTP CONNECT and QUIC.  This could potentially allow Tor middle relay services to be implemented with a standard webserver like nginx with only a small custom plugin.  This would not change the requirement for all of the various Tor network management services.&lt;/p&gt;

&lt;h2 id=&#34;sources&#34;&gt;Sources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-tls-27&#34;&gt;https://tools.ietf.org/html/draft-ietf-quic-tls-27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.torproject.org/pipermail/tor-dev/2018-March/013026.html&#34;&gt;https://lists.torproject.org/pipermail/tor-dev/2018-March/013026.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://davidschinazi.github.io/masque-drafts/draft-schinazi-masque.html&#34;&gt;https://davidschinazi.github.io/masque-drafts/draft-schinazi-masque.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://davidschinazi.github.io/masque-drafts/draft-schinazi-masque-obfuscation.html&#34;&gt;https://davidschinazi.github.io/masque-drafts/draft-schinazi-masque-obfuscation.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://davidschinazi.github.io/masque-drafts/draft-schinazi-httpbis-transport-auth.html&#34;&gt;https://davidschinazi.github.io/masque-drafts/draft-schinazi-httpbis-transport-auth.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mailarchive.ietf.org/arch/msg/masque/Cxh1phx6vFgn19jyANmt2YwLDqQ/&#34;&gt;https://mailarchive.ietf.org/arch/msg/masque/Cxh1phx6vFgn19jyANmt2YwLDqQ/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/meeting/104/materials/slides-104-secdispatch-the-masque-protocol-draft-schinazi-masque-00&#34;&gt;https://datatracker.ietf.org/meeting/104/materials/slides-104-secdispatch-the-masque-protocol-draft-schinazi-masque-00&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/2019/04/16/exploring-possibilities-of-pluggable-transports-on-android/&#34;&gt;https://guardianproject.info/2019/04/16/exploring-possibilities-of-pluggable-transports-on-android/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tracking the Trackers: using machine learning to aid ethical decisions</title>
      <link>https://guardianproject.github.io/info/2020/01/16/tracking-the-trackers-using-machine-learning-to-aid-ethical-decisions/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2020/01/16/tracking-the-trackers-using-machine-learning-to-aid-ethical-decisions/</guid>
      <description>

&lt;p&gt;F-Droid is a free software community app store that has been working since 2010 to make all forms of tracking and advertising visible to users. It has become the trusted name for privacy in Android, and app developers who sell based on privacy make the extra effort to get their apps included in the F-Droid.org collection. These include &lt;a href=&#34;https://f-droid.org/packages/com.nextcloud.client&#34;&gt;Nextcloud&lt;/a&gt;, Tor Browser, &lt;a href=&#34;https://f-droid.org/packages/de.thecode.android.tazreader&#34;&gt;TAZ.de&lt;/a&gt;, and &lt;a href=&#34;https://f-droid.org/packages/de.tutao.tutanota&#34;&gt;Tutanota&lt;/a&gt;.  Auditing apps for tracking is labor intensive and error prone, yet ever more in demand. F-Droid already has tools to aide contributors in this process, visible in the &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/merge_requests&#34;&gt;app submission&lt;/a&gt; and &lt;a href=&#34;https://gitlab.com/fdroid/rfp/issues&#34;&gt;Request For Packaging (RFP)&lt;/a&gt; issue trackers.  We also have functional prototypes of using machine learning to drastically speed up this process by augmenting humans, rather than replacing them.&lt;/p&gt;

&lt;p&gt;Since the prime motivation of the F-Droid community is ethical software distribution, algorithms will never replace humans in making ethical decisions. We have also explored using machine learning to detect tracking in a more generic way, without manually compiled lists of tracking libraries. With this funding, we will improve the F-Droid tools, and make them generally available for any use case needing to reliably detect trackers in Android apps. This builds upon our &lt;a href=&#34;https://f-droid.org/en/2017/12/14/new-collaborations-on-exposing-tracking.html&#34;&gt;collaboration&lt;/a&gt; with &lt;a href=&#34;https://exodus-privacy.eu.org/&#34;&gt;Exodus Privacy&lt;/a&gt; and &lt;a href=&#34;https://github.com/reddr/LibScout&#34;&gt;LibScout&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This project comes out of some proof of concept work that &lt;a href=&#34;https://www.lo-res.org/~aaron/&#34;&gt;Aaron Kaplan&lt;/a&gt; and Hans-Christoph Steiner did, working with students in the Vienna Economics University&amp;rsquo;s (WU) &lt;a href=&#34;https://www.wu.ac.at/en/infobiz/teaching/sbwl-data-science&#34;&gt;Data Science Lab&lt;/a&gt;.  We focused on using machine learning with Android apps, first to detect malware, then second to detect tracking libraries.  It is of course ultimately an outgrowth of the F-Droid community&amp;rsquo;s efforts, and Guardian Project&amp;rsquo;s funded efforts for building systems without any tracking at all.  And special thanks to F-Droid founder &lt;a href=&#34;https://en.wikipedia.org/wiki/Ciaran_Gultnieks&#34;&gt;Ciaran Gultnieks&lt;/a&gt; for setting the ethical tone that inspired us all, back in &lt;a href=&#34;https://f-droid.org/2010/09/30/no-free-beer.html&#34;&gt;2010&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;funding&#34;&gt;Funding&lt;/h2&gt;

&lt;p&gt;This current 44,500€ project is funded by NLnet&amp;rsquo;s &lt;a href=&#34;https://nlnet.nl/PET/&#34;&gt;Privacy &amp;amp; Trust Enhancing Technologies (PET) Fund&lt;/a&gt;.  F-Droid has received large, dedicated, computing resources from the &lt;a href=&#34;https://cfarm.tetaneutral.net/machines/list/&#34;&gt;GCC Compile Farm&lt;/a&gt;, as well as some shared resources from Aaron Kaplan.  The budget will be used entirely to pay for people&amp;rsquo;s time for the research, development, and integration work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Software development to get the existing LibScout and Exodus Privacy tools to be fully integrated into the F-Droid stack.&lt;/li&gt;
&lt;li&gt;Machine learning research and development.&lt;/li&gt;
&lt;li&gt;Community management, to coordinate with F-Droid contributors, app developers, tool developers, academic researchers, etc. as well to promote these tools&lt;/li&gt;
&lt;li&gt;Finalize and package up all the useful parts of this project, which also means getting them included in Debian&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;related-efforts&#34;&gt;Related Efforts&lt;/h2&gt;

&lt;p&gt;The general approach that we are taking here has been proven in the context of web pages. The Brave Browser includes &lt;a href=&#34;https://arxiv.org/pdf/1805.09155&#34;&gt;machine learning techniques&lt;/a&gt; for blocking ads and trackers in webpages.  It is a very similar idea to what we propose, but that example is embedded into a browser and only applies to web sites.&lt;/p&gt;

&lt;p&gt;Exodus Privacy has manually compiled an extensive list of tracking libraries and domains for receiving user data.  It then uses this to scan app from Google Play.  Those results are then reported on their website.  Exodus Privacy would directly benefit from this work, since they could use the tools we will create.&lt;/p&gt;

&lt;p&gt;Ghostery uses AI techniques to dynamically block ads in web pages. (&lt;a href=&#34;https://www.wired.com/story/ghostery-deploys-ai-in-fight-against-ad-trackers/&#34;&gt;https://www.wired.com/story/ghostery-deploys-ai-in-fight-against-ad-trackers/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;F-Droid has its own &lt;code&gt;fdroid scanner&lt;/code&gt; for doing checks based on manually prepared regular expressions.  This was combined with Exodus Privacy into F-Droid&amp;rsquo;s &lt;a href=&#34;https://gitlab.com/fdroid/rfp/issues&#34;&gt;issuebot&lt;/a&gt; which automatically scans apps that users request to be added to F-Droid.&lt;/p&gt;

&lt;p&gt;LibScout uses machine learning to detect which versions of which libraries are included in an Android app (APK).  Using the list of libraries from Exodus Privacy, we worked with the LibScout author to create a functional prototype of a tracking library detector.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.sec.cs.tu-bs.de/pubs/2014-ndss.pdf&#34;&gt;Drebin&lt;/a&gt; clearly demonstrated that machine learning can be used to automatically classify Android apps based on certain aspects of their behavior. Their aim was to find malware.  Working with CERT.at and the WU Data Science Lab, we reproduced the results of the Drebin paper.&lt;/p&gt;

&lt;h2 id=&#34;the-challenges&#34;&gt;The challenges&lt;/h2&gt;

&lt;p&gt;The biggest promise of this project is also the biggest technical challenge: finding a way to take datasets about what includes tracking libraries (e.g. F-Droid manual review, LibScout, Exodus Privacy), and turning that into a more general machine learning approach.  We will have to explore a wide range of possible features to include in the machine learning that are distinct from the tracking libraries themselves.  This general approach will provide tracking detection with more automation and less maintenance work of rerunning the machine learning on updated datasets as new tracking libraries are put into use.&lt;/p&gt;

&lt;p&gt;The technical methods for determining whether an app includes trackers are well known and described.  They currently require knowledge of Android development.  Machine learning has been proven to be able to reliably spot trackers in apps, this project will turn working prototypes into production software, integrate it into F-Droid community-driven processes, and make these new tools easily available for anyone else to apply to their specific use cases. Given an Android apps downloaded from anywhere, these new tools will be able to mark which ones have any kind of tracking in them, with a very high degree of certainty.  With the portion of the project that involves applying LibScout, at this point, the idea has been proven with prototypes.  Applying it is a straightforward matter of bringing a proven prototype to production.&lt;/p&gt;

&lt;p&gt;Organizations relying on proprietary apps that must follow strict data protection requirements, like banks under the GDPR, can use these tools to ensure that apps they rely on do not contain illegal tracking, and to ensure that such tracking is not added in future releases.&lt;/p&gt;

&lt;p&gt;These techniques are also applicable to other platforms, like Progressive Web Apps and Apple iOS.  Bootstrapping another platform would require a marked training set of apps to feed to the machine learning.  F-Droid already provides this set, and Android is the most popular OS in the world, making Android the ideal platform to start this work.&lt;/p&gt;

&lt;h2 id=&#34;humans-at-the-core&#34;&gt;Humans at the core&lt;/h2&gt;

&lt;p&gt;F-Droid is a community run free software project very much in the same spirit as Debian.  The community has always aimed to provide 100% verified free software, built from source.  From the beginning, there was also an interest in other ethical considerations as well, these are expressed via F-Droid&amp;rsquo;s &amp;ldquo;Anti-Features&amp;rdquo;.  These are things tagged with Tracking (contains tracking), Ads (includes advertising), and NonFreeNet (requires a non-free network service).  The process of ensuring that the apps are 100% free software as well as tagging apps with the required Anti-Features is a manual process that many people contribute to, that is aided by quite a bit of automation.  This project fits directly into this existing ecosystem.  It will both quickly provide improvements in contributors&amp;rsquo; workflow based on the existing prototype, as well as experiments towards drastically improving the whole workflow of anyone working to track trackers.&lt;/p&gt;

&lt;p&gt;F-Droid fits into the whole Android app ecosytem in a very specific role.   It is the one source that only distributes free software, and has built a well deserved reputation for not compromising on the ethics that guide the community.  This has led it to become the standard &amp;ldquo;clean set&amp;rdquo; in all manner of research into Android malware and tracking.  Many academic papers covering Android malware cite f-droid.org as the source of ground truth.&lt;/p&gt;

&lt;p&gt;In closing, it is important to highlight that it is essential to keep humans always at the center of of these tools.  We are building tooling to augment humans, not replace them. Since the prime motivation of the F-Droid community is to build ethical software distribution, algorithms will never replace humans in making decisions based on ethics.  The tools can automate the technical details, so that contributors do not need to understand them in order to meaningfully help with the process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NetCipher &#43; Conscrypt for the best possible TLS</title>
      <link>https://guardianproject.github.io/info/2019/12/17/netcipher-conscrypt-for-the-best-possible-tls/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://guardianproject.github.io/info/2019/12/17/netcipher-conscrypt-for-the-best-possible-tls/</guid>
      <description>&lt;p&gt;A new NetCipher library has recently been merged:
&lt;a href=&#34;https://gitlab.com/guardianproject/NetCipher/merge_requests/86&#34;&gt;&lt;em&gt;netcipher-conscrypt&lt;/em&gt;&lt;/a&gt;.
In the same vein as the other NetCipher libraries,
&lt;em&gt;netcipher-conscrypt&lt;/em&gt; wraps the Google
&lt;a href=&#34;https://source.android.com/devices/architecture/modular-system/conscrypt&#34;&gt;Conscrypt&lt;/a&gt;
library, which provides the latest
&lt;a href=&#34;https://en.wikipedia.org/wiki/Transport_Layer_Security&#34;&gt;TLS&lt;/a&gt; for any
app that includes it.  &lt;em&gt;netcipher-conscrypt&lt;/em&gt; lets apps then disable old
TLS versions like TLSv1.0 and TLSv1.1, as well as disable TLS Session
Tickets.  This is an alpha release because it only works on recent
Android versions (8.1 or newer).  The actual functionality works well,
the hard part remains making sure that it is possible to inject
&lt;em&gt;netcipher-conscrypt&lt;/em&gt; as the TLS provider on all Android devices and
versions.  And the last missing piece is finding the right place in
Conscrypt to configure proxying to support Tor or other privacy
proxies&lt;/p&gt;

&lt;p&gt;Before Conscrypt, Android apps relied on the Android OS itself to
provide TLS.  Normally, software uses the TLS provided by the
operating system.  Since too often Android devices do not get software
updates, lots of users are stuck on old TLS versions.  So Google split
out the TLS stack from Android itself and made the Conscrypt library
from it so it can be independently updated.  Guardian Project has been
taking this approach for almost 10 years, starting with
SQLCipher-for-Android and IOCipher libraries.  We are happy to see
Google doing this themselves to give us more platform flexibility and
security.  We plan on using this as a platform for making &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-tls-sni-encryption&#34;&gt;ESNI
(Encrypted SNI)&lt;/a&gt;
available to all Android apps.&lt;/p&gt;

&lt;p&gt;It is exciting to see ideas that we have been championing over the
past decade to get mainstream adoption.  TLS Session Tickets have
always had serious &lt;a href=&#34;https://blog.filippo.io/we-need-to-talk-about-session-tickets/&#34;&gt;security&lt;/a&gt; and &lt;a href=&#34;https://www.theregister.co.uk/2018/10/19/tls_handshake_privacy/&#34;&gt;privacy&lt;/a&gt; issues, Android 10 &lt;a href=&#34;https://source.android.com/devices/architecture/modular-system/conscrypt#consrypt-q&#34;&gt;now
provides&lt;/a&gt;
an official API for disabling TLS Session Tickets:
&lt;a href=&#34;https://developer.android.com/reference/android/net/ssl/SSLSockets.html&#34;&gt;android.net.ssl.SSLSockets&lt;/a&gt;
and
&lt;a href=&#34;https://developer.android.com/reference/android/net/ssl/SSLEngines.html&#34;&gt;android.net.ssl.SSLEngines&lt;/a&gt;.
And the idea of per-app file encryption, which &lt;em&gt;IOCipher&lt;/em&gt; provides, can
now be largely provided by the built-in &lt;a href=&#34;https://source.android.com/security/encryption/file-based&#34;&gt;Android File-Based Encryption
(FBE)&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Orbot v16: a whole new look, and easier to use!</title>
      <link>https://guardianproject.github.io/info/2018/01/05/orbot-v16-a-whole-new-look-and-easier-to-use/</link>
      <pubDate>Fri, 05 Jan 2018 13:14:17 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2018/01/05/orbot-v16-a-whole-new-look-and-easier-to-use/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/apps/orbot/&#34;&gt;Orbot: Tor for Android&lt;/a&gt; has a new release (&lt;a href=&#34;https://gitweb.torproject.org/orbot.git/tag/?h=16.0.0-RC-2&#34;&gt;tag&lt;/a&gt; and &lt;a href=&#34;https://gitweb.torproject.org/orbot.git/diff/CHANGELOG?h=16.0.0-RC-1-CHANGELOG&amp;amp;id=5542e8e192fcff24284179e7fdb31cf877f79efd&#34;&gt;changelog&lt;/a&gt;), with a major update to the user experience and interface. This is the 16th major release of Orbot, since it was launched in late 2009.&lt;/p&gt;

&lt;p&gt;The main screen of the app now looks quite different, with all the major features and functions exposed for easy access. We have also added a new onboarding setup wizard for first time users, that assists with configuring connections to the Tor network for users in places where Tor itself is blocked. This release also continues to support users looking to use Orbot to unblock specific apps, that may not be available on their network or country. From the main screen, users can activate Orbot’s built-in VPN feature, and easily choose which specific apps they want to be routed over the Tor network. You can also refresh your Tor identity, rebuilding all circuit connections through the network, using the circular reload icon in the expanded notification provided by Orbot.&lt;/p&gt;

&lt;p&gt;The update is rolling out on &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.torproject.android&#34;&gt;Google Play&lt;/a&gt;, and will also be available on &lt;a href=&#34;https://guardianproject.info/fdroid/&#34;&gt;Guardian Project’s F-Droid Repo&lt;/a&gt; soon. You can also find &lt;a href=&#34;https://github.com/n8fr8/orbot/releases&#34;&gt;Android APKs on Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;THANKS TO: pgerber, syphyr, Khsed4, BjarniRunar, Unpublished, igortoliveira, goapunk, SpotComms, AkshatAgrawal05, dixidroid, arrase and others for the bug reports and fixes on the Orbot app. Thanks to &lt;a href=&#34;https://twitter.com/wwwiretap&#34;&gt;Sina&lt;/a&gt; with Team Cymru for the extra infrastructure provided to help users in places where Tor itself is blocked. Also, &lt;a href=&#34;https://twitter.com/mrphs&#34;&gt;Nima&lt;/a&gt; for the guidance, support and motivation to get this release out sooner rather than later!&lt;/p&gt;

&lt;div id=&#39;gallery-13&#39; class=&#39;gallery galleryid-13934 gallery-columns-3 gallery-size-medium&#39;&gt;
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122015.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122015-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122015-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122015-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122015-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122015.png 1440w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122035.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122035-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122035-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122035-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122035-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122035.png 1440w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122111.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122111-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122111-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122111-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122111-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122111.png 1440w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#34;clear: both&#34; /&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122301.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122301-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122301-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122301-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122301-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122301.png 1440w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;dl class=&#39;gallery-item&#39;&gt;
    &lt;dt class=&#39;gallery-icon portrait&#39;&gt;
      &lt;a href=&#39;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122344.png&#39;&gt;&lt;img width=&#34;169&#34; height=&#34;300&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122344-169x300.png&#34; class=&#34;attachment-medium size-medium&#34; alt=&#34;&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122344-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122344-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122344-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2018/01/device-2018-01-05-122344.png 1440w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
  
  &lt;br style=&#39;clear: both&#39; /&gt;
&lt;/div&gt;

&lt;p&gt;/** v16.0.0 RC 1 / 5 Jan 2018 / 309c42be916d866a28adacb0a4f92d692cbd6009 **/&lt;/p&gt;

&lt;p&gt;7e9890e tweak default bridge behavior based on locale&lt;br /&gt;
fec853c updates to notification for Android O / SDK26&lt;br /&gt;
b161043 Merge pull request #106 from Unpublished/fix_binary_search&lt;br /&gt;
ab472d5 Merge branch ‘syphyr-master’&lt;br /&gt;
4fc3e7e Merge branch ‘master’ of &lt;a href=&#34;https://github.com/syphyr/orbot&#34;&gt;https://github.com/syphyr/orbot&lt;/a&gt; into syphyr-master&lt;br /&gt;
792ee2b Merge branch ‘BjarniRunar-master’&lt;br /&gt;
0d4a735 Merge branch ‘master’ of &lt;a href=&#34;https://github.com/BjarniRunar/orbot&#34;&gt;https://github.com/BjarniRunar/orbot&lt;/a&gt; into BjarniRunar-master&lt;br /&gt;
c7b1441 add comment about app updates URL&lt;br /&gt;
d21ff80 update strings and code for switching Locale in app&lt;br /&gt;
5c5790c fix binary search&lt;br /&gt;
38b0063 update build to &lt;sup&gt;16000005&lt;/sup&gt;&amp;frasl;&lt;sub&gt;6&lt;/sub&gt; for 16.0.0-BETA-2&lt;br /&gt;
7da26a3 update strings from transifex&lt;br /&gt;
ce714fa use the proper localized start/end params&lt;br /&gt;
38cc29c externalize more strings&lt;br /&gt;
8bcc9a4 update gitignore&lt;br /&gt;
6e3b6ba add onboarding strings localizatoin&lt;br /&gt;
154e373 ensure appupdater check starts up&lt;br /&gt;
703f8a1 move update back to older (reduce version code)&lt;br /&gt;
b556518 move update back to older version&lt;br /&gt;
680d108 update json for testing&lt;br /&gt;
e4f6348 test updating json&lt;br /&gt;
dafcdd7 enable AppUpdater notificatoins through Github&lt;br /&gt;
3b5a361 update handling of vpn enabled and app onclick&lt;br /&gt;
e21474c updates to layout and strings for bridge wizard&lt;br /&gt;
2a9691c make sure the back arrow works&lt;br /&gt;
244231c remove activity no longer used&lt;br /&gt;
0284130 remove out activity no longer used&lt;br /&gt;
e487f34 update strings&lt;br /&gt;
8fd0bd0 update tor-android to 0.3.19b (updated geoip databases)&lt;br /&gt;
ad51bed update transifex configuration&lt;br /&gt;
a08c707 update app store descriptions&lt;br /&gt;
2ced17a update build SDK targets to 26&lt;br /&gt;
5c22de2 manifest updates: remove superuser, enable chromebooks&lt;br /&gt;
b4aa9d8 more improvements for bridge wizard&lt;br /&gt;
df37b8c add bridge wizard testing code&lt;br /&gt;
14ce4f6 big update for new onboarding, bridge wizard&lt;br /&gt;
2ceacf6 move bridges to raw resources&lt;br /&gt;
938a740 improve vpn app enable view on main activity&lt;br /&gt;
ba358a4 add new orfox and settings icon&lt;br /&gt;
5bd5a56 VPN should be off by default&lt;br /&gt;
e464044 connection might be null&lt;br /&gt;
51216a4 Add new preference: pref_open_proxy_on_all_interfaces&lt;br /&gt;
21b4521 Update version strings in help-&amp;gt;about&lt;br /&gt;
5500b50 update spuport library version&lt;br /&gt;
546310a improve notifications, add refresh/newnym button&lt;br /&gt;
877406f tweak layout&lt;br /&gt;
b68132b fix title for tor app section&lt;br /&gt;
7210223 fix handling of intents&lt;br /&gt;
47e10e7 fix issues with bridge selection UI&lt;br /&gt;
e6bd23a more UI updates and small improvements&lt;br /&gt;
d9bd32a more UI updates&lt;br /&gt;
7303a33 work on the new UI update&lt;br /&gt;
6a19bf6 update UI tweaks for next release&lt;br /&gt;
3741434 don’t show app selection each time you turn VPN on/off&lt;br /&gt;
4df2fcf move “other” installer back to tor resource installer&lt;br /&gt;
f3f9162 don’t delete installed binaries&lt;br /&gt;
6493d8d Merge pull request #104 from igortoliveira/remove-java-file&lt;br /&gt;
fc4d6aa improve app loading time for VPN app dialog&lt;br /&gt;
fbeff25 Remove leftover Java file&lt;br /&gt;
544ea7b update build to use tor version constant from tor-android-binary&lt;br /&gt;
977167b ZMerge branch ‘master’ of github.com:n8fr8/orbot&lt;br /&gt;
b07d4fe removed unused submodules, moved to gradle tor-android&lt;br /&gt;
d392ecd remove unneeded external dirs for making tor&lt;br /&gt;
3d729fc switch to using tor-android binary in TorService&lt;br /&gt;
6f364de use the new tor-android gradle dependency &lt;a href=&#34;https://github.com/n8fr8/tor-android&#34;&gt;https://github.com/n8fr8/tor-android&lt;/a&gt;&lt;br /&gt;
c7f834b moving binary files, use tor-android gradle&lt;br /&gt;
3b5e27e removing external depends, moving to tor-android gradle&lt;br /&gt;
898f64a Merge pull request #99 from goapunk/update-BUILD-instructions&lt;br /&gt;
e14d647 update BUILD&lt;br /&gt;
fce5bde add autopoint to dependencies&lt;br /&gt;
72c7e04 Merge pull request #97 from SpotComms/padding&lt;br /&gt;
8cf412a Merge pull request #98 from goapunk/add-lzma-zstd-as-dependency&lt;br /&gt;
c1dfc29 Update BUILD instructions&lt;br /&gt;
9ca36e1 Add lzma and zstd&lt;br /&gt;
6e4b700 Expose *ConnectionPadding&lt;br /&gt;
71e3464 Merge pull request #94 from Unpublished/fix88&lt;br /&gt;
cbffc1d remove some transproxy left overs&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Haven: Building the Most Secure Baby Monitor Ever?</title>
      <link>https://guardianproject.github.io/info/2017/12/22/haven-building-the-most-secure-baby-monitor-ever/</link>
      <pubDate>Fri, 22 Dec 2017 09:07:00 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/12/22/haven-building-the-most-secure-baby-monitor-ever/</guid>
      <description>&lt;p&gt;About eight months ago, friends at the &lt;a href=&#34;https://freedom.press/&#34;&gt;Freedom of the Press Foundation&lt;/a&gt; reached out to us, to see if we were interested in prototyping an idea they had been batting around. They knew that from projects like &lt;a href=&#34;https://guardianproject.info/apps/camerav&#34;&gt;CameraV&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.info/2017/02/24/combating-fake-news-with-a-smartphone-proof-mode/&#34;&gt;ProofMode&lt;/a&gt;, that we knew how to tap into the sensors on smartphones to do interesting things. They also knew we could connect devices together using encrypted messaging and onion routing, through our work on &lt;a href=&#34;https://chatsecure.org&#34;&gt;ChatSecure&lt;/a&gt; and Tor (&lt;a href=&#34;https://guardianproject.info/apps/orbot&#34;&gt;Orbot!&lt;/a&gt;). They also knew of our deep interest in bringing ideas to life that can solve real problems faced by people out on the front lines (both at home and abroad), who often are more in danger from physical threats, than digital. They had a concept that would bring all of these things together, and just wanted to see if it was even possible. We were game, and well, here we are today, announcing a real working public beta, and a new open-source project, that we are extremely excited about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IT’S NOT JUST A PHONE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At some point soon, we should stop calling the smartphones that over two billion people carry with them everyday and everywhere, phones at all. These devices have powerful processors with multiple cores, at gigahertz speeds, and gigabytes of RAM and storage. They have at least two cameras, now often three, arrays of microphones to capture sound near and far, and high definition, hyper sensitive touch screens for controlling them. They contain multiple radios and signal processors, that allow you to make crystal clear calls to someone on the other side of the planet, live stream 4K video, and download a game all at once. Most importantly, for the work we are announcing today, they contain an amazing variety of sensors, that can measure gravity, motion, air pressure, ambient light, temperature, and your precise location on the planet. I don’t think Alexander Graham Bell ever imagined a telephone doing all of these things. Once you step back from thinking of these devices as phones, and instead as powerful general purpose portable computing platforms, a world of possibilities and potential uses opens up wide. Even better, many people have an old second-hand, last generation device lying around, ready to be transformed into a computing platform much more powerful than a Raspberry Pi or some generic Internet of Shoddy (!) Things platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A SAFE ROOM IN YOUR POCKET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This re-imagining of a smartphone as something more, is what inspired the development of &lt;a href=&#34;https://guardianproject.github.io/haven/&#34;&gt;Haven&lt;/a&gt;, a new open-source project and mobile app we are announcing today, built in partnership with Freedom of the Press Foundation. The concept of &lt;a href=&#34;https://guardianproject.github.io/haven/&#34;&gt;Haven&lt;/a&gt;, as imagined by Micah F. Lee and Edward Snowden, is based on the notion that any smartphone could be turned into a personal, portable security device, to watch for unexpected intrusions into physical spaces.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/Fr0wEsISRUw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;They call it a “safe room” in your pocket, or way to defeat “evil maid” attacks, that lets you know when you’ve been targeted by a “black bag” operation. I also like to think that through Haven, we have unexpectedly created the most powerful, secure and private baby monitor system ever. By tapping into the sensors and processing power on these devices with custom software, a system could feel the vibrations of someone walking, detect the shine of a flashlight, hear the sound of a door opening (or a child crying), or see someone entering into the view of a camera. All of these “intruder alerts” are recorded on the device, so that the victim can have evidence of their unwanted guest. Even better, they can receive real-time secure and private notifications, with images and sound, as it happens, and take appropriate actions.&lt;/p&gt;

&lt;p&gt;**YOU ARE THE WATCHER&lt;br /&gt;
**&lt;/p&gt;

&lt;p&gt;An important design goal of Haven, is to not require the user to share data with any third-party, or to have centralized infrastructure. It was clear that some might see Haven as a surveillance device (or “self” sous-veillance), which, regardless of who is in control of it, can be problematic and a vulnerability. Thus, it was a fundamental tenet to not require people to give up privacy, in order to gain security. The person we aim to help must have complete control of the system, the sensors and the captured data and media. In addition, the device must not simply record a stream of video, audio and sensors, hoover-ing up all things. Only when configurable sensor thresholds are crossed, is any data recorded permanently in the log. All of the processing and analysis of the sensor data happens locally on the device, and is only stored locally, and not in a cloud. The device itself can be protected by a strong password and disk encryption, to stop intruders from meddling or accessing any data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SIGNAL’D AND ONION’D&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If the intruders chooses to destroy or make off with a Haven device, thats fine. The every act of vandalism and theft is detected in progress, and the owner of the device is notified in real-time. All photos and audio can be sent remotely via notifications, ensuring the evidence is safe. Haven does currently support optional plaintext SMS notifications. This does leak some data to the mobile operator or anyone who can access your text messages, that you are using Haven.&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;https://guardianproject.github.io/haven/docs/preso/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img class=&#34;aligncenter wp-image-13927 size-large&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-11-1024x576.jpg&#34; alt=&#34;&#34; width=&#34;945&#34; height=&#34;532&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-11-1024x576.jpg 1024w, https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-11-300x169.jpg 300w, https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-11-768x432.jpg 768w, https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-11.jpg 1500w&#34; sizes=&#34;(max-width: 945px) 100vw, 945px&#34; /&gt;&lt;/a&gt;&lt;em&gt;Click to view our &lt;a href=&#34;https://guardianproject.github.io/haven/docs/preso/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;online presentation on Haven&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We provided SMS support because we wanted Haven to be used in parts of the world where mobile internet access isn’t available, is too expensive, or is heavily censored. The notification message sent over SMS provide minimal information to an attacker. Better than SMS, however, is the integrated support for sending fully end-to-end encrypted notifications, with photo and audio attachments, over Signal. This method allows you to use a device without a SIM card, or in airplane mode, since Signal utilizes the internet for communication, not the mobile operator network. Haven also includes support for Tor’s Onion Services, through integration with Orbot, the Tor app for Android. This allows you to activate a web service on your device, and make it accessible via a “.onion” address, which you can access from any Tor-enabled browser, like Tor Browser, Orfox or Onion Browser. This provides a surveillance-free, end-to-end encrypted channel between you and your device, through which you can access all data stored in Haven, past and present.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;INTERNET OF SHODDY THINGS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At this point, you might be saying to yourself “Wait, did these paranoid privacy hackers just building a surveillance camera? Are they trying to sell me on some kind of IoT crap?”. While we didn’t set out to try to address the insane amount of vulnerabilities, insecurities, and fundamental flaws that most most commercial home security devices have, we do admit that our work on Haven crosses over into that problem space. We knew that journalists, activists and others were not interested in setting up cameras and microphones watching themselves &lt;sup&gt;24&lt;/sup&gt;&amp;frasl;&lt;sub&gt;7&lt;/sub&gt;, streaming to the cloud, as a solution to their threat. We also knew, as discussed before, that linking any solution to a centralized cloud service that asked you to trust them, also didn’t make sense.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-07.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-large wp-image-13929&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-07-1024x576.jpg&#34; alt=&#34;&#34; width=&#34;945&#34; height=&#34;532&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-07-1024x576.jpg 1024w, https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-07-300x169.jpg 300w, https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-07-768x432.jpg 768w, https://guardianproject.info/wp-content/uploads/2017/12/havenpreso-07.jpg 1500w&#34; sizes=&#34;(max-width: 945px) 100vw, 945px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What we’ve built then could be seen as a competitor to commercial solutions, except for a few key points. First, it is freely licensed, and open-source, enabling anyone to audit it, improve it, remix it, and use as they see fit. It runs on any hardware that can support the Android operating system back to version 4.1. This includes not just smartphones, but also tablets, Raspberry Pi’s, TV set top boxes and sticks, and the emerging Android Things platform. This makes it portable, battery powered, and able to run on devices that are readily available for very little money, anywhere in the world. It takes advantage of many more sensors than a typical home security product, and can easily be expanded to support more. Most importantly, all network communications can be encrypted using other open-source gold standards such as Signal and Tor. You can receive notifications from and access in real-time your Haven device anywhere in the world, completely privately, without any third-party even knowing you are doing so. This addresses the primary threat of remote network intruders, device botnets, and legal actions, as well. The goal is for someone to be able to use Haven, without anyone knowing they are.&lt;/p&gt;

&lt;p&gt;With these innovations, we have set the bar for what a personal security device should be, and do. We know that many people this holiday season will be setting up new cameras around the house, on their front door, in their car… pretty much everywhere, and letting a third-party tap into all of that content. We think that Haven shows a better way, that provides just as much, if not more, peace of mind.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;THE ROAD AHEAD AND YOU!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Today, we are announcing our public beta, and beginning to promote the open-source project. Haven was originally built upon our previous work with CameraV and ProofMode, as well as a project called SecurIt from developer Marco Ziccardi (&lt;a href=&#34;https://github.com/mziccard&#34;&gt;https://github.com/mziccard&lt;/a&gt;), which is how we went from an idea to a pretty cool app in about eight months. The team at Guardian Project, has been doing the bulk of the work up to this point, but as with all of our projects, we look to expand our contributions to the community. If you are interested in this project, for your own use, as an activist, or as a developer, designer or hardware hacker, we need your help. Here’s a quick set of things to do to join:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out the &lt;a href=&#34;https://github.com/guardianproject/haven/issues&#34;&gt;Github issues&lt;/a&gt; and the &lt;a href=&#34;https://github.com/guardianproject/haven/projects&#34;&gt;Prototype Project board,&lt;/a&gt; pick some things to work on or provide feedback on&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Come talk with us at the Guardian Project through our points of contact: &lt;a href=&#34;https://guardianproject.info/contact&#34;&gt;https://guardianproject.info/contact&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Test Haven out on your hardware and let us know if you find any issues (see &lt;a href=&#34;http://havenapp.org&#34;&gt;havenapp.org&lt;/a&gt; for links)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Share your user stories, personas, threats and more, to ensure we are keeping your needs in mind&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Donate (Bitcoin accepted!) to support our ongoing efforts: &lt;a href=&#34;https://freedom.press/donate-support-haven-open-source-project/&#34;&gt;https://freedom.press/donate-support-haven-open-source-project/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this far, and being interested in our ongoing work, to ensure people are empowered by mobile technology, and not endangered by it. Happy Holidays, and remember: keep watch, stay safe!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No more “Root” features in Orbot… use Orfox &amp; VPN instead!</title>
      <link>https://guardianproject.github.io/info/2017/10/27/no-more-root-features-in-orbot-use-orfox-vpn-instead/</link>
      <pubDate>Fri, 27 Oct 2017 13:02:02 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/10/27/no-more-root-features-in-orbot-use-orfox-vpn-instead/</guid>
      <description>&lt;p&gt;Since I first announced the available of Orbot: Tor for Android about &lt;a href=&#34;https://nathan.freitas.net/2009/10/22/orbot-proxy/&#34;&gt;8 years ago&lt;/a&gt; (wow!), myself and others have been working on various methods in which to make the capabilities of Tor available through the operating system. This post is to announce that as of the next, imminent release, &lt;a href=&#34;https://github.com/n8fr8/orbot/releases/tag/15.5.0-RC-1-multi-SDK16&#34;&gt;Orbot v15.5,&lt;/a&gt; we will no longer be supporting the Root-required “Transproxy” method. This is due to many reasons.&lt;/p&gt;

&lt;p&gt;First, it turns out that allowing applications to get “root” access on your device seems like a good idea, it can also be seen as huge security hole. I am on the fence myself, but considering that the ability to access root features hasn’t been standardized as part of Android, which 8 years ago I hoped it would, it means there are a whole variety of ways that this capability is managed and safeguarded (or not, in most cases). At this point in time, given the sophistication we are seeing mobile malware and rootkits, it seems like a capability that we did not want to focus time and energy on promoting.&lt;/p&gt;

&lt;p&gt;Second, for those who do want to use root features, and know what they are doing, there are a bunch of other apps that do that job better than Orbot did. I admit, we let our code in that area degrade a bit, as the dev team themselves moved away from phones with root features. So, instead, if you really want to do cool things with iptables rules, you can use AFWall+, available on &lt;a href=&#34;https://f-droid.org/packages/dev.ukanth.ufirewall/&#34;&gt;F-Droid&lt;/a&gt; and &lt;a href=&#34;https://play.google.com/store/apps/details?id=dev.ukanth.ufirewall&#34;&gt;Google Play&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone &#34; src=&#34;https://raw.githubusercontent.com/ukanth/afwall/0502e6f17ceda08069720ff2f260902690e65e9b/screenshots/Main_2.0.png&#34; width=&#34;240&#34; height=&#34;384&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In order to make AFWall+ work with Orbot, you can follow Mike Perry’s excellent &lt;a href=&#34;https://blog.torproject.org/mission-impossible-hardening-android-security-and-privacy&#34;&gt;“Mission Impossible Android”&lt;/a&gt; guide in which he provides “DroidWall Scripts” necessary to enable automatic Tor routing on boot. You can also check out the sadly no longer maintained, but useful, &lt;a href=&#34;https://orwall.org/&#34;&gt;Orwall app&lt;/a&gt; which was meant to take on all the root features of Orbot.&lt;/p&gt;

&lt;p&gt;Third, we really, really think it is a bad idea to just send all of the traffic of your device through the Tor network. While it sounds like a great idea in theory, much like many “magical” Tor router kickstarter projects, it turns out that unless you can be assured an app is using TLS properly, then there is a chance that bad things could happen to your traffic as it exits the Tor network. Rather than promote some kind of auto-magical “enable Tor for my whole device”, we want to focus on ways to enable specific apps to go through Tor, in a way we can ensure is as safe as possible.&lt;/p&gt;

&lt;p&gt;For instance, we now have an excellent browser app, &lt;a href=&#34;https://guardianproject.info/apps/orfox&#34;&gt;Orfox&lt;/a&gt;, that is based on Tor Browser, and works perfectly with Orbot. If you just want to access the web and onion services, like the &lt;a href=&#34;https://open.nytimes.com/https-open-nytimes-com-the-new-york-times-as-a-tor-onion-service-e0d0b67b7482&#34;&gt;new New York Times onion&lt;/a&gt; at &lt;a href=&#34;https://www.nytimes3xbfgragh.onion/&#34;&gt;https://www.nytimes3xbfgragh.onion/&lt;/a&gt;, then just use &lt;a href=&#34;https://guardianproject.info/apps/orfox&#34;&gt;Orfox&lt;/a&gt;. There is no need for any fancy rooting or transproxying. There are also many others that supporting routing through Orbot directly, such as Conversations.im, Facebook for Android, DuckDuckGo, F-Droid, OpenArchive and many more to come! If you are interested in enabling your app to work with Orbot, check out our &lt;a href=&#34;https://github.com/guardianproject/netcipher&#34;&gt;NetCipher SDK&lt;/a&gt;, which makes it easy to do just that.&lt;/p&gt;

&lt;p&gt;Fourth, Orbot has for some time supported use of Android’s VPN features as a way to tunnel traffic through Tor. You just open the left-side menu, and tap “Apps VPN Mode” or tap on “Apps…” on the main screen. Choose the apps you want to run through Tor, press the back button, and then the VPN will start up, rerouting outbound traffic back through the local Tor port. This method is 100% support by Android, and requires no vulnerabilities or exploits of your device to gain root access.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn3.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-13829&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn3-169x300.png&#34; alt=&#34;&#34; width=&#34;169&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn3-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn3-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn3-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn3.png 1080w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn2.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-13830&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn2-169x300.png&#34; alt=&#34;&#34; width=&#34;169&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn2-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn2-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn2-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn2.png 1080w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn1.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-13831&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn1-169x300.png&#34; alt=&#34;&#34; width=&#34;169&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn1-169x300.png 169w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn1-768x1365.png 768w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn1-576x1024.png 576w, https://guardianproject.info/wp-content/uploads/2017/10/orbotvpn1.png 1080w&#34; sizes=&#34;(max-width: 169px) 100vw, 169px&#34; /&gt;&lt;br /&gt;
Orbot Apps VPN view, home screen with Apps… button, and VPN sidebar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know that even with all of these justifications, some users will be disappointed with the fact we have removed root features from Orbot. Perhaps that will motivate some to reignite development of Orwall, or maybe help us make the VPN features in Orbot work even better. Another route is to support the &lt;a href=&#34;https://blog.torproject.org/mission-impossible-hardening-android-security-and-privacy&#34;&gt;Tor’s Android phone prototype&lt;/a&gt; or perhaps integrate Tor “root” features directly into a community Android OS project like Copperhead or Legacy. We would be happy to see all of these happen.&lt;/p&gt;

&lt;p&gt;For us, though, removing root means we can focus on making Orbot more streamlined, more stable, and more compatible with Android, for our 2 million+ active users, who are mostly focused on finding an easy solution for unblocking sites and apps, and allowing them to communicate and browse freely without fear of reprisal.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tracking usage without tracking people</title>
      <link>https://guardianproject.github.io/info/2017/06/08/tracking-usage-without-tracking-people/</link>
      <pubDate>Thu, 08 Jun 2017 10:58:53 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/06/08/tracking-usage-without-tracking-people/</guid>
      <description>&lt;p&gt;One thing that has become very clear over the past years is that there is a lot of value in data about people. Of course, the most well known examples these days are advertising and spy agencies, but tracking data is useful for many more things. For example, when trying to build software that is intuitive and easy to use, having real data about how people are using the software can make a massive difference when developers and designers are working on improving their software. Even in the case of advertisers, they mostly do not care exactly who you are, they want to know what you are interested in so that they can more effectively promote things to you.&lt;/p&gt;

&lt;p&gt;From the beginning Guardian Project has focused on privacy, and worked to practice what we preach in our own software. For example, we have entirely disabled Apache web logs on our website for the past couple of years, so that we would not even have access to that rich data. We felt that we could not even store that data without fear of violating people’s privacy, let alone working with it.&lt;/p&gt;

&lt;p&gt;Things have changed in the past few years, and there are now a number of well tested techniques for tracking how people are using software without actually tracking who they are. It is now possible to keep some usage data while feeling safe that no one who might get that data could use it to identify individuals. One good example of this is the &lt;a href=&#34;https://metrics.torproject.org/&#34; target=&#34;_blank&#34;&gt;Tor Project’s tracking data&lt;/a&gt;. They provide a wide variety of tracking data to follow how Tor is being used, and how well the Tor network is operating.&lt;/p&gt;

&lt;p&gt;So we believe that it is now possible to responsibly track usage without violating anyone’s privacy. One piece of work along these lines is the new &lt;a href=&#34;https://github.com/cleaninsights/cleaninsights-android-sdk&#34; target=&#34;_blank&#34;&gt;Clean Insights Android SDK&lt;/a&gt;. Nathan is leading the development of that effort. And this blog post announces another new development that we are starting: tracking usage data from F-Droid app repositories.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry-300x133.png&#34; alt=&#34;tracking by country&#34; width=&#34;300&#34; height=&#34;133&#34; class=&#34;aligncenter size-medium wp-image-13632&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/bycountry-300x133.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/bycountry.png 747w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To start with, the Apache web logs for this site will be configured to store, but only information that is not fine-grained enough to identify people:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;only the date is stored, not the time or time zone&lt;/li&gt;
&lt;li&gt;Referer, IP Addresses, User Agent are never stored&lt;/li&gt;
&lt;li&gt;country is stored by looking up the IP Address in the &lt;em&gt;geoip&lt;/em&gt; database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Normally, a log entries look like:&lt;/p&gt;

&lt;pre&gt;189.4.73.81 testy.at.or.at - [08/Jun/2017:13:55:46 +0200] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;F-Droid&#34;
119.29.81.134 199.119.112.126 - [08/Jun/2017:14:46:48 -0400] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;http://testy.at.or.at/fdroid/repo/index-v1.jar&#34; &#34;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)&#34;
&lt;/pre&gt;

&lt;p&gt;This stripped version looks like:&lt;/p&gt;

&lt;pre&gt;0.0.0.0 - - [08/Jun/2017:00:00:00 +0000] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;-&#34; AT
0.0.0.0 - - [08/Jun/2017:00:00:00 +0000] &#34;GET /fdroid/repo/index-v1.jar HTTP/1.1&#34; 200 147950 &#34;-&#34; &#34;-&#34; ZH
&lt;/pre&gt;

&lt;p&gt;Since the raw data is processed by the webserver, the extra information will be discarded and never written to disk. Only the sanitized usage tracking information is ever stored. This is based on Tor Project’s &lt;a href=&#34;https://gitweb.torproject.org/webstats.git/tree/src/sanitize.py&#34; target=&#34;_blank&#34;&gt;web tracking&lt;/a&gt;. It is possible to do this with &lt;em&gt;Apache&lt;/em&gt;, &lt;em&gt;lighttpd&lt;/em&gt;, &lt;em&gt;nginx&lt;/em&gt;, and probably other webservers. For &lt;em&gt;Apache&lt;/em&gt;, &lt;a href=&#34;https://github.com/maxmind/geoip-api-mod_geoip2/blob/master/INSTALL.md#configuration&#34;&gt;&lt;i&gt;mod_geoip&lt;/i&gt;&lt;/a&gt; needs to be installed, then only a single line is needed to configure this private logging mode:&lt;/p&gt;

&lt;pre&gt;LogFormat &#34;0.0.0.0 - %u %{[%d/%b/%Y:00:00:00 %z]}t \&#34;%r\&#34; %&gt;s %b \&#34;%{Referer}i\&#34; \&#34;-\&#34; %{GEOIP_COUNTRY_CODE}e&#34; privacy+geo
CustomLog ${APACHE_LOG_DIR}/access.log privacy+geo
&lt;/pre&gt;

&lt;p&gt;Now, we hope that we can work towards providing value from tracking data, without violating anyone’s privacy. Indeed, we are still prioritizing privacy over any value derived from tracking data. So anyone else who also wants to go follow this route needs to be fully aware that any tracking must be very carefully done, since it can easily result in inadvertent leaks. Do not take this as a stamp of approval on any tracking activity!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New research report on the challenges developers face</title>
      <link>https://guardianproject.github.io/info/2017/05/15/new-research-report-on-the-challenges-developers-face/</link>
      <pubDate>Mon, 15 May 2017 05:07:17 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/05/15/new-research-report-on-the-challenges-developers-face/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/tccw.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-13792&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2017/06/tccw.png&#34; alt=&#34;&#34; width=&#34;845&#34; height=&#34;375&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2017/06/tccw.png 845w, https://guardianproject.info/wp-content/uploads/2017/06/tccw-300x133.png 300w, https://guardianproject.info/wp-content/uploads/2017/06/tccw-768x341.png 768w&#34; sizes=&#34;(max-width: 845px) 100vw, 845px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Guardian Project has been working with the &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;F-Droid&lt;/a&gt; community to make it a secure, streamlined, and verifiable app distribution channel for high-risk environments. While doing this we have started to become more aware of the challenges and risks facing software developers who build software in closed and closing spaces around the world.&lt;/p&gt;

&lt;p&gt;There are a wealth of resources available on how to support and collaborate with high-risk users. Surprisingly, we could not find any guidance on how to support and collaborate with developers where the internet is heavily monitored and/or filtered, let alone developers who might be at risk because of the software they develop.&lt;/p&gt;

&lt;p&gt;This report explores some key challenges that developers in closed and closing spaces face when collaborating with international groups who support Human Rights and freedom (IHRFG). These groups include privacy and security software projects, civil society focused donors, and non-governmental organizations (NGOs).&lt;/p&gt;

&lt;p&gt;IHRFG can benefit greatly from collaborations with local developers. IHRFGs who are trying to design or localize software for a specific region often have difficulty&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;understanding the types of technologies that are needed to address the problems IHRDGs are trying to solve,&lt;/li&gt;
&lt;li&gt;addressing the local economic, social, infrastructural, and/or legal challenges that software of its type often faces in the local context,&lt;/li&gt;
&lt;li&gt;identifying the interaction and design patterns that will drive initial adoption,&lt;/li&gt;
&lt;li&gt;evaluating the quality of the translations of software into the local language,&lt;/li&gt;
&lt;li&gt;finding local individuals for focus groups, and testing, and&lt;/li&gt;
&lt;li&gt;conducting testing and troubleshooting to identify and address issues caused by the speed, availability, and/or censoring of local fixed or mobile networks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Local developers, on the other hand, are often more than able to accomplish these tasks.&lt;/p&gt;

&lt;p&gt;Beyond identifying these challenges this report provides guidance on how to take these challenges into account when IHRFGs collaborate with local developers. To do this the report also contains a set of developer user-personas. These personas can be used by IHRFGs as an aid when they are designing collaborating with local developers.&lt;/p&gt;

&lt;p&gt;We hope that the results of this research will help international privacy and security focused software projects and NGOs better understand and respond to the unique needs of different international developer communities so that their collaborations with these developers will be safer, more strategic, and sustainable.&lt;/p&gt;

&lt;h2 id=&#34;research-methodology&#34;&gt;Research Methodology&lt;/h2&gt;

&lt;p&gt;This report is the result of two interconnected streams of research. The initial themes were identified in a series of in-depth interviews. These themes were further explored in an online “developer challenges survey.” The challenges and user personas found in this report were refined from the combined results of these research efforts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interviews&lt;/strong&gt;: interviews with 14 developers, technologists, and digital defenders from 11 different countries where the internet is heavily monitored and filtered as well as 5 interviews with IHRFGs who work in similar regions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Surveys&lt;/strong&gt;: an &lt;a href=&#34;https://challenges.tech/&#34;&gt;online developer survey&lt;/a&gt; in Chinese, Spanish, Farsi, Russian, French, and English that received 118 responses from developers in 28 countries around the world.&lt;/p&gt;

&lt;h2 id=&#34;user-personas&#34;&gt;User Personas&lt;/h2&gt;

&lt;p&gt;The user personas created for this report were developed to allow readers to think more concretely about the motivations and challenges that were identified during this project. In an effort to combat the inclusion of possible implicit biases the author might hold based upon the nationality, race, or gender of the personas the nationality, names, genders, and photos used for all the personas were generated at random.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/seamustuohy/user_profile_randomizer&#34;&gt;source code of the &lt;strong&gt;User Profile Randomizer&lt;/strong&gt;&lt;/a&gt; is available and permissively licensed under the &lt;a href=&#34;https://github.com/seamustuohy/user_profile_randomizer/blob/master/LICENSE&#34;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;. It randomizes the gender pronoun, name (chosen from a random language family), and photo on a set of markdown based user personas.&lt;/p&gt;

&lt;h3 id=&#34;the-full-report&#34;&gt;The Full Report&lt;/h3&gt;

&lt;p&gt;Download the full report, including developer profiles, here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2017/06/Technological-Collaboration-in-a-Closing-World-1.pdf&#34;&gt;Technological Collaboration in a Closing World.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Imagining the challenges of developers in repressive environments</title>
      <link>https://guardianproject.github.io/info/2017/01/26/imagining-the-challenges-of-developers-in-repressive-environments/</link>
      <pubDate>Thu, 26 Jan 2017 09:56:59 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2017/01/26/imagining-the-challenges-of-developers-in-repressive-environments/</guid>
      <description>

&lt;p&gt;The Guardian Project team spends a lot of time thinking about users. In our work we focus on easy-to-use applications for users in high-risk scenarios. Because of this we are very focused on security. In our current work with the FDroid community to make it a secure, streamlined, and verifiable app distribution channel for high-risk environments we have started to become &lt;a href=&#34;https://guardianproject.info/2015/02/24/phishing-for-developers/&#34;&gt;more aware&lt;/a&gt; of the challenges and risks facing software developers who build software in high-risk environments.&lt;/p&gt;

&lt;p&gt;There are a wealth of resources available on how to support and collaborate with high-risk users. Unsurprisingly, we could not find any guidance on how to support and collaborate with developers in repressive environments, let alone developers who are put at high-risk because of the software they develop. So, we have started conducting “user research” with developers from a range of repressive environments.&lt;/p&gt;

&lt;p&gt;We started our user research by conducting surveys and interviews with Internet Freedom donors, developers, and CSOs about the challenges of being a, or working with, software developers in places where the internet is heavily monitored and filtered. We did this for two reasons. First, we want to make sure that the output produced is valuable to our target audience. Second, we wanted to see how this community viewed the challenges that these developers face. We are a little over ¾ done with our interviews and decided to share some initial thoughts from our interviews alongside that initial survey research.&lt;/p&gt;

&lt;h3 id=&#34;how-to-read-the-survey-results&#34;&gt;How to read the survey results&lt;/h3&gt;

&lt;p&gt;Each of the plots below shows how survey respondents ranked the level of challenge or negative impact specific factors had on the different phases of the development life-cycle. The survey split these rankings into categories that included the design (&lt;strong&gt;Des&lt;/strong&gt;) and development (&lt;strong&gt;Dev&lt;/strong&gt;) of software; deploying (&lt;strong&gt;Dep&lt;/strong&gt;) and maintaining (&lt;strong&gt;Maint&lt;/strong&gt;) software; and general threats (&lt;strong&gt;Thrt&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Participants were also asked to provide some basic information about their relationship to developers in repressive environments. We did this to explore the ways that experience might impact how some groups evaluate the challenges faced by developers in repressive environments. Using their answers we split the results into six groups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At Risk&lt;/strong&gt;: The type of of software development they, or those they interact with, could put either of them at risk.&lt;br /&gt;
&lt;strong&gt;Censor/Surv&lt;/strong&gt;: They are based in a place where the internet is heavily monitored filtered.&lt;br /&gt;
&lt;strong&gt;Not Censor/Surv&lt;/strong&gt;: They are not based in a place where the internet is heavily monitored filtered.&lt;br /&gt;
&lt;strong&gt;Collab&lt;/strong&gt;: They collaborate, support, or work with developers who are based in a place where the internet is heavily monitored or filtered.&lt;br /&gt;
&lt;strong&gt;Dev&lt;/strong&gt;: They develop Software&lt;br /&gt;
&lt;strong&gt;All&lt;/strong&gt;: Everyone who was surveyed.&lt;/p&gt;

&lt;p&gt;The initial survey was not designed to create accurate comparisons between groups who were surveyed and the data visualizations do not reflect the number of participants who declined to answer specific questions. It is also important to note that we asked participants to fill out the survey based upon the regions that they work in. Because of the possible identifying nature of participants responses we did not ask them to identify what regions those were. This had led to a wide variation in many of the responses.&lt;/p&gt;

&lt;h3 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h3&gt;

&lt;p&gt;Infrastructure plays a critical role in technological development. Software development, distribution, and use require an interconnected world of infrastructure. Only a small portion of this infrastructure is controlled and maintained by the developer. They also rely on a range of public and private infrastructure to provides power, connectivity, and financial support.&lt;/p&gt;

&lt;p&gt;To explore these topics we first asked about the challenge that barriers to Internet access played in the design (&lt;strong&gt;Des&lt;/strong&gt;) and development (&lt;strong&gt;Dev&lt;/strong&gt;) of software for developers in high-risk environments. Generally, respondents thought that it was a greater challenge for developers to design software for these environments than to conduct development in these environments.&lt;/p&gt;

&lt;div id=&#34;attachment_13476&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13476&#34; class=&#34;wp-image-13476 size-full&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/bandwidth.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/bandwidth-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/bandwidth-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13476&#34; class=&#34;wp-caption-text&#34;&gt;
    Internet/data bandwidth, connectivity, and/or cost
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;In our interviews we have heard that barriers to internet access can make it difficult to learn how to develop software and to easily get the libraries, documentation, and support that make developing software easier. It is not a universal challenge. Access varies widely depending upon the developer’s region. When it is a barrier it is often one of the largest barriers that is faced. We were happy to find that the challenges of designing software for users in areas with barriers to Internet access is one area where there is &lt;a href=&#34;https://developers.google.com/billions/&#34;&gt;existing guidance&lt;/a&gt; for developers in these regions.&lt;/p&gt;

&lt;p&gt;We also asked how a developer’s own infrastructure led to challenges when developing (&lt;strong&gt;Dev&lt;/strong&gt;), deploying (&lt;strong&gt;Dep&lt;/strong&gt;), and maintaining (&lt;strong&gt;Maint&lt;/strong&gt;) software.&lt;/p&gt;

&lt;div id=&#34;attachment_13477&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13477&#34; class=&#34;size-full wp-image-13477&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/dev_infra.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/dev_infra-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/dev_infra-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13477&#34; class=&#34;wp-caption-text&#34;&gt;
    Developer Infrastructure (e.g Hosting, setup, security, software)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;This topic, like barriers to internet access, had widely varying responses in the Interviews depending on the region the developer was based in. Unlike internet access, where technology was the root of the challenges the responses to these questions showed that legal challenges were the root of hosting challenges. In regions where international sanctions were in place this was a greater concern in the everyday experience of developers. Data localization was another more recent legal concern that was brought up in the interviews.&lt;/p&gt;

&lt;p&gt;Financial infrastructure and other economic challenges can impact various stages of the software lifecycle. Even FOSS developers need to make a living. To look at financial infrastructure we asked if access to payment systems was a challenge when designing (&lt;strong&gt;Des&lt;/strong&gt;) and developing (&lt;strong&gt;Dev&lt;/strong&gt;) software. We also asked about general challenges to monetizing and earning revenue when maintaining software and supporting users (&lt;strong&gt;Maint&lt;/strong&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_13478&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13478&#34; class=&#34;size-full wp-image-13478&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/money.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/money-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/money-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13478&#34; class=&#34;wp-caption-text&#34;&gt;
    Economics (payment, monetizing, &amp; earning revenue)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;As with many of the other questions payment and monetization challenges vary widely by region. Interviewers from areas with economic sanctions spoke of monetization as a greater challenge than any other group of interviewees. Because economic challenges vary so widely, we will hold off on discussing them in more depth until we are done with our analysis.&lt;/p&gt;

&lt;h3 id=&#34;localization&#34;&gt;Localization&lt;/h3&gt;

&lt;p&gt;Many developers face challenges far before they have to worry about their infrastructure. Not only are a majority of programming languages in English, many of the textbooks used to teach software development are in English as well. We asked our survey participants if localized software libraries, platforms, or developer documentation were a challenge for developers in high-risk environments when they were designing (&lt;strong&gt;Des&lt;/strong&gt;), developing (&lt;strong&gt;Dev&lt;/strong&gt;), and deploying (&lt;strong&gt;Dep&lt;/strong&gt;) software.&lt;/p&gt;

&lt;div id=&#34;attachment_13479&#34; style=&#34;width: 1011px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13479&#34; class=&#34;size-full wp-image-13479&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png&#34; alt=&#34;&#34; width=&#34;1001&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/localization.png 1001w, https://guardianproject.info/wp-content/uploads/2016/12/localization-300x85.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/localization-768x219.png 768w&#34; sizes=&#34;(max-width: 1001px) 100vw, 1001px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13479&#34; class=&#34;wp-caption-text&#34;&gt;
    Localization of software libraries, platforms, or developer documentation
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Access to localized content was seen as a primary concern in almost every interview we have had with developers. In multiple interviews basic English language skills were even described as a requirement for any software development. Even developers with basic technical English skills spoke about the challenges of finding the appropriate tools and libraries because the descriptive documentation was difficult to skim. The lack of multi-language books, blog-posts, and forums also impedes access to best-practices and developer guidance.&lt;/p&gt;

&lt;h3 id=&#34;targeted-attacks&#34;&gt;Targeted Attacks&lt;/h3&gt;

&lt;p&gt;Attacks that focus on compromising the user through counterfeit software pirated by a user are not new. But, increased secondary and local markets for apps increase the possible otherwise legitimate locations where a malicious counterfeits of apps can be uploaded. We asked questions about impact of possible malicious counterfeit versions of their software being produced on how developers their design (&lt;strong&gt;Des&lt;/strong&gt;) and deploy (&lt;strong&gt;Dep&lt;/strong&gt;) their software. Targeted attacks against developers can be used to compromise their otherwise legitimate software to to deliver malicious content. We also asked about the challenges related to possible backdoors in the software or developer tools they used (&lt;strong&gt;Thrt&lt;/strong&gt;).&lt;/p&gt;

&lt;div id=&#34;attachment_13480&#34; style=&#34;width: 967px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13480&#34; class=&#34;size-full wp-image-13480&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png&#34; alt=&#34;&#34; width=&#34;957&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/malicious.png 957w, https://guardianproject.info/wp-content/uploads/2016/12/malicious-300x89.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/malicious-768x229.png 768w&#34; sizes=&#34;(max-width: 957px) 100vw, 957px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13480&#34; class=&#34;wp-caption-text&#34;&gt;
    Malicious &amp; Counterfeit Software
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Only a couple of the developers we interviewed expressed concern about malicious counterfeit versions of their applications.&lt;/p&gt;

&lt;p&gt;While targeted attacks were acknowledged by some interviewees, most described the insertion of backdoors as less likely than targeted threats that aimed at stopping the developer from continuing development. The initial survey asked about the challenge of developer account shutdown and/or seizures during development (&lt;strong&gt;Dev&lt;/strong&gt;) and take-down requests (&lt;strong&gt;Thrt&lt;/strong&gt;) because of content restrictions, defamation laws, copyright claims, etc.&lt;/p&gt;

&lt;div id=&#34;attachment_13481&#34; style=&#34;width: 967px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-13481&#34; class=&#34;size-full wp-image-13481&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png&#34; alt=&#34;&#34; width=&#34;957&#34; height=&#34;285&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/12/takedown.png 957w, https://guardianproject.info/wp-content/uploads/2016/12/takedown-300x89.png 300w, https://guardianproject.info/wp-content/uploads/2016/12/takedown-768x229.png 768w&#34; sizes=&#34;(max-width: 957px) 100vw, 957px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-13481&#34; class=&#34;wp-caption-text&#34;&gt;
    Account shutdown and/or seizures during development or software take-down requests
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The in-platform censorship we surveyed for was seen as far less a challenge in the interviews. Interviewees were far more concerned about the possibility of real-world legal censorship or harassment. When asked how developers addressed their perceived threats many of the interviewees noted that developers go beyond technological measures to protect themselves. Many also rely heavily on the strategic use of pseudonyms and other operational security measures.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;With our interviews nearly complete it is interesting to look back at, what seemed like, wide disagreement at the time of the survey as an indicator of how important local context is to the challenges and threats faced by developers in repressive societies. Over the next couple of months we will be building user personas that synthesize and codify our findings. We hope these personas will help other individuals and organizations working on internet freedom issues to think about how they can structure their projects to support and collaborate with developers in repressive environments in safe and productive ways.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HOWTO: get all your Debian packages via Tor Onion Services</title>
      <link>https://guardianproject.github.io/info/2016/07/31/howto-get-all-your-debian-packages-via-tor-onion-services/</link>
      <pubDate>Sun, 31 Jul 2016 17:28:57 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2016/07/31/howto-get-all-your-debian-packages-via-tor-onion-services/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-300x199.png&#34; alt=&#34;leakage&#34; width=&#34;300&#34; height=&#34;199&#34; class=&#34;alignright size-medium wp-image-12699&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2014/10/leakage-300x199.png 300w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-100x66.png 100w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-150x99.png 150w, https://guardianproject.info/wp-content/uploads/2014/10/leakage-200x132.png 200w, https://guardianproject.info/wp-content/uploads/2014/10/leakage.png 410w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Following up on &lt;a href=&#34;https://guardianproject.info/2014/10/16/reducing-metadata-leakage-from-software-updates/&#34; target=&#34;_blank&#34;&gt;some privacy leaks that we looked into a while back&lt;/a&gt;, there are now official Debian &lt;a href=&#34;https://onion.debian.org&#34; target=&#34;_blank&#34;&gt;Tor Onion Services&lt;/a&gt; for getting software packages and security updates, thanks to the Debian Sys Admin team. This is important for high risk use cases like TAILS covers, but also it is useful to make it more difficult to do some kinds of targeted attacks against high-security servers. The default Debian and Ubuntu package servers use plain HTTP with unencrypted connections. That means anyone with access to the network streams could both monitor and fingerprint traffic. When an request for a security update is spotted, an attacker knows that machine is vulnerable to an exploit, and could reliably exploit it before the security update is applied.&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&#34;https://labs.riseup.net/code/issues/8143&#34; target=&#34;_blank&#34;&gt;HTTPS to get security updates&lt;/a&gt; improves this situation a lot, but by measuring the size of data transfers, it is still possible to &lt;a href=&#34;http://www0.cs.ucl.ac.uk/staff/G.Danezis/papers/TLSanon.pdf&#34; target=&#34;_blank&#34;&gt;track which files are being downloaded&lt;/a&gt;. A Tor Onion Service provides end-to-end encryption like the HTTPS connection. It also mixes up the traffic with lots of other traffic, so its not easy to see what traffic goes together. That makes it a lot harder for a network observer to tell when a security update is being downloaded. Additionally, using a Tor Onion Service forces the traffic over Tor, so that the Debian mirror server cannot see which server is requesting the updates. That helps prevent targeted attacks.&lt;/p&gt;

&lt;p&gt;There are other benefits as well, besides just for the person running the high security server in this example, especially if all of the traffic is coming over Tor. When updates are delivered over Tor, then that means the Debian mirror operators have less to worry about because they are handling less metadata that might have privacy concerns. It means that when law enforcement requests logs from the mirror operators, the mirror operators can more easily hand over anything they have since the mirror operator knows that there is not private information in the logs. Reducing the legal risks and privacy concerns makes it easier to run mirrors, and that helps internet services work better.&lt;/p&gt;

&lt;p&gt;One disadvantage of this approach as it now stands is that your server will get updates from the same mirror every time. There is only a single Tor Onion Service for the main archive. An alternate approach using the combination of Tor and &lt;a href=&#34;http://httpredir.debian.org/&#34;&gt;http://httpredir.debian.org/&lt;/a&gt; as the package source means that your server will get updates from a different mirror each time Tor changes its exit node (I believe that’s every 10 minutes or so).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How can you set up your Debian machine to get updates over Tor?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11-300x173.jpg&#34; alt=&#34;debian and tor&#34; width=&#34;300&#34; height=&#34;173&#34; class=&#34;alignright size-medium wp-image-13395&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11-300x173.jpg 300w, https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11-768x444.jpg 768w, https://guardianproject.info/wp-content/uploads/2016/07/tor-logo-2011_11.jpg 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Right now, the best way to set up a Debian machine to force traffic over Tor is to use &lt;a href=&#34;https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxy&#34; target=&#34;_blank&#34;&gt;transparent proxying&lt;/a&gt; via &lt;em&gt;iptables&lt;/em&gt; rules. If you have that setup, then you can add the onion addresses as Debian apt sources as if they are any other HTTP Debian mirror. Another option is to install &lt;em&gt;apt-transport-tor&lt;/em&gt; like TAILS does, then you can use &lt;a href=&#34;http://people.skolelinux.org/pere/blog/Always_download_Debian_packages_using_Tor___the_simple_recipe.html&#34; target=&#34;_blank&#34;&gt;special syntax to add the Tor Onion Services&lt;/a&gt;. And another way is to install an HTTP proxy like &lt;em&gt;privoxy&lt;/em&gt; and enable apt HTTP proxy support as &lt;a href=&#34;https://guardianproject.info/2014/10/16/reducing-metadata-leakage-from-software-updates/&#34; target=&#34;_blank&#34;&gt;I described before&lt;/a&gt;. The &lt;em&gt;apt-transport-tor&lt;/em&gt; and &lt;em&gt;privoxy&lt;/em&gt; approaches both have the downside of having to trust an added piece of software, whereas the transparent proxy technique uses what is already present in the Linux kernel. I’ve been using the &lt;em&gt;privoxy&lt;/em&gt; method since that is what I got working in 2014 and it has been working reliably on multiple servers since then. Also, I need &lt;em&gt;privoxy&lt;/em&gt; installed for another application anyway.&lt;/p&gt;

&lt;p&gt;Here’s how to set up the apt sources to get packages and updates via Tor Onion Services without delaying security updates. First, remove &lt;em&gt;/etc/apt/sources.list&lt;/em&gt; and &lt;em&gt;/etc/apt/sources.list.d/*.list&lt;/em&gt; to start with a clean slate. Next add &lt;em&gt;/etc/apt/sources.list.d/00.vwakviie2ienjx6t.onion.list&lt;/em&gt; to get the main Debian repositories:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://vwakviie2ienjx6t.onion/debian/ jessie main
deb-src http://vwakviie2ienjx6t.onion/debian/ jessie main

# aka volatile
deb http://vwakviie2ienjx6t.onion/debian/ jessie-updates main
deb-src http://vwakviie2ienjx6t.onion/debian/ jessie-updates main

deb http://vwakviie2ienjx6t.onion/debian jessie-backports main
deb-src http://vwakviie2ienjx6t.onion/debian/ jessie-backports main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next add the new Tor Onion Service for the security update repository at &lt;em&gt;/etc/apt/sources.list.d/00.sgvtcaew4bxjd7ln.onion.list&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://sgvtcaew4bxjd7ln.onion/ jessie/updates main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then last, include the normal HTTP security.debian.org archive to ensure that your server gets the latest security updates, even if the &lt;a href=&#34;https://onion.debian.org/&#34; target=&#34;_blank&#34;&gt;Onion Service mirror&lt;/a&gt; is behind or there is some other issue related to Tor. This goes in &lt;em&gt;/etc/apt/sources.list.d/99.security.debian.org.list&lt;/em&gt; to ensure that it is always the last repository that is tried, and apt loads files from /etc/apt/source.list.d/ in alphabetical order, so it’ll always try to get the security updates from the Onion Service before falling back to the HTTP source as a last resort.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://security.debian.org/ jessie/updates main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also run an unofficial mirror of the security updates on &lt;a href=&#34;http://dju2peblv7upfz3q.onion/debian&#34;&gt;http://dju2peblv7upfz3q.onion/debian&lt;/a&gt; if you want to add another backup, i.e. &lt;em&gt;/etc/apt/sources.list.d/00.dju2peblv7upfz3q.onion.list&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://dju2peblv7upfz3q.onion/debian-security/ jessie/updates main
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Building the most private app store</title>
      <link>https://guardianproject.github.io/info/2016/06/02/building-the-most-private-app-store/</link>
      <pubDate>Thu, 02 Jun 2016 11:08:52 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2016/06/02/building-the-most-private-app-store/</guid>
      <description>&lt;p&gt;&lt;em&gt;App stores can work well without any tracking at all&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/06/whichdoor.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/06/whichdoor-150x150.jpg&#34; alt=&#34;whichdoor&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-13337&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attackers are increasingly seeing app stores as a prime &lt;a href=&#34;https://guardianproject.info/2015/02/24/phishing-for-developers/&#34; target=&#34;_blank&#34;&gt;attack&lt;/a&gt; vector, whether it is aimed at the masses like &lt;a href=&#34;http://researchcenter.paloaltonetworks.com/2015/09/more-details-on-the-xcodeghost-malware-and-affected-ios-apps/&#34;&gt;XCodeGhost&lt;/a&gt; or very targeted like in FBI vs Apple. When we install software from an app store, we are placing a lot of trust in a lot of different parties involved in getting the source code from the original developer delivered to our device in a useful form. Most people are entirely unaware of how much trust they are putting into this system, which they are entrusting with their personal data. Even for people who do understand the technical details involved, figuring out whether the people and the system itself is trustworthy is difficult to do.&lt;/p&gt;

&lt;p&gt;We are building an app store that requires the bare minimum of trust: only the software developers themselves and the code they produce. We consider the app store operators and servers a threat. Building an ecosystem that enables automated, effective auditing lets the computers verify to make trust decisions easier. Effective external auditing requires an ecosystem that cannot deliver targeted content to just the auditing system, while feeding users something else (aka “binary transparency”).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Most app stores track as much as possible&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The vast majority of apps stores track their users actions in detail. Some is necessary when using the business model of the app store operator taking a percentage of sales, but none of the tracking is inherent to running an app store. For example, payment verification can be handled in the app itself like shareware. A software delivery system that tracks its users makes it simple to hide malware delivery since it can target any auditing system. Most app stores know a lot about their users:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;account name&lt;/li&gt;
&lt;li&gt;identity&lt;/li&gt;
&lt;li&gt;payment methods&lt;/li&gt;
&lt;li&gt;everything you search for in the app store&lt;/li&gt;
&lt;li&gt;everything you look at in the app store&lt;/li&gt;
&lt;li&gt;everything you download, install, uninstall&lt;/li&gt;
&lt;li&gt;which apps you actually run&lt;/li&gt;
&lt;li&gt;where you are, based on IP, declared preference, etc.&lt;/li&gt;
&lt;li&gt;your preferred language&lt;/li&gt;
&lt;li&gt;and more…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apps stores need to know very little in order to function: how to give you the files you request. That means indexes, descriptions, icons, apps, and install/delete requests (for “push” install/delete). Given that information, the client can do everything needed to provide a full app store user experience. For this work, we chose to build upon &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt;, a community-run Android app store that distributes verified Free Software. The community has had an interest in privacy all along, and has always worked to avoid tracking. The security architecture is based on models proven by &lt;a href=&#34;https://wiki.debian.org/SecureApt&#34; target=&#34;_blank&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;https://github.com/theupdateframework/tuf/blob/develop/docs/tuf-spec.txt&#34; target=&#34;_blank&#34;&gt;The Update Framework&lt;/a&gt; , and others:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS connections by default&lt;/li&gt;
&lt;li&gt;pinned TLS certificate built into the client app&lt;/li&gt;
&lt;li&gt;updates verified based on the signature on the app itself&lt;/li&gt;
&lt;li&gt;file integrity protected by signed metadata&lt;/li&gt;
&lt;li&gt;signed metadata includes hashes of the app and its signing key&lt;/li&gt;
&lt;li&gt;signed metadata generated on a separate machine, which can be fully offline&lt;/li&gt;
&lt;li&gt;public key for verifying metadata signatures built into F-Droid client app&lt;/li&gt;
&lt;li&gt;signed metadata includes timestamp and expiry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the current setup is already a solid platform, we are implementing a number of improvements. The signed metadata will include list of official mirrors, then the client chooses mirrors based on availability and freshness based on local criteria like whether Tor is in use, closest on the internet, etc. We are also moving the standard HTTP “etag” cache check from the server to the client so it cannot be abused to track users.&lt;/p&gt;

&lt;p&gt;In order to defend against an attacker that holds the signing keys for the app repository, there must be a trustworthy source of information to compare against. Reproducible builds means that anyone with the same source code will produce the exact same binary. When paired with an auditing system, it is easy to catch malware inserted in the build process, rather than the source code, like XCodeGhost. Reproducible builds also makes it possible to have all builds of a release binary have the exact same hash. Then any app repository can build apps only from source code, and have a source of verification data from any other app repository building the same app. Building software from source has become cheap enough that many companies like gitlab.com and Travis CI are offering free, automated build services in the cloud. Since the whole F-Droid toolset is free software and designed to be easy to setup, the barriers to setting up automatic auditing are quite low. People in separate areas of the world with different risk profiles can run verification servers to provide more trustworthy information.&lt;/p&gt;

&lt;p&gt;Another key aspect of the F-Droid project is to provide the complete toolset needed to run an app store. This enables a more decentralized ecosystem. Therefore, one key goal is to lower the risks of running the services, so that more people can run their own app stores. If the app store does not track its users, then that removes the hassle of protecting personal data from any attacker. These services can be run without fear of responding to secret orders for personal information. It also means that the server setup is a lot simpler because it does not need dynamic content. The app store serve only needs to serve files (e.g. indexes, apps, etc.). The app repository is generated on a secure machine, or even a fully offline machine, and posted to the server. The main server is purely a mirror of the offline machine where the signed repository is generated. Mirrors just shuffle bits from place to place, they are no longer an attack vector.&lt;/p&gt;

&lt;p&gt;Putting all these pieces together provides a system where users need only audit the source code in order to verify a trustworthy app delivery. The file pipeline provides redundantly secure data transmission, the apps can be reproducibly from source code, the app repositories can be automatically audited. Of course, this system relies not only on the power of cryptography, but also the power of transparency. Debian provides a great example of the power of transparency: Debian gives a thousand volunteers root access to every Debian install (by virtue of their ability to upload signed packages that get installed as root). Yet this system has been proven over the past 20+ years to provide solid security. Ultimately we hope that this will de-emphasize the signing key as the sole protection against abuse. If malware has a decent change of being spotted, it makes it much less likely to be used since malware authors either rigorously defend their exploits, or use well known exploits that are not difficult to automatically detect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Future Work&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One attack vector that is not well covered is malware that installable by everyone, that then uses data on the local device to target specific users. That would be a way to target individuals using an app store that does not track its users. We are starting to implement automated dynamic analysis of every app using tools like &lt;a href=&#34;https://labs.mwrinfosecurity.com/tools/drozer&#34; target=&#34;_blank&#34;&gt;Drozer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are also working towards making as many apps as possible build reproducibly. Some of our quick checks show that a large number of the apps in f-droid.org already will build reproducibly, given the right build environment. We are working on making the process of setting up that build environment as automated as possible.&lt;/p&gt;

&lt;p&gt;The F-Droid “verification server” has been prototyped, and it will be further developed with the aim of making it dead simple to run in common cloud services.&lt;/p&gt;

&lt;p&gt;We already have the infrastructure in place to do verified double-signing, where the developer first signs the release bulid, then once f-droid.org reproduces that build, it adds its signature. Then Android would enforce that both signatures need to be present in order for it to be a valid update.&lt;/p&gt;

&lt;p&gt;As the full localization support is built out, the language that a user is using will not be reported to the server. While speaking Spanish in Spain does not provide much information, speaking Quechua in Uzbekistan can narrow it down to a single user. Instead of dividing the index metadata by language, it will instead be grouped by app. We will then group apps so that it is difficult to tell which app in the group is the one people are interested in. For example, if one very popular app is only grouped with apps that are rarely downloaded, then it is an easy assumption that someone getting info about that block of apps is most likely looking for that popular app.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PanicKit: making your whole phone respond to a panic button</title>
      <link>https://guardianproject.github.io/info/2016/01/12/panickit-making-your-whole-phone-respond-to-a-panic-button/</link>
      <pubDate>Tue, 12 Jan 2016 08:59:41 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2016/01/12/panickit-making-your-whole-phone-respond-to-a-panic-button/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/01/round-button-hazard.png&#34; rel=&#34;attachment wp-att-13221&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/01/round-button-hazard-150x150.png&#34; alt=&#34;round hazard button&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-13221&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/01/round-button-hazard-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2016/01/round-button-hazard-300x300.png 300w, https://guardianproject.info/wp-content/uploads/2016/01/round-button-hazard-200x200.png 200w, https://guardianproject.info/wp-content/uploads/2016/01/round-button-hazard.png 512w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;Our mobile devices do so many things for us, making it easy to communicate with people in all manners while giving us access to all sorts of information wherever we are. But in times of anxiety and panic, it is difficult to quickly use them. Will you be too shaky to type in your PIN or lock pattern? Will you have enough time to find your trusted contacts and send them a message? On top of that, our mobile devices carry massive amounts of private information in them: banking details, pictures, all of our messages and call logs.&lt;/p&gt;

&lt;p&gt;The kinds of data that we worry about vary widely based on where we are. In many places in the world, the stuff you are reading or the music you are listening to can get you arrested, or the people you are communicating with is enough to send you to jail. We have been adding “panic buttons” to our apps for 5 years now, and now we want to create an ecosystem of apps to create flexible and system-wide responses when we are unfortunate enough to require pressing the personal panic button.&lt;/p&gt;

&lt;p&gt;This work seeks to establish a new level of awareness, understanding and capability for providing specific mobile software features for users who are in a “panic” situations. We define “panic” as at risk of having their mobile device physically compromised or removed from their body, being physically detained themselves, or facing an immediate threat of violence, injury, kidnapping or death. This is not to say we are are building a global “911” system. We seek to explore how software that is explicitly designed for these situations, can provide some amount of assistance to the user, by either protecting their privacy, ensuring that sensitive data is hidden or unrecoverable, or that their support networks are notified of the panic event, and provided with the necessary information to take action.&lt;/p&gt;

&lt;p&gt;Over the past year, we have developed user experience design patterns, an Android library, a new panic button app, and example projects to communicate how a system-wide panic should look. For a quick introduction, check out this video demonstrating a very simple panic setup of &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.ripple&#34; target=&#34;_blank&#34;&gt;Ripple&lt;/a&gt;, a panic button, triggering &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.browser&#34; target=&#34;_blank&#34;&gt;Orweb&lt;/a&gt;, a private browser:&lt;/p&gt;

&lt;h2 id=&#34;make-your-app-respond-in-times-of-panic&#34;&gt;Make your app respond in times of panic&lt;/h2&gt;

&lt;p&gt;The ultimate goal of PanicKit is of course to make apps respond with actions that help protect the user. This can be as simple as locking the app when it has a passphrase, or the response can combine a number of actions into a coherent response: a messaging app locks its data and disguises itself as a game while sending out the panic message that includes the user’s location. There is a lot of complexity in all this, especially with many apps involved, so it is essential to always simplify the experience as much as possible. Thinking about panic situations is stressful, setting up the panic response should not add to that stress. Towards that end, it is better to sacrifice some flexibility if that means solid gains in simplicity.&lt;/p&gt;

&lt;p&gt;The first key design pattern is the default, non-destructive response. If all apps that support PanicKit include sensible defaults, then pressing the panic button can have a useful response without the user having to setup anything at all. In order to achieve this, we divide possible responses into two categories: non-destructive vs destructive. An app that has a PIN lock can be locked without destroying anything, the user just needs to unlock it. A browser that wipes the cache can always just download the files again next time the user goes to that website. If an app only has a default, non-destructive response, then there is no need to have a configuration interface; it can be represented purely in the trigger app’s list of responders, where it will be marked “App hides when triggered”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/01/02.0.png&#34; rel=&#34;attachment wp-att-13212&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/01/02.0-939x1024.png&#34; alt=&#34;panic responder setup&#34; width=&#34;780&#34; height=&#34;851&#34; class=&#34;alignnone size-large wp-image-13212&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/01/02.0-939x1024.png 939w, https://guardianproject.info/wp-content/uploads/2016/01/02.0-275x300.png 275w, https://guardianproject.info/wp-content/uploads/2016/01/02.0-768x838.png 768w&#34; sizes=&#34;(max-width: 780px) 100vw, 780px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many of the most valuable panic responses require doing something that can not be undone, so we classify these as destructive. Deleting data is exactly what is needed in a panic situation, but the user must opt-in to enable this kind of response in order to prevent data from being mistakenly deleted. Sending a message can also be a very valuable panic response. But sending a message to the wrong person can cause harm, sending it at the wrong time can destroy people’s expectations: if you cry wolf too often, then people will stop hearing it. Disguising an app can also save people a lot of trouble. But if the user does not know this is going to happen, their experience will be that the app was deleted. So these are all destructive responses and require the user to enable them via a panic setup screen.&lt;/p&gt;

&lt;p&gt;For apps that offer configurable responses, it is essential to present those options clearly with as little clutter as possible. The panic setup should be on a devoted screen, not mixed in with other settings, and takes up the full screen. Panic is a time of stress, the panic response should strive to avoid adding any stress on top of that. When an app offers a few options for responses, then even the devoted screen can quickly get complicated: a list of possibilities, a text field for a message, and a way to manage the contacts to send to. It is important that the entire response is easily visible in one screen so that the user can quickly and easily tell how that app will respond. The entire panic setup should be on a single screen with as little scrolling as possible. Large widgets like a message text field should be placed at the bottom, and be collapsed if not active.&lt;/p&gt;

&lt;p&gt;To get started, add the PanicKit library to your &lt;em&gt;build.gradle&lt;/em&gt;: &lt;code&gt;info.guardianproject.panic:panic:0.5&lt;/code&gt;, then check out the FakePanicResponder example app, as well as how it is implemented in real apps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SMSSecure/SMSSecure/blob/8b2d61161716dcae33c7ae2fd9540931b632030a/src/org/smssecure/smssecure/PanicResponderActivity.java&#34; target=&#34;_blank&#34;&gt;SMSSecure lock as default response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/theScrabi/NewPipe/pull/133&#34; target=&#34;_blank&#34;&gt;NewPipe clear search history as default response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zom/Zom-Android/blob/master/app/src/main/java/org/awesomeapp/messenger/ui/PanicSetupActivity.java&#34; target=&#34;_blank&#34;&gt;Zom with multiple destructive responses and a default lock response&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;make-your-own-panic-button-app&#34;&gt;Make your own panic button app&lt;/h2&gt;

&lt;p&gt;One key reason why we took on this project is to spur more innovation in what a “panic button” can look like. There are currently two solid panic trigger apps that use PanicKit: &lt;a href=&#34;https://panicbutton.io&#34; target=&#34;_blank&#34;&gt;PanicButton&lt;/a&gt; and &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.ripple&#34; target=&#34;_blank&#34;&gt;Ripple&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many ideas for what a panic button can look like, now it is easy to make one that will actually trigger real things. A custom panic button app only needs to send the trigger message (technically an &lt;code&gt;ACTION_TRIGGER Intent&lt;/code&gt;), which will make apps lock, hide, delete private data, send a message, etc. Here are some ideas for panic button apps that we would love to see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a “&lt;a href=&#34;https://en.wikipedia.org/wiki/Dead_man%27s_switch&#34; target=&#34;_blank&#34;&gt;dead man’s switch&lt;/a&gt;” that triggers if the user has not checked in within the last hour&lt;/li&gt;
&lt;li&gt;a “geo-fence” that triggers if the device comes too close to a known detention center&lt;/li&gt;
&lt;li&gt;a sensor monitor that triggers on absence of movement&lt;/li&gt;
&lt;li&gt;a custom Bluetooth button that looks like a belt buckle, &lt;a href=&#34;http://news.discovery.com/tech/gear-and-gadgets/sleek-jewelry-hides-a-panic-button-140220.htm&#34; target=&#34;_blank&#34;&gt;brooch&lt;/a&gt;, or other innocuous object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2016/01/01.3.png&#34; rel=&#34;attachment wp-att-13207&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2016/01/01.3-149x300.png&#34; alt=&#34;Ripple&#39;s responders&#34; width=&#34;149&#34; height=&#34;300&#34; class=&#34;alignright size-medium wp-image-13207&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2016/01/01.3-149x300.png 149w, https://guardianproject.info/wp-content/uploads/2016/01/01.3-768x1544.png 768w, https://guardianproject.info/wp-content/uploads/2016/01/01.3-509x1024.png 509w, https://guardianproject.info/wp-content/uploads/2016/01/01.3.png 1006w&#34; sizes=&#34;(max-width: 149px) 100vw, 149px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An important part of the user experience of the panic button app is how it represents what the trigger will do. For that, we paid careful attention to the design of the list of “panic responder” apps. It should quickly and clearly show which apps are enabled. In our pattern, enabled apps should be sorted to the top of the list and disabled apps should be greyed out including the app icon. There should also be a standard switch to both allow the user to enable/disable an app as well as provide extra feedback on whether an app is enabled or not. That provides three visual channels that communicate what will respond (top of the list, in full color, and with the shape of a switch that is turned on). For a thorough overview of design patterns, see &lt;a href=&#34;https://dev.guardianproject.info/boards/21/topics/390&#34; target=&#34;_blank&#34;&gt;Panic Design Patterns&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Panic responders can have both non-destructive and destructive responses, and some are only appropriate for a full on panic. If you are just feeling anxious, and are worried that the situation is getting dangerous, then deleting files is not appropriate but locking and hiding is. An app could instead be an “anxious trigger” app, and be limited to only non-destructive responses. A trigger app can only send one kind of trigger message (the &lt;code&gt;ACTION_TRIGGER Intent&lt;/code&gt;), to keep the inter-app interaction simple. So the anxious trigger app would instead not offer the “EDIT” option (implemented with an &lt;code&gt;ACTION_CONNECT Intent&lt;/code&gt;), and that limits the responses to the default, non-destructive responses in all the apps that receive a trigger from the anxious trigger app.&lt;/p&gt;

&lt;p&gt;To get started, add the panickit library to your build.gradle &lt;code&gt;info.guardianproject.panic:panic:0.5&lt;/code&gt;, then check out the &lt;code&gt;PanicTrigger&lt;/code&gt; class. You can see how it is implemented in these example apps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/Ripple&#34; target=&#34;_blank&#34;&gt;Ripple&lt;/a&gt; – &lt;em&gt;a real panic button that is simple enough to be an example&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/FakePanicButton&#34; target=&#34;_blank&#34;&gt;FakePanicButton&lt;/a&gt; – &lt;em&gt;a fake app that is only meant to be an example&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;more-work-and-open-questions&#34;&gt;More work and open questions&lt;/h2&gt;

&lt;p&gt;There is a lot of potential for making our mobile devices help us in anxious and panicked moments. PanicKit has established that a system-wide panic response can be simple, approachable, and effective. But there is definitely much work to be done. There is an organization forming around this work, The &lt;a href=&#34;https://github.com/PanicInitiative&#34; target=&#34;_blank&#34;&gt;Panic Initiative&lt;/a&gt;, that will build upon the work done by Amnesty International, &lt;a href=&#34;https://iilab.org/&#34; target=&#34;_blank&#34;&gt;iilab&lt;/a&gt;, and our PanicKit work.&lt;/p&gt;

&lt;p&gt;There are of course still many open questions that we are very interested in, and hope to see more people working on this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Should this be handled on the system level?&lt;/li&gt;
&lt;li&gt;How the trigger app query the responder for its action without leaking private data like contacts or location?&lt;/li&gt;
&lt;li&gt;How can panic and anxiety be represented graphically, using colors, iconography, UI, etc.?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more discussion and resources, check out the &lt;a href=&#34;https://dev.guardianproject.info/projects/panic/wiki&#34; target=&#34;_blank&#34;&gt;PanicKit wiki&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a trustworthy app store that respects privacy</title>
      <link>https://guardianproject.github.io/info/2015/06/02/building-a-trustworthy-app-store-that-respects-privacy/</link>
      <pubDate>Tue, 02 Jun 2015 16:38:03 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/06/02/building-a-trustworthy-app-store-that-respects-privacy/</guid>
      <description>&lt;p&gt;One core piece of our approach is thinking about very high risk situations, like Ai Weiwei or Edward Snowden, then making the tools for operating under that pressure as easy to use as possible. That means that we might occasionally come across as a little paranoid. It is important to dive into the depths of what might be possible. That is an essential step in evaluating what the risks and defenses are, and how to prioritize them. Making usable software is not just making things easy, but rather making tools for real world situations that are a simple as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/06/hrome-crash.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/hrome-crash.png&#34; alt=&#34;chrome crash&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-full wp-image-12966&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We recently received some vindication of our paranoia: we have been resistant to putting all of our trust into the Google Play app store, despite many obvious advantages. Even though Google Play is probably the most secure of the big app stores, its security approach is rather thin, &lt;a href=&#34;https://jon.oberheide.org/blog/2010/06/28/a-peek-inside-the-gtalkservice-connection/&#34; target=&#34;_blank&#34;&gt;relying mainly on HTTPS with no signature for verification&lt;/a&gt;, and the Five Eyes partnership (NSA, GCHQ, etc) noticed this, and &lt;a href=&#34;https://firstlook.org/theintercept/2015/05/21/nsa-five-eyes-google-samsung-app-stores-spyware&#34; target=&#34;_blank&#34;&gt;worked to exploit it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Android/Google Play security model is relatively simple, and that is mostly a good thing. There are two essential pieces: the signature on the APK file itself and the TLS connection to Google that provides the APK file. Once an app is installed, all APK files used to update an app must have a matching signing key. That provides a reasonably strong mechanism to defend against malware that wants to install over existing apps.&lt;/p&gt;

&lt;p&gt;Unlike package systems like Debian, there is no path to verify that the APK signing key. That means Google Play relies heavily on the TLS transport encryption to protect the APK files for when installing an Android apps for the first time. The first time an app is installed, the signing key in that app’s APK file is blindly trusted (this is called “Trust On First Use” or TOFU). It turns out that TOFU has a solid track record for security in the real world. One key aspect of implementing a good TOFU system is to make the first use indistinguishable from any other use, so that it is difficult to target only first uses while ignoring repeat uses. Intercepting repeat uses is very likely to trigger a warning and alert the user that something is wrong.&lt;/p&gt;

&lt;p&gt;Now let’s put together the pieces based on what the Chinese government can do. A few TLS certificate authorities have been caught &lt;a href=&#34;https://arstechnica.com//security/2010/03/govts-certificate-authorities-conspire-to-spy-on-ssl-users/&#34; target=&#34;_blank&#34;&gt;issuing &lt;/a&gt;&lt;a href=&#34;https://arstechnica.com//security/2011/08/earlier-this-year-an-iranian/&#34; target=&#34;_blank&#34;&gt;fake&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com//business/2012/02/critics-slam-ssl-authority-for-minting-cert-used-to-impersonate-sites/&#34; target=&#34;_blank&#34;&gt;certificates&lt;/a&gt;. A company affiliated with CNNIC &lt;a href=&#34;https://arstechnica.com/security/2015/04/google-chrome-will-banish-chinese-certificate-authority-for-breach-of-trust/&#34; target=&#34;_blank&#34;&gt;was caught issuing certificates for Google domains&lt;/a&gt;. A trusted certificate authority can issue usable certificates for any domain, so any computer that trusts CNNIC would trust their fake certificates for Google. That lets the Chinese government transparently Man-in-the-Middle traffic to Google servers. China could then use the Great Firewall to generate targeted malware on the fly, seeing the user credentials that Google Play requires, seeing the list of apps that each user has installed, etc. Then when the targeted user goes to install a new app, the APK file is intercepted, malware is added, then it is re-signed and transparently sent off to the user.&lt;/p&gt;

&lt;p&gt;This targeted malware can be designed to avoid the malware scanners in Google Play, Lookout, etc. since it would be direct addition of code rather than via an exploit. It would be just adding Java classes to the APK. Or alternatively, in combination with some of the signing exploits that have been discovered in Android, like &lt;a href=&#34;http://www.saurik.com/id/19&#34; target=&#34;_blank&#34;&gt;Master Key&lt;/a&gt;, the Great Firewall is able to inject malware into the real APK itself without changing the signature.&lt;/p&gt;

&lt;p&gt;Of course, when Google Play’s TLS connection includes X.509 &lt;a href=&#34;https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning&#34; target=&#34;_blank&#34;&gt;certificate pinning&lt;/a&gt;, then the above attack would not be possible since the client would have a whitelist of certificate authorities that it trusts for play.google.com, and CNNIC would probably not be on that whitelist. This highlights the importance of pinning certificate authorities in apps that need good security over TLS or HTTPS. All TLS connections &lt;a href=&#34;http://nelenkov.blogspot.com/2012/12/certificate-pinning-in-android-42.html&#34; target=&#34;_blank&#34;&gt;support pinning at the system level&lt;/a&gt; starting in Android 4.2. We are crazy enough to support down to Android 2.3 since there are lots of older Android devices in use, and even &lt;a href=&#34;https://arstechnica.com/gadgets/2014/12/android-2-3-gingerbread-four-years-later-the-os-just-wont-die/&#34; target=&#34;_blank&#34;&gt;new devices being sold with Android 2.3.3&lt;/a&gt;. That means we think about making apps self-contained in terms of security improvements like pinning.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/06/sadballs.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/06/sadballs-150x300.png&#34; alt=&#34;sad balls&#34; width=&#34;150&#34; height=&#34;300&#34; class=&#34;alignright size-medium wp-image-12969&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/06/sadballs-150x300.png 150w, https://guardianproject.info/wp-content/uploads/2015/06/sadballs.png 400w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It gets worse&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many indigenous app stores like &lt;a href=&#34;http://cafebazaar.ir&#34; target=&#34;_blank&#34;&gt;Cafe Bazaar&lt;/a&gt; and Xiaomi’s &lt;a href=&#34;http://app.mi.com&#34; target=&#34;_blank&#34;&gt;MiMarket&lt;/a&gt; lack basic protections like TLS, making targeted attacks trivial for governments, or even anyone who gains control of a piece of the network path. These days that is actually easy to do by exploiting home routers, which are &lt;a href=&#34;https://arstechnica.com/security/2015/05/researchers-uncover-self-sustaining-botnets-of-poorly-secured-routers/&#34; target=&#34;_blank&#34;&gt;generally&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com/security/2015/04/no-patch-for-remote-code-execution-bug-in-d-link-and-trendnet-routers/&#34; target=&#34;_blank&#34;&gt;easy&lt;/a&gt; to &lt;a href=&#34;https://arstechnica.com/security/2015/05/the-moose-is-loose-linux-based-worm-turns-routers-into-social-network-bots/&#34; target=&#34;_blank&#34;&gt;exploit&lt;/a&gt;. One of those botnets would easily start looking for app installs in the network traffic, then add exploits accordingly. As long as the first install is easy to detect and the user easy to track, then the malware can transparently inject malware designed to be difficult to detect by malware scanners and people alike.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png&#34; alt=&#34;fdroidheader3&#34; width=&#34;720&#34; height=&#34;180&#34; class=&#34;alignnone size-full wp-image-11906&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png 720w, https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3-300x75.png 300w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;The Alternative&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;FDroid&lt;/a&gt; also has the key advantage of being designed from the beginning to avoid tracking users, and to use proven methods of delivering software, following the signed repository model of Debian, Ubuntu, etc. but then served over a solid HTTPS channel for increased privacy and a backup layer of security. It is also possible to use privacy proxies like Tor or I2P via the proxy settings. There is no user credentials needed, it is all free software, so FDroid users can even hide themselves from the server delivering the apps, as well as any network observers. Since all APKs are delivered via signed metadata that is verified using a key built into the FDroid client app, there is no risk of getting served malware even if the HTTPS connection is completely and transparently broken.&lt;/p&gt;

&lt;p&gt;As part of our &lt;a href=&#34;https://dev.guardianproject.info/project/bazaar/wiki&#34; target=&#34;_blank&#34;&gt;Bazaar Project&lt;/a&gt;, we have been putting more and more efforts into the FDroid project, and working to make it much easier to use. All Guardian Project apps are available in FDroid, as well as all the core apps that you might need like Firefox, a Twitter client, K-9 email, etc. Tech journalist &lt;a href=&#34;https://medium.com/backchannel/why-i-m-saying-goodbye-to-apple-google-and-microsoft-78af12071bd&#34; target=&#34;_blank&#34;&gt;Dan Gillmor agrees&lt;/a&gt;: free software that respects privacy is not only for the über-geek anymore.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Experimental app to improve privacy in location sharing</title>
      <link>https://guardianproject.github.io/info/2015/01/29/experimental-app-to-improve-privacy-in-location-sharing/</link>
      <pubDate>Thu, 29 Jan 2015 07:36:58 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/01/29/experimental-app-to-improve-privacy-in-location-sharing/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web-300x300.png&#34; alt=&#34;ic_launcher-web&#34; width=&#34;300&#34; height=&#34;300&#34; class=&#34;alignright size-medium wp-image-12835&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web-300x300.png 300w, https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web-270x270.png 270w, https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web-230x230.png 230w, https://guardianproject.info/wp-content/uploads/2015/01/ic_launcher-web.png 512w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;As part of the T2 Panic effort, I’ve recently been diving deep into the issues of sharing location. It is unfortunately looking really bad, with many services, including Google, frequently sharing location as plain text over the network. I’ve started to write up some of the issues &lt;a href=&#34;https://guardianproject.github.io/info/tag/panic&#34;&gt;on this blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As part of this, I’ve put together an experimental Android app that aims to act as a privacy filter for all ways of sharing location. Mostly, that means it accepts all sorts of URLs from location services, and tries to parse the location from the URL, then rewrites it into a &lt;a href=&#34;http://geouri.org&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;geo:&lt;/code&gt; URI&lt;/a&gt;, which is the standard way to share location in Android (and hopefully soon all others). As of ChatSecure v14.1.0, these &lt;code&gt;geo:&lt;/code&gt; URLs are also clickable.&lt;/p&gt;

&lt;p&gt;Many URLs are not parsable, like &lt;code&gt;http://goo.gl/maps/Cji0V&lt;/code&gt;. LocationPrivacy then goes online and to try to fetch the location. This should happen over Tor, but it does not yet. You have been warned! Otherwise, it changes the URL to &lt;code&gt;HTTPS&lt;/code&gt; on services that support it.&lt;/p&gt;

&lt;p&gt;You can get LocationPrivacy from all the usual channels, including on FDroid in the Guardian Project repo:&lt;br /&gt;
&lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://f-droid.org&#34;&gt;https://f-droid.org&lt;/a&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://guardianproject.info/fdroid&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://guardianproject.info/fdroid&#34;&gt;https://guardianproject.info/fdroid&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or from Google Play:&lt;br /&gt;
&lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.locationprivacy&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.locationprivacy&#34;&gt;https://play.google.com/store/apps/details?id=info.guardianproject.locationprivacy&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source code:&lt;br /&gt;
&lt;a href=&#34;https://github.com/guardianproject/LocationPrivacy&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/guardianproject/LocationPrivacy&#34;&gt;https://github.com/guardianproject/LocationPrivacy&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Report issues here:&lt;br /&gt;
&lt;a href=&#34;https://dev.guardianproject.info/projects/panic/issues&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://dev.guardianproject.info/projects/panic/issues&#34;&gt;https://dev.guardianproject.info/projects/panic/issues&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please do not rely on this app for strong privacy, it is still very much a new, beta app.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sharing your location privately</title>
      <link>https://guardianproject.github.io/info/2015/01/23/sharing-your-location-privately/</link>
      <pubDate>Fri, 23 Jan 2015 15:00:10 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2015/01/23/sharing-your-location-privately/</guid>
      <description>&lt;div id=&#34;attachment_12774&#34; style=&#34;width: 298px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2015/01/facebook-messenger-shared-location.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12774&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/01/facebook-messenger-shared-location-576x1024.png&#34; alt=&#34;Facebook location sharing embeds the location in every single message, providing a detailed log to the recipient, Facebook, and anyone Facebook shares that data with&#34; width=&#34;288&#34; height=&#34;512&#34; class=&#34;size-large wp-image-12774&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/01/facebook-messenger-shared-location.png 576w, https://guardianproject.info/wp-content/uploads/2015/01/facebook-messenger-shared-location-169x300.png 169w&#34; sizes=&#34;(max-width: 288px) 100vw, 288px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12774&#34; class=&#34;wp-caption-text&#34;&gt;
    Facebook location sharing embeds the location in every single message, providing a detailed log to the recipient, Facebook, and anyone Facebook shares that data with
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;One handy feature that many smartphones give us is the ability to easily share our exact position with other people. You can see this feature in a lot of apps. Google Maps lets you click “Share” and send a URL via any method you have available. In Facebook Messenger, you can click a button and the people on the other side of the chat will receive a little embedded map showing the received location. Of course, the question we always ask is: how can we do this in a privacy-preserving way? And the follow up question: what kinds of information are apps leaking, storing, using, etc? Location is especially valuable and sensitive metadata, especially when there is a lot of it, because it can be used to derive so much information about a person. Most people do not want to publicly post their phone number or home address on the internet, yet are unwittingly giving away far more detailed information by using the various location-based services that are available. There is a lot of specific location information that people do not want to publicize that they visit: a cancer specialist, an abortion clinic, a criminal court, a mistress’ house, or any location information to an abusive spouse. For a great illustration of the power of location metadata, you can watch &lt;a href=&#34;http://www.zeit.de/datenschutz/malte-spitz-data-retention&#34; target=&#34;_blank&#34;&gt;an animation of German politician Malte Spitz’s life, based on his telephone metadata that his telecom had stored&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Google, Facebook, and so many others make money by collecting as much data on their users as possible, then selling access to that data to their customers. So both those companies have incentives to make sure that you will always share your location information with them as well. The question is: are they treating this information as carefully as you would? In China, the indigenous services are much more popular than most foreign alternatives. The Chinese companies are good at making products that are popular with Chinese users, and since they collaborate with the government censorship and tracking, it is easier for them to do business in China. This combination often means that Chinese companies put security and privacy at a very low priority, even though they could comply with the Chinese law while improving their security. A good example of this is the fact that none of the major map providers in China (Baidu, Amap, or QQ) provide even an optional HTTPS interface. They only have unencrypted communications, which allows lots of people easy access to snooping, including anyone who is on the same wifi network as you are.&lt;/p&gt;

&lt;p&gt;The tools for tracking people via location data are getting better, cheaper, and more available. One funny example is &lt;a href=&#34;https://iknowwhereyourcatlives.com/&#34; target=&#34;_blank&#34;&gt;I Know Where Your Cat Lives&lt;/a&gt;, which shows the locations of cat pictures found on the public internet via the geo location included in the EXIF image data.&lt;/p&gt;

&lt;div id=&#34;attachment_12793&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://iknowwhereyourcatlives.com&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12793&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2015/01/i-know-where-your-cat-lives-300x188.jpg&#34; alt=&#34;I know where your cat lives!&#34; width=&#34;300&#34; height=&#34;188&#34; class=&#34;size-medium wp-image-12793&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/01/i-know-where-your-cat-lives-300x188.jpg 300w, https://guardianproject.info/wp-content/uploads/2015/01/i-know-where-your-cat-lives.jpg 768w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12793&#34; class=&#34;wp-caption-text&#34;&gt;
    I know where your cat lives!
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Location and Panic&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One use that we are particularly interested in is sending location to trusted contacts when a panic button is pressed. When thinking about panic button features, privacy must be a central concern. When someone triggers their panic button, it is clearly a sensitive situation. That means that leaking more location information could exacerabate the situation. Since sending location is a useful and popular feature, it is important to consider the whole picture of where that location information might go. To start with, the panic message needs to be sent using a method that will reliably reach its intended destination. Unfortunately, that often means using insecure communications like SMS, or an app that is fully tapped by the same government that is detaining the user, like WeChat. Part of this T2 Panic research and development effort is focused on how to make a complete, secure panic solution. So we will also focus on making ChatSecure and other secure communications an available channel for sending panic messages.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://panicbutton.io&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2015/01/activate1-150x150.jpg&#34; alt=&#34;activate1&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignleft size-thumbnail wp-image-12805&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2015/01/activate1-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2015/01/activate1-270x270.jpg 270w, https://guardianproject.info/wp-content/uploads/2015/01/activate1-230x230.jpg 230w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;The next step is to break down the entire path of where that location information might be intercepted. The first place is on the sending device itself. The panic message will stored with the sent messages with most communications apps, and that can recovered by whoever is detaining the user. Even if the device is encrypted, it is very likely the user can be compelled to unlock the device. So the panic message should be designed with that in mind.&lt;/p&gt;

&lt;p&gt;So if we consider a fully anonymous method of communication, like ChatSecure’s “Secret Identity”, then protecting the location information becomes important even if all of the messages and their recipients are recovered from the sending device. The full “Secret Identity” procedure of creating an account per person you want to chat with, and only using that single account to communicate with that other person. It has been outlined by many people, including Laura Poitras when describing how she communicates with Edward Snowden. In this case, even if someone recovers the recipient address, all they will have is an anonymously created account with no other links to other accounts. Then location URL then becomes a way to deanonymize the recipient. First, if the URL takes the recipient to an unencrypted connection, then that it is easy to track. Even with an encrypted connection, if the server providing the map service is providing information to the government, then the encrypted connection will not help. Making this connection over Tor will also help since the map service will not be able to see the IP address of the device where the user clicked on this URL. Now consider a location URL using Google Maps, or any similar service where users frequently login. If the original panic message was sent using such a URL, and the recipient was a regular user of a service that used logins, then that login information would deanonymize the recipient if they viewed the location URL in a browser where they were also logged in with their normal Google account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Stories&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This can perhaps be better illustrated using some quick user stories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A journalist and a source set up Secret Identities in ChatSecure devoted to each other when they met up in person. Each have panic buttons set up to contact the other in case of emergency. The journalist uses &lt;a href=&#34;https://openstreetmap.org&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;http&lt;strong&gt;s&lt;/strong&gt;://openstreetmap.org&lt;/code&gt;&lt;/a&gt; to generate a shortlink that points to the chosen meeting location, then sends it to the source using the Secret Identity, &lt;a href=&#34;http://osm.org/go/0ju_SMlBn&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&lt;a href=&#34;http://osm.org/go/0ju_SMlBn&#34;&gt;http://osm.org/go/0ju_SMlBn&lt;/a&gt;&lt;/code&gt;&lt;/a&gt;. The source clicks the link, and chooses to open the link in Firefox. Therefore, the website is shown using an unencrypted, direct connection, which is easily observed. Even though the recipient has HTTPS Everywhere set up in his browser to force HTTPS for openstreetmap.org, the osm.org shortlink does not currently have working HTTPS so it is an HTTP link. This shortlink is now a unique ID that links the journalist and source’s real IP address. If the source was using a cellular internet connection, then this will also link the IP address to the devices IMEI unique ID. The IMEI is then quite easy to link to a real identity information.&lt;/li&gt;
&lt;li&gt;A circle of activists all set each other up with a panic button app on burner Android phones. They only use these burner phones to communicate with each other. They prepare in advance to discard all the phones in case someone triggers the panic. One activitist gets detained by the secret police and triggers the panic. The secret police get the panic message and all the other phone numbers from the detainee’s phone, but the activists are no longer using those phones so they cannot be tracked by them. The activists manually copy the Google Maps shortlink &lt;a href=&#34;https://goo.gl/maps/Cji0V&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&lt;a href=&#34;https://goo.gl/maps/Cji0V&#34;&gt;https://goo.gl/maps/Cji0V&lt;/a&gt;&lt;/code&gt;&lt;/a&gt; to their computer to find out where the detainee is. They type the map link into Internet Explorer, making sure to type HTTPS, and then again confirm that the webpage is still using an HTTPS link. What they did not see is that the shortlink first redirected to a HTTP link &lt;a href=&#34;http://maps.google.com/?q=28.118860,98.008069&amp;hl=en&amp;gl=us&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&lt;a href=&#34;http://maps.google.com/?q=28.118860,98.008069&amp;amp;hl=en&amp;amp;gl=us&#34;&gt;http://maps.google.com/?q=28.118860,98.008069&amp;amp;hl=en&amp;amp;gl=us&lt;/a&gt;&lt;/code&gt;&lt;/a&gt;, which leaked the location in plain text. Since this URL describes a very specific point, the secret police use this as a data point to search for the IP address of all devices that have accessed that URL. Those IP addresses divulge the locations of all the activists who viewed the map URL, and provide the secret police a method for tracking them all.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I did not cover other more common use cases here because there are so many leaks that the protections presented are moot. All is not lost, there is still a lot that you can do to improve things. First off, we recommend using map apps that can work fully offline. For Android, &lt;a href=&#34;https://play.google.com/store/apps/details?id=net.osmand&#34; target=&#34;_blank&#34;&gt;Osmand&lt;/a&gt; is the best one out there, it uses OpenStreetMap data which can be freely downloaded. It is also important to encourage developers to improve the privacy of their apps. Since we are software developers, we file bug reports and make pull requests to nag location-related projects to improve their security. Here are some recent examples of what we have contributed:&lt;/p&gt;

&lt;p&gt;OpenStreetMap&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Issue #799: &lt;a href=&#34;https://github.com/openstreetmap/openstreetmap-website/issues/799&#34; target=&#34;_blank&#34;&gt;Implement &lt;code&gt;geo:&lt;/code&gt; URLs for sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue #870: &lt;a href=&#34;https://github.com/openstreetmap/openstreetmap-website/issues/870&#34; target=&#34;_blank&#34;&gt;share makes HTTP url even when connecting via HTTPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue #862: &lt;a href=&#34;https://github.com/openstreetmap/openstreetmap-website/issues/862&#34; target=&#34;_blank&#34;&gt;support osm.org in HTTPS certificate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Osmand&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pull #1033: &lt;a href=&#34;https://github.com/osmandapp/Osmand/pull/1033&#34; target=&#34;_blank&#34;&gt;modernize location sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull #1043: &lt;a href=&#34;https://github.com/osmandapp/Osmand/pull/1043&#34; target=&#34;_blank&#34;&gt;add support for a proxy and use more HTTPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pull #1045: &lt;a href=&#34;https://github.com/osmandapp/Osmand/pull/1045&#34; target=&#34;_blank&#34;&gt;update URL parsing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will be following up with further posts on this topic with more detail, including research into what is possible to derive from location data, technical details of issues, and possible solutions and work that can be done to improve things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatic, private distribution of our test builds</title>
      <link>https://guardianproject.github.io/info/2014/06/06/automatic-private-distribution-of-our-test-builds/</link>
      <pubDate>Fri, 06 Jun 2014 17:17:01 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2014/06/06/automatic-private-distribution-of-our-test-builds/</guid>
      <description>&lt;p&gt;One thing we are very lucky to have is a good community of people willing to test out unfinished builds of our software. That is a very valuable contribution to the process of developing usable, secure apps. So we want to make this process as easy as possible while keeping it as secure and private as possible. To that end, we have set up an &lt;a href=&#34;https://f-droid.org&#34; target=&#34;_blank&#34;&gt;FDroid&lt;/a&gt; repository of apps generated from the test builds that our build server generates automatically every time we publish new code.&lt;/p&gt;

&lt;p&gt;After this big burst of development focused on FDroid, it has become clear that FDroid has lots of promise for becoming a complete solution for the whole process of delivering software from developers to users. We have tried other ways of delivering test builds like HockeyApp and Google Play’s Alpha and Beta channels and have found them lacking. The process did not seem as easy as it should be. And of course, both of them leave a lot to be desired when it comes to privacy of the users. So this is the first step in hopefully a much bigger project.&lt;/p&gt;

&lt;p&gt;To use our new test build service, first install FDroid by downloading it from the official source: &lt;a href=&#34;https://f-droid.org&#34;&gt;https://f-droid.org&lt;/a&gt;. Then using a QR Code scanner like &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.zxing.client.android&#34; target=&#34;_blank&#34;&gt;Barcode Scanner&lt;/a&gt;, just scan the QR Code below, and send it to FDroid &lt;strong&gt;Repositories&lt;/strong&gt;. You can also browse to this page on your Android device, and click the link below to add it to FDroid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.guardianproject.info/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;https://dev.guardianproject.info/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://dev.guardianproject.info/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/06/dev.guardianproject.info-QR-e1402010770323.png&#34; alt=&#34;dev.guardianproject.info&#34; width=&#34;245&#34; height=&#34;245&#34; class=&#34;aligncenter size-full wp-image-12462&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also use our test repo via an anonymized connection using the Tor Hidden Service (as of this moment, that means downloading an &lt;a href=&#34;https://f-droid.org/repo/org.fdroid.fdroid_710.apk&#34;&gt;official FDroid v0.71 build&lt;/a&gt;). Just get &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.torproject.android&#34; target=&#34;_blank&#34;&gt;Orbot&lt;/a&gt; and turn it on, and the following .onion address will automatically work in FDroid, as long as you have a new enough version (0.69 or later).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://k6e4p7yji2rioxbm.onion/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;http://k6e4p7yji2rioxbm.onion/fdroid/repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://k6e4p7yji2rioxbm.onion/fdroid/repo?fingerprint=F8ED4C73C125E7A67F99DB269480DAF50BE1758952E07EE5ABF116FE4B2DB1E8&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2014/06/k6e4p7yji2rioxbm.onion-QR-e1402010779963.png&#34; alt=&#34;k6e4p7yji2rioxbm.onion&#34; width=&#34;245&#34; height=&#34;245&#34; class=&#34;aligncenter size-full wp-image-12463&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keys, signatures, certificates, verifications, etc. What are all these for?</title>
      <link>https://guardianproject.github.io/info/2013/12/12/keys-signatures-certificates-verifications-etc.-what-are-all-these-for/</link>
      <pubDate>Thu, 12 Dec 2013 13:20:09 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/12/12/keys-signatures-certificates-verifications-etc.-what-are-all-these-for/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/key.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/key-150x150.jpg&#34; alt=&#34;portable shared security token&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-12129&#34; /&gt;&lt;/a&gt;For the past two years, we have been thinking about how to make it easier for anyone to achieve private communications. One particular focus has been on the “security tokens” that are required to make private communications systems work. This research area is called internally &lt;a href=&#34;https://dev.guardianproject.info/projects/psst/wiki/PSST&#34; title=&#34;PSST Wiki&#34; target=&#34;_blank&#34;&gt;Portable Shared Security Tokens aka PSST&lt;/a&gt;. All of the privacy tools that we are working on require “keys” and “signatures”, to use the language of cryptography, and these are the core of what “security tokens” are. One thing we learned a lot about is how to portray and discuss tools for private or anonymous communications to people who just want to communicate and are not interested in technical discussion. This is becoming a central issue among a lot of people working to make usable privacy tools.&lt;/p&gt;

&lt;p&gt;The widely established way of talking about privacy tools comes from the lingo of the underlying methods: cryptography, networking, etc. We talk about public and private keys, signing, validation, verification, key exchange, certificates, and fingerprints. In order for cryptography to work, keys need to be marked whether they are verified or not. &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm-300x190.png&#34; alt=&#34;hide the guts of what is happening&#34; width=&#34;300&#34; height=&#34;190&#34; class=&#34;alignleft size-medium wp-image-12135&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm-300x190.png 300w, https://guardianproject.info/wp-content/uploads/2013/12/public_key_cryptography_sm.png 500w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Few computers users understand what these terms are referring to, even highly technical people who regularly use encryption do not know the meaning of all these things, nor should they. This is a low level detail that is not important to how the vast majority of users understand privacy in computers. Keys and verification are far too abstract to be generally understandable, and what other kind of key has a fingerprint? Even more so, few people can tell you the difference between validation and verification when it comes to keys, signatures and certificates. The software should not be exposing all this, but instead should be minimizing the complexity as much as possible, and providing as simple a user experience as possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Defining the Concepts that Define the Experience&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A key part of defining that simple user experience is defining the core concepts that the software is organized around. In our discussions, we mostly talked about the ideas of identity and trust, while some discussion of verifying identity seemed unavoidable. Talking about identity and trust is a lot more relevant in day-to-day life, i.e. knowing that the message came from the person you think it did, and trusting that it was private. It is most direct to talk about establishing a trusted connection to another person, but that’s not something that crypto can ever promise because there is still the analog gap between the person and the device. These core ideas must represent what is technically possible, so we searched for widely understood concepts that map well to the technical limitations: “a private conversation”, “a trusted app”, “verifiable video”.&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;attachment_12128&#34; style=&#34;width: 160px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ecc.jpg&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12128&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ecc-150x150.jpg&#34; alt=&#34;create metaphors based on what users know&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;size-thumbnail wp-image-12128&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/ecc-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2013/12/ecc-300x300.jpg 300w, https://guardianproject.info/wp-content/uploads/2013/12/ecc.jpg 350w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p id=&#34;caption-attachment-12128&#34; class=&#34;wp-caption-text&#34;&gt;
    create metaphors based on what users know
  &lt;/p&gt;
&lt;/div&gt;Diving in deeper, we concluded that the balance point between technical accuracy and widely understandable lingo was to talk about trusting the device, not the person. The technology can provide trusted connections between devices, and it is pretty close to how people experience digital communications. There is the laptop, the mobile phone, the net cafe, the friend’s computer, computer at work, etc. etc. When I look at my phone to see a message from a friend, it is easy to picture that friend typing that message out on that device, though it does take some conscious effort. The hard part here is that as we communicate more and more with our devices, there is less and less separation in our minds about whether we were talking in person, via voice, or by sending text. This is a point to focus on when thinking about designing the experience of private, secure communications software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let the Software Handle It!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is a forming consensus in the world of usable security to focus on figuring out how to automate as much as possible then figure out how best tailor the experience of the essential parts that cannot be automated. The hard part will remain explaining the limitations of a given privacy tool.&lt;/p&gt;

&lt;p&gt;At Guardian Project, we work a lot on incremental progress, so many of our projects are focused on specific, narrow improvements. With &lt;a href=&#34;https://guardianproject.info/apps/chatsecure/&#34; target=&#34;_blank&#34;&gt;ChatSecure&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.info/apps/keysync/&#34; target=&#34;_blank&#34;&gt;Keysync&lt;/a&gt; , we were able to automate one small part of the whole process, cryptography identity portability, which provides the foundation to provide private communications and verifiable media. Allowing users to sync their trust profiles between desktop and mobile makes it much more likely that users will have fully verified OTR conversations when chatting on their devices and laptops.&lt;/p&gt;

&lt;p&gt;With &lt;a href=&#34;https://guardianproject.info/code/gnupg/&#34; target=&#34;_blank&#34;&gt;Gnu Privacy Guard for Android (GPGA)&lt;/a&gt;, we have made it easy to import keys via QRCode as well as &lt;code&gt;openpgp4fpr:&lt;/code&gt; URLs (a standard defined in conjuction with the &lt;a href=&#34;http://web.monkeysphere.info/&#34; title=&#34;Monkeysphere Home Page&#34; target=&#34;_blank&#34;&gt;Monkeysphere&lt;/a&gt; project. We are also working on a common method of using NFC for OpenPGP key signing in conjuction with &lt;a href=&#34;http://sufficientlysecure.org/index.php/openpgp-keychain/&#34; title=&#34;OpenPGP Keychain home page&#34; target=&#34;_blank&#34;&gt;OpenPGP Keychain&lt;/a&gt;. Even little things like optimizing support for standard file extensions can go a long way to make things easier, so GPGA automatically sets itself up to receive files with the &lt;a href=&#34;https://tools.ietf.org/html/rfc2015&#34; target=&#34;_blank&#34;&gt;standard OpenPGP MIME types&lt;/a&gt; (&lt;code&gt;application/pgp-keys&lt;/code&gt;, &lt;code&gt;application/pgp-encrypted&lt;/code&gt;, &lt;code&gt;application/pgp-signature&lt;/code&gt;) as well as the corresponding file extensions (&lt;code&gt;.pkr&lt;/code&gt;, &lt;code&gt;.skr&lt;/code&gt;, &lt;code&gt;.key&lt;/code&gt;, &lt;code&gt;.sig&lt;/code&gt;, &lt;code&gt;.asc&lt;/code&gt;, etc.). That makes it so a user can just click on one of these files, and GPGA will walk them through the whole process, doing as much as possible automatically.&lt;/p&gt;

&lt;p&gt;Another interesting idea that is a big step in this direction is “secure introductions”. The idea is to automatically share trusted identity information when securely communicating with multiple people. For example, whenever you send a signed, encrypted email to multiple people, the email program should include the key fingerprints of each recipient in that email. Then the email program of the people receiving that email should automatically mark those keys as verified if the sender’s key is trusted and the signature is valid. There is not a meaningful amount of detail leaked in this interaction, since the existence of all the people’s keys and email address is already present in a secure email. The tricky part is figuring out how to make it harder for someone to use this maliciously to spread false identity information while keeping things as automatic as possible. This is very much a long term research idea: there are no widespread implementations of it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting keys into your keyring with Gnu Privacy Guard for Android</title>
      <link>https://guardianproject.github.io/info/2013/12/06/getting-keys-into-your-keyring-with-gnu-privacy-guard-for-android/</link>
      <pubDate>Fri, 06 Dec 2013 15:11:53 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/12/06/getting-keys-into-your-keyring-with-gnu-privacy-guard-for-android/</guid>
      <description>&lt;p&gt;Now that you can have a full &lt;a href=&#34;https://www.gnupg.org&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;GnuPG&lt;/em&gt;&lt;/a&gt; on your Android device with &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.gpg&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Gnu Privacy Guard&lt;/em&gt;&lt;/a&gt; for Android, the next step is getting keys you need onto your device and included in &lt;em&gt;Gnu Privacy Guard&lt;/em&gt;. We have tried to make it as easy as possible without compromising privacy, and have implemented a few approaches, while working on others. There are a few ways to get this done right now.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Gnu Privacy Guard&lt;/em&gt; registered itself with Android as a handler of all the standard &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc3156.txt&#34; title=&#34;RFC3156: MIME Security with OpenPGP&#34; target=&#34;_blank&#34;&gt;OpenPGP MIME types&lt;/a&gt; (&lt;code&gt;application/pgp-keys&lt;/code&gt;, &lt;code&gt;application/pgp-encrypted&lt;/code&gt;, &lt;code&gt;application/pgp-signature&lt;/code&gt;), as well as all of the OpenPGP and GnuPG file extensions (&lt;code&gt;.pkr&lt;/code&gt; &lt;code&gt;.skr&lt;/code&gt; &lt;code&gt;.key&lt;/code&gt; &lt;code&gt;.sig&lt;/code&gt; &lt;code&gt;.asc&lt;/code&gt; &lt;code&gt;.gpg&lt;/code&gt; &lt;code&gt;.bin&lt;/code&gt;). This means that users just have to share a file to &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; using any of the standard Android methods, these files can be launched from an email attachment, opened from the SD card using a file browser, clicked in the Downloads view, etc.&lt;/p&gt;

&lt;p&gt;So if you want to quickly send your whole public keyring from your laptop to your mobile device, you can just grab the database file directly from &lt;em&gt;GnuPG&lt;/em&gt; and copy it to your SD card. Here is how:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;plug your device into your laptop via USB so you can copy files to the SD card&lt;/li&gt;
&lt;li&gt;find your &lt;em&gt;GnuPG&lt;/em&gt; home folder (on GNU/Linux and Mac OS X, it will be in &lt;code&gt;~/.gnupg/pubring.gpg&lt;/code&gt;, on Windows it is &lt;code&gt;%APPDATA%\gnupg&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;In your &lt;em&gt;GnuPG&lt;/em&gt; home folder, copy &lt;strong&gt;pubring.gpg&lt;/strong&gt; to your device’s SD card&lt;/li&gt;
&lt;li&gt;unmount and unplug your device&lt;/li&gt;
&lt;li&gt;on your device, open your favorite file manager app (&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.openintents.filemanager&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;OI File Manager&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;Astro&lt;/em&gt;, etc)&lt;/li&gt;
&lt;li&gt;go to the SD card&lt;/li&gt;
&lt;li&gt;long-click on &lt;strong&gt;pubring.gpg&lt;/strong&gt; and share it to &lt;em&gt;Gnu Privacy Guard&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;click OK on the Import Keys dialog&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After that, &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; will do the rest. Give is some time to sync to the Contacts database, then you’ll see all of your keys from your desktop are now in your People app and are listed in &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; itself. You can now encrypt files to any of those keys, or verify files signed by any of those keys. Here are a couple screenshots to illustrate key points in the process, using &lt;em&gt;OI File Manager&lt;/em&gt;:&lt;/p&gt;

&lt;p align=&#34;center&#34;&gt;
  &lt;div id=&#34;attachment_12155&#34; style=&#34;width: 209px&#34; class=&#34;wp-caption alignleft&#34;&gt;
    &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-0.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12155&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-0-199x300.png&#34; alt=&#34;send your public keyring file&#34; width=&#34;199&#34; height=&#34;300&#34; class=&#34;size-medium wp-image-12155&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-0-199x300.png 199w, https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-0.png 319w&#34; sizes=&#34;(max-width: 199px) 100vw, 199px&#34; /&gt;&lt;/a&gt;
    
    &lt;p id=&#34;caption-attachment-12155&#34; class=&#34;wp-caption-text&#34;&gt;
      1. send your public keyring file
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/p&gt;

&lt;div id=&#34;attachment_12156&#34; style=&#34;width: 209px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-1.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12156&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-1-199x300.png&#34; alt=&#34;choose Gnu Privacy Guard to send the file to&#34; width=&#34;199&#34; height=&#34;300&#34; class=&#34;size-medium wp-image-12156&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-1-199x300.png 199w, https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-1.png 319w&#34; sizes=&#34;(max-width: 199px) 100vw, 199px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12156&#34; class=&#34;wp-caption-text&#34;&gt;
    2. choose &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; to send the file to
  &lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;attachment_12157&#34; style=&#34;width: 209px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-2.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12157&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-2-199x300.png&#34; alt=&#34;click OK to import the key file&#34; width=&#34;199&#34; height=&#34;300&#34; class=&#34;size-medium wp-image-12157&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-2-199x300.png 199w, https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-2.png 319w&#34; sizes=&#34;(max-width: 199px) 100vw, 199px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12157&#34; class=&#34;wp-caption-text&#34;&gt;
    3. click OK to import the key file
  &lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;attachment_12158&#34; style=&#34;width: 209px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-3.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12158&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-3-199x300.png&#34; alt=&#34;now you can see the imported keys in Gnu Privacy Guard&#34; width=&#34;199&#34; height=&#34;300&#34; class=&#34;size-medium wp-image-12158&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-3-199x300.png 199w, https://guardianproject.info/wp-content/uploads/2013/12/GPGA-import-key-file-3.png 319w&#34; sizes=&#34;(max-width: 199px) 100vw, 199px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12158&#34; class=&#34;wp-caption-text&#34;&gt;
    4. now you can see the imported keys in &lt;em&gt;Gnu Privacy Guard&lt;/em&gt;
  &lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;There are many ways to get the keyring files like &lt;strong&gt;pubring.gpg&lt;/strong&gt; to your device: you can also share the keyring files via email, chat, or even services like &lt;em&gt;Dropbox&lt;/em&gt; or &lt;em&gt;Google Drive&lt;/em&gt;. Then once the files are on your device, you can import them using the same procedure as above. But keep in mind that you are sending your whole collection of secure contacts to that service, which will have full access to read it. If you have any worries about leaking your keyring to anyone, then a good method is to copy it directly to the SD card.&lt;/p&gt;

&lt;div id=&#34;attachment_12192&#34; style=&#34;width: 209px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-search-keyserver.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12192&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-search-keyserver-199x300.png&#34; alt=&#34;search the keyserver for the author&#39;s key (I lost the key from 1998, so don&#39;t use that one...)&#34; width=&#34;199&#34; height=&#34;300&#34; class=&#34;size-medium wp-image-12192&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/GPGA-search-keyserver-199x300.png 199w, https://guardianproject.info/wp-content/uploads/2013/12/GPGA-search-keyserver.png 319w&#34; sizes=&#34;(max-width: 199px) 100vw, 199px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-12192&#34; class=&#34;wp-caption-text&#34;&gt;
    search the keyserver for the author’s key (the key from 1998 is lost, don’t use that one…)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;You can also search and download keys via the public pool of OpenPGP keyservers. If you already know someone’s keyid or fingerprint, you can search using that. Otherwise, you can search based on name or email address. But be careful! Downloading a key from a keyserver does not give you a key you can trust. Anyone can upload a key to the keyservers, and they can make that key have any name or email address. Downloading from the keyservers is a convenient way to download a key, but you must verify the key’s fingerprint with the person you are trying to find.&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;attachment_12184&#34; style=&#34;width: 160px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/12/0x9F0FE587374BBE81-qr.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-12184&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/12/0x9F0FE587374BBE81-qr-150x150.png&#34; alt=&#34;scan this QR Code to get the author&#39;s OpenPGP key&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;size-thumbnail wp-image-12184&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/12/0x9F0FE587374BBE81-qr-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2013/12/0x9F0FE587374BBE81-qr-300x300.png 300w, https://guardianproject.info/wp-content/uploads/2013/12/0x9F0FE587374BBE81-qr.png 330w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p id=&#34;caption-attachment-12184&#34; class=&#34;wp-caption-text&#34;&gt;
    scan this QR Code to get the author’s OpenPGP key
  &lt;/p&gt;
&lt;/div&gt;In conjunction with the&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://web.monkeysphere.info/&#34; target=&#34;_blank&#34;&gt;Monkeysphere&lt;/a&gt; project, we developed a standard URI scheme for sending OpenPGP key fingerprints. For example, you can find my key ID here: &lt;a href=&#34;openpgp4fpr:9F0FE587374BBE81&#34;&gt;&lt;code&gt;openpgp4fpr:9F0FE587374BBE81&lt;/code&gt;&lt;/a&gt;. This provides a clickable way to get an OpenPGP key. On an Android device with &lt;em&gt;Gnu Privacy Guard&lt;/em&gt; installed, you can click on this link to download my key from the keyservers. This URI scheme also works well in QR Codes. Scan this QR Code on your device with an app like &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.zxing.client.android&#34; title=&#34;Barcode Scanner in the Google Play Store&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Barcode Scanner&lt;/em&gt;&lt;/a&gt;, and click &lt;strong&gt;Open Browser&lt;/strong&gt;, and Gnu Privacy Guard will download my key to your device.&lt;/p&gt;

&lt;p&gt;There are other ideas out there that we also want to support. For example, &lt;a href=&#34;http://sufficientlysecure.org/index.php/openpgp-keychain/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;OpenPGP Keychain&lt;/em&gt;&lt;/a&gt; includes a way to transmit the whole public key via &lt;a href=&#34;https://en.wikipedia.org/wiki/Near_field_communication&#34; title=&#34;Near Field Communication&#34; target=&#34;_blank&#34;&gt;NFC&lt;/a&gt;. This allows people can swap keys directly from phone to phone without having internet access at all. But NFC is quite slow to transmit data so the devices need to be held together for a while until the whole key is received. NFC could be used to rapidly transmit an &lt;code&gt;openpgp4fpr:&lt;/code&gt; URI, and then the whole public key would be fetched from a keyserver, but that then requires internet access and also leaks a bit of metadata to the internet. A better technique would be to transmit the entire public key over Bluetooth, using NFC to setup the Bluetooth session. We’re also looking at ways to do this via WiFi and &lt;a href=&#34;https://en.wikipedia.org/wiki/Bonjour_(software)&#34; target=&#34;_blank&#34;&gt;Bonjour (mDNS)&lt;/a&gt; local service advertisements.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Turn Your Device Into an App Store</title>
      <link>https://guardianproject.github.io/info/2013/11/18/turn-your-device-into-an-app-store/</link>
      <pubDate>Mon, 18 Nov 2013 16:27:30 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/18/turn-your-device-into-an-app-store/</guid>
      <description>&lt;p&gt;As we’ve touched upon in &lt;a href=&#34;https://guardianproject.info/2013/11/05/setting-up-your-own-app-store-with-f-droid/&#34;&gt;previous blog posts &lt;/a&gt; the Google Play model of application distribution has some disadvantages. Google does not make the Play store universally available, instead limiting availability to a subset of countries. Using the Play store to install apps necessitates both sharing personal information with Google and enabling Google to remotely remove apps from your device (colloquially referred to as &lt;a href=&#34;http://www.engadget.com/2008/10/16/google-implemented-an-android-kill-switch-those-rascals/&#34;&gt;having a ‘kill switch’&lt;/a&gt;). Using the Play store also requires a functional data connection (wifi or otherwise) to allow apps to be downloaded. Often there is a need to quickly bootstrap users during training sessions in countries with unreliable/restricted data connectivity, or in extreme cases, &lt;a href=&#34;http://www.nytimes.com/2011/01/29/technology/internet/29cutoff.html?_r=0&#34;&gt;no internet connectivity at all&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org/&#34;&gt;F-Droid&lt;/a&gt; addresses many of these concerns, but still requires a functional data connection in order to access the repository housing applications available for install. Wouldn’t it be great if there was an easy way for users to share applications amongst themselves, in absence of a reliable data connection? Today we would like to announce initial steps the Guardian Project is taking to enable this exact functionality. We’ve been working on a prototype application capable of building F-Droid repositories &lt;strong&gt;on-device&lt;/strong&gt;, allowing users to share apps they already have installed to other users through F-Droid. In this way savvy users can quickly and securely share applications they already know and trust with friends and family without requiring a central market/repository or a reliable internet connection.&lt;/p&gt;

&lt;p&gt;To start, we’ve built a stand-alone prototype application we call “_&lt;strong&gt;Kerplapp&lt;/strong&gt;_” (as in &lt;em&gt;Kerplop for Apps)&lt;/em&gt;. Using Kerplapp an established user can select applications already installed on their phone that they wish to make available to other users. Using the selected applications Kerplapp builds a &lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Simple-Binary-Repository&#34;&gt;simple binary F-Droid repostiory&lt;/a&gt; on the user’s device. The local on-device repository is then made available over a WiFi connection to other users on the local area network. Kerplapp will even display a QR code with the information required to add the local Kerplapp repo as a source repository for an F-Droid client running on another device. We hope to eventually merge our work back into the official F-droid Android client, but while we work out the kinks the Kerplapp application operates side-by-side with the F-Droid client app.&lt;/p&gt;

&lt;div id=&#34;attachment_11966&#34; style=&#34;width: 190px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48.png&#34;&gt;&lt;img aria-describedby=&#34;caption-attachment-11966&#34; class=&#34;size-medium wp-image-11966&#34; alt=&#34;Sharing access to a Kerplapp repo with a QR code.&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-180x300.png&#34; width=&#34;180&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-180x300.png 180w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48-614x1024.png 614w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot_2013-11-18-16-02-48.png 768w&#34; sizes=&#34;(max-width: 180px) 100vw, 180px&#34; /&gt;&lt;/a&gt;
  
  &lt;p id=&#34;caption-attachment-11966&#34; class=&#34;wp-caption-text&#34;&gt;
    Sharing access to a Kerplapp repo with a QR code.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Building on top of F-Droid has a number of advantages. First, we can directly benefit from the tremendous effort and success of the F-Droid project! We’ve been actively contributing improvements &lt;a href=&#34;https://gitorious.org/f-droid/fdroidclient/merge_requests/39&#34;&gt;back to both the F-droid client&lt;/a&gt; and &lt;a href=&#34;https://gitorious.org/f-droid/fdroidserver/merge_requests/127&#34;&gt;the F-droid server&lt;/a&gt;, making it easier for everyone to set up new F-Droid repos and share connection details. Secondly, by using a binary F-Droid repository we can ensure that when users share apps between each other that the apps will continue to receive updates through other channels. That is, if I share an app with you through Kerplapp you will be able to install updates to the app from other F-Droid binary repos and other Kerplapp users – wherever the app and its updates are available with the same APK signature. The F-Droid client will do the hard work of determining what updates are available and compatible with your device&lt;/p&gt;

&lt;p&gt;There’s a lot of work left to be done! One of our short term goals include enabling Bonjour support so that the F-Droid client can find repositories on the local network without requiring them to be added manually. We’re interested in supporting device to device app transfer over a number of channels, starting with HTTPS and eventually adding support for bluetooth and NFC. Building on the success of ChatSecure we’re actively working on supporting F-Droid app transfer over &lt;a href=&#34;https://dev.guardianproject.info/projects/gibberbot/wiki/OTRDATA_Specifications&#34;&gt;OTR-Data&lt;/a&gt;, the ChatSecure proposal for in-band OTR encrypted file transfers. With F-Droid as an OTR-DATA endpoint we can support peer to peer app transfer over a trusted, authenticated, and encrypted channel. We’re also exploring how we can use the OTR keys your contacts already trust to &lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Signing&#34;&gt;sign the F-Droid repository metadata index&lt;/a&gt;, providing greater trust in the accuracy of the metadata provided by peer to peer repositories.&lt;/p&gt;

&lt;p&gt;If you’re curious you can &lt;a href=&#34;https://dev.guardianproject.info/projects/bazaar&#34;&gt;follow Kerplapp’s development on our project tracker.&lt;/a&gt; We’re also looking for adventurous users &lt;a href=&#34;https://guardianproject.info/builds/Kerplapp/&#34;&gt;to install the Kerplapp prototype application&lt;/a&gt; to provide feedback and testing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your own private dropbox with free software</title>
      <link>https://guardianproject.github.io/info/2013/11/12/your-own-private-dropbox-with-free-software/</link>
      <pubDate>Tue, 12 Nov 2013 12:50:23 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/12/your-own-private-dropbox-with-free-software/</guid>
      <description>&lt;p&gt;There are lots of file storage and sharing software packages out there that make it easy for a group of people to share files. Dropbox is perhaps the most well known of the group, it provides an easy way for a group of people to share files. The downside of Dropbox is that it is not a private service, just like any cloud-based service. Dropbox has total access to your files that you store there. That means its likely that the NSA and its collaborators do too.&lt;/p&gt;

&lt;p&gt;Dropbox also knows where the computers are that are accessing their service because they can see the IP address of the incoming connections. To help with this, it is possible to use use Dropbox over Tor, thankfully they have provided proxy settings.&lt;/p&gt;

&lt;p&gt;For our shared files, we use &lt;a href=&#34;http://sparkleshare.org/&#34; target=&#34;_blank&#34;&gt;SparkleShare&lt;/a&gt;. It provides an experience very similar to Dropbox: you have a SparkleShare folder that is synced up with the service, and in turn any other users who are also linked up to it. Once its setup, it is as easy to use as Dropbox, but setting it up takes a bit more work than Dropbox. It builds upon two software packages well known for security and reliability: &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt;, and works with Tor Hidden Services. It runs on Windows, Mac OS X, and GNU/Linux, and there is an &lt;a href=&#34;https://github.com/NewProggie/SparkleShare-Android&#34; target=&#34;_blank&#34;&gt;Android client&lt;/a&gt; in the works.&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion.png&#34; alt=&#34;sparkleshare-onion&#34; width=&#34;312&#34; height=&#34;342&#34; class=&#34;alignright size-full wp-image-11936&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion.png 312w, https://guardianproject.info/wp-content/uploads/2013/11/sparkleshare-onion-273x300.png 273w&#34; sizes=&#34;(max-width: 312px) 100vw, 312px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use any git service as the server for SparkleShare, including github, bitbucket, &lt;a href=&#34;https://gitorious.org/&#34; target=&#34;_blank&#34;&gt;gitorious&lt;/a&gt;, etc. But these have the same issues as putting your files on Dropbox: that service has complete access to your files. For extra protection, SparkleShare &lt;a href=&#34;https://github.com/hbons/SparkleShare/wiki/Client-Side-Encryption&#34; target=&#34;_blank&#34;&gt;can encrypt the files on the client-side&lt;/a&gt;, have encrypted shared folders with SparkleShare, so that the server does not have access to the files. For the last piece of setting up a private SparkleShare, you need a computer that you can &lt;code&gt;ssh&lt;/code&gt; to, and has &lt;code&gt;git&lt;/code&gt; and Tor on it. This computer could even be an old Android device running &lt;a href=&#34;https://guardianproject.info/code/lildebi/&#34; target=&#34;_blank&#34;&gt;Lil’ Debi&lt;/a&gt;, it only needs enough disk space for your SparkleShare files and a steady network connection. Running it on your own computer means it can use a Tor Hidden Service, and that all of the metadata related to who is editing what files remains private.&lt;/p&gt;

&lt;p&gt;To start, setup a Tor Hidden Service to the sshd port. You can read all about that process in the &lt;a href=&#34;https://www.torproject.org/docs/tor-hidden-service.html&#34; target=&#34;_blank&#34;&gt;Tor instructions&lt;/a&gt;, but basically, you need to add something like this to the &lt;code&gt;torrc&lt;/code&gt; configuration file:&lt;/p&gt;

&lt;pre&gt;HiddenServiceDir /var/lib/tor/ssh_hidden_service/
HiddenServicePort 22 127.0.0.1:22
&lt;/pre&gt;

&lt;p&gt;Then restart tor, and it will generate two files in &lt;code&gt;/var/lib/tor/ssh_hidden_service/&lt;/code&gt;, open the file called &lt;code&gt;hostname&lt;/code&gt; to see your new .onion address. We’re going to use &lt;code&gt;fakefakefakefake.onion&lt;/code&gt; as our made-up one for this HOWTO. That is the address you will use in SparkleShare as the server address.&lt;/p&gt;

&lt;p&gt;Next &lt;code&gt;ssh&lt;/code&gt; needs to be setup to use Tor to access the .onion address of the Tor Hidden Service. To do that we need the wonderful Netcat tool (&lt;code&gt;nc&lt;/code&gt;). On Debian/Ubuntu, run &lt;code&gt;sudo apt-get install netcat-openbsd&lt;/code&gt; to get it, its included with Mac OS X by default. Now edit your SSH config file, its usually in &lt;code&gt;~/.ssh/config&lt;/code&gt;, and add this section:&lt;/p&gt;

&lt;pre&gt;Host *.onion
     Compression yes
     ProxyCommand nc -X 5 -x 127.0.0.1:9050 %h %p
&lt;/pre&gt;

&lt;p&gt;For Windows, you need to use &lt;code&gt;connect&lt;/code&gt; proxy, which is thankfully included in SparkleShare. You can optionally use &lt;code&gt;connect&lt;/code&gt; instead of Netcat/&lt;code&gt;nc&lt;/code&gt; on Mac OS X (&lt;code&gt;fink install connect&lt;/code&gt; or &lt;code&gt;brew install connect&lt;/code&gt;) and GNU/Linux (e.g. &lt;code&gt;apt-get install connect-proxy&lt;/code&gt; or &lt;code&gt;yum install connect-proxy&lt;/code&gt;). Instead of the snippet above, use this snippet in &lt;code&gt;~/.ssh/config&lt;/code&gt; to use &lt;code&gt;connect&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;Host *.onion
     Compression yes
     ProxyCommand connect -5 -S 127.0.0.1:9050 %h %p
&lt;/pre&gt;

&lt;p&gt;Now its time to set up the git repo on the server that will be the conduit for sharing files between the different users. Basically, all you need to do is create a new folder, then make it a “bare” git repo (you can read &lt;a href=&#34;http://git-scm.com/book/en/Git-on-the-Server-Setting-Up-the-Server&#34; target=&#34;_blank&#34;&gt;all about it in the git book&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;ssh g&amp;#x69;t&amp;#x40;&amp;#x66;a&amp;#x6b;e&amp;#x66;&amp;#x61;k&amp;#x65;f&amp;#x61;&amp;#x6b;e&amp;#x66;a&amp;#x6b;&amp;#x65;.&amp;#x6f;n&amp;#x69;&amp;#x6f;n
mkdir /home/git/MyPrivateShare
cd /home/git/MyPrivateShare
git init --bare
&lt;/pre&gt;

&lt;p&gt;For sshing to the git, we set up a single account called &lt;code&gt;git&lt;/code&gt;, then to grant access, we add the SSH key (SparkleShare calls this the &lt;em&gt;Client ID&lt;/em&gt;) to the &lt;code&gt;git&lt;/code&gt; account’s &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now everything should be ready to start adding clients! In SparkleShare, go to Add Hosted Project…, choose On my own server, then enter your username and .onion address (&lt;em&gt;ssh:&amp;#x2f;&amp;#x2f;&amp;#x67;&amp;#x69;t@fak&amp;#x65;&amp;#x66;&amp;#x61;&amp;#x6b;efake&amp;#x66;&amp;#x61;&amp;#x6b;&amp;#x65;.onio&amp;#x6e;&lt;/em&gt;) in &lt;strong&gt;Address&lt;/strong&gt; and the path to the git repo (&lt;em&gt;/home/git/MyPrivateShare&lt;/em&gt;) in &lt;strong&gt;Remote Path&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup.png&#34; alt=&#34;SparkleShare Setup&#34; width=&#34;686&#34; height=&#34;427&#34; class=&#34;alignnone size-full wp-image-11945&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup.png 686w, https://guardianproject.info/wp-content/uploads/2013/11/Screenshot-SparkleShare-Setup-300x186.png 300w&#34; sizes=&#34;(max-width: 686px) 100vw, 686px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the client will download the entire git repository from the server, and you’ll then have a working shared dropbox! If there are a lot of files in it, then the first sync can take a long time before any files show up. This is because git first downloads the entire history first, then it checks out the files. After that initial setup, then the new files show up quite quickly.&lt;/p&gt;

&lt;p&gt;So this SparkleShare setup keeps your files on computers that you control, it prevents information and metadata from being leaked to the network while people are using this SparkleShare setup. When using Client Side Encryption, even less data is leaked. The server cannot access the content of the files at all since they are encrypted. The the server in this case would only be able to see the network traffic, and which ssh key was used to access the server. If everyone accessing this setup used the same user account (i.e. &lt;code&gt;git&lt;/code&gt;) and ssh key, then the server would not even know which user is making the changes. This is about as private as you could hope for in a shared dropbox folder.&lt;/p&gt;

&lt;p&gt;One last nice feature of this setup is that git server does not need a domain name, static IP or even a public IP, it just needs a working internet connection. As long as it can connect to Tor, then the Hidden Service will work. So if this private dropbox is for extra sensitive stuff, it could be stashed anywhere it can get power and wifi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up your own app store with F-Droid</title>
      <link>https://guardianproject.github.io/info/2013/11/05/setting-up-your-own-app-store-with-f-droid/</link>
      <pubDate>Tue, 05 Nov 2013 11:55:43 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/11/05/setting-up-your-own-app-store-with-f-droid/</guid>
      <description>

&lt;p&gt;(_This blog post as now been cooked into an &lt;a href=&#34;https://f-droid.org/wiki/page/Setup_an_FDroid_App_Repo&#34; target=&#34;_blank&#34;&gt;updated HOWTO&lt;/a&gt;_)&lt;/p&gt;

&lt;p&gt;The Google Play Store for Android is not available in all parts of the world, US law restricts its use in certain countries like Iran, and many countries block access to the Play Store, like China. Also, the Google Play Store tracks all user actions, reporting back to Google what apps have been installed and also run on the phone. Because of the NSA leaks, we’re seeing that governments are &lt;a href=&#34;http://www.theguardian.com/technology/2013/oct/30/google-reports-nsa-secretly-intercepts-data-links&#34; target=&#34;_blank&#34;&gt;actively tapping&lt;/a&gt; into &lt;a href=&#34;http://www.nytimes.com/2013/10/31/technology/nsa-is-mining-google-and-yahoo-abroad.html&#34; target=&#34;_blank&#34;&gt;the raw data streams&lt;/a&gt; of Google, Yahoo, and others. So that means the information the Google Play Store sends back to Google is also intercepted by the NSA (and probably other country’s agencies), and that information is shared with other governments. In other words, your activity on the Google Play Store is far from private. Lastly, the Google Play Store is not free software, unlike the core of Android itself. It is proprietary software that Google entirely controls.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/your-own-app-store.png&#34; alt=&#34;your-own-app-store&#34; width=&#34;300&#34; height=&#34;203&#34; class=&#34;alignright size-full wp-image-11896&#34; /&gt; &lt;a href=&#34;https://f-droid.org&#34; title=&#34;F-Droid Home Page&#34; target=&#34;_blank&#34;&gt;F-Droid&lt;/a&gt; is a wonderful, free app store for Android. It is modeled after the &lt;a href=&#34;http://www.debian.org&#34; title=&#34;Debian home page&#34; target=&#34;_blank&#34;&gt;Debian GNU/Linux&lt;/a&gt; distro. It has its own package repositories (repos) and build servers for all the apps that are part of the official OS. Like Debian and Ubuntu, you can also setup your own repos for anyone to use. Any free software can be added to the official F-Droid repos, where they are built and signed by the F-Droid server. This can be annoying because it means that your apps in F-Droid are signed by a different key than your apps in the Google Play Store. If you host your own F-Droid repo, then people can use F-Droid to install your own builds signed by your own signing key.&lt;/p&gt;

&lt;p&gt;This is a quick HOWTO for how to setup such a repository on a Debian or Ubuntu box. It is somewhat technical, you will use the terminal, but you don’t need to be a terminal expert to follow along. First you need a the &lt;code&gt;fdroidserver&lt;/code&gt; tools and a webserver. For the webserver, here we use &lt;em&gt;nginx&lt;/em&gt; for the webserver since its lightweight, but any will do if you already have one running. The fdroidserver tools are not yet in the official Debian/Ubuntu/etc repos, so you have to add our PPA (Personal Package Archive) to get it (fingerprint: &lt;tt&gt;F50E ADDD 2234 F563&lt;/tt&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:guardianproject/ppa
sudo apt-get update
sudo apt-get install fdroidserver nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the case of this HOWTO, we’re going to setup a “&lt;a href=&#34;https://f-droid.org/manual/fdroid.html#Simple-Binary-Repository&#34; target=&#34;_blank&#34;&gt;Simple Binary Repository&lt;/a&gt;” to host our official APKs. The repo will be set up in the recommended &lt;code&gt;fdroid/&lt;/code&gt; subdirectory. This gives the &lt;code&gt;fdroid&lt;/code&gt; tool its own directory to work in, and makes the repo URL clearly marked as an FDroid repo. Let’s give our normal user control over this subdirectory in the web root so that we don’t need to run the F-Droid tools as root (with &lt;em&gt;nginx&lt;/em&gt;, the webroot is &lt;code&gt;/usr/share/nginx/www&lt;/code&gt;, it is different for other webservers):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /usr/share/nginx/www/fdroid
sudo chown -R $USER /usr/share/nginx/www/fdroid
cd /usr/share/nginx/www/fdroid
fdroid init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now put your APK files into &lt;code&gt;/usr/share/nginx/www/fdroid/repo&lt;/code&gt; and you are ready to run the commands to build the repo (if &lt;code&gt;fdroid init&lt;/code&gt; cannot find your Android SDK in &lt;code&gt;/opt/android-sdk&lt;/code&gt; or &lt;code&gt;$ANDROID_HOME&lt;/code&gt;, it will prompt you for the path):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/share/nginx/www/fdroid
cp /path/to/*.apk /usr/share/nginx/www/fdroid/repo/
fdroid update -c
fdroid update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://f-droid.org&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3-300x75.png&#34; alt=&#34;fdroidheader3&#34; width=&#34;300&#34; height=&#34;75&#34; class=&#34;alignleft size-medium wp-image-11906&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3-300x75.png 300w, https://guardianproject.info/wp-content/uploads/2013/11/fdroidheader3.png 720w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;Voila! Now you have a working F-Droid Repo! Add it to an F-Droid client on your Android device to test it out. That is done in the &lt;strong&gt;Manage Repos&lt;/strong&gt; screen available from the menu. Your repo URL will be the hostname or IP address of your machine with &lt;code&gt;/fdroid/repo/&lt;/code&gt; added to the end of it, i.e. &lt;code&gt;https://mysecureserver.com/fdroid/repo/&lt;/code&gt; or &lt;code&gt;http://192.168.2.53/fdroid/repo/&lt;/code&gt;. You can temporarily uncheck the official repos to easily see what F-Droid found in your new repo.&lt;/p&gt;

&lt;h2 id=&#34;customization&#34;&gt;Customization&lt;/h2&gt;

&lt;p&gt;You can also customize your repo by editing the config file. Be sure to use a programming text editor, like &lt;code&gt;editor /usr/share/nginx/www/fdroid/config.py&lt;/code&gt;. In the config file, you can set the name of the repo, the description, the icon, paths to specific versions of the build tools, links to a related wiki, and whether to keep stats. Here’s the basic repo description block:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;repo_url = &amp;quot;https://guardianproject.info/fdroid/repo&amp;quot;
repo_name = &amp;quot;My Local Repo&amp;quot;
repo_icon = &amp;quot;GP_Logo_hires.png&amp;quot;
repo_description = &amp;quot;&amp;quot;&amp;quot;
This is a local test repository of Hans-Christoph Steiner &amp;lt;&amp;amp;#x68;a&amp;amp;#x6e;s@&amp;amp;#x67;ua&amp;amp;#x72;d&amp;amp;#x69;&amp;amp;#x61;n&amp;amp;#x70;ro&amp;amp;#x6a;e&amp;amp;#x63;&amp;amp;#x74;.&amp;amp;#x69;nf&amp;amp;#x6f;&amp;gt;.  It is a repository of Guardian Project apps.
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To put your icon into your repo, choose a PNG image to put in your repo. The PNG goes in &lt;code&gt;/usr/share/nginx/www/fdroid/&lt;/code&gt;, the file can be named whatever you want (by default its &lt;code&gt;fdroid-icon.png&lt;/code&gt;). If you change the name from the default, be sure to update &lt;code&gt;repo_icon&lt;/code&gt; and &lt;code&gt;archive_icon&lt;/code&gt; in &lt;code&gt;/usr/share/nginx/www/fdroid/config.py&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;more-security&#34;&gt;More Security&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2010/02/apg.png&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2010/02/apg-150x150.png&#34; alt=&#34;apg&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-1029&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2010/02/apg-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2010/02/apg.png 256w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; /&gt;&lt;/a&gt;Now that you have a working repo, its time to improve the security. Generating a repo in place is very easy, that is why this HOWTO started there, but it is not as secure as it should be if your repo is going to be your main distribution point. When generating the repo in place, make sure that &lt;code&gt;config.py&lt;/code&gt; is not accessible via the web, since it contains passwords. If the file permissions are correct (e.g. &lt;code&gt;chmod 0600 config.py&lt;/code&gt;), then &lt;code&gt;config.py&lt;/code&gt; will not be readable by the webserver. But the signing keys will still be that public server. To improve this situation, generate the repo on a non-public machine like your laptop, keeping &lt;code&gt;config.py&lt;/code&gt; and the keystore only on that machine, then use &lt;code&gt;fdroid server update&lt;/code&gt; to publish the changes to your repo on a separate server. You just need to set &lt;code&gt;serverwebroot&lt;/code&gt; in &lt;code&gt;config.py&lt;/code&gt; properly, then &lt;code&gt;fdroid server update&lt;/code&gt; will do the publishing via rsync over ssh. So both computers will have to have ssh and rsync installed and setup.&lt;/p&gt;

&lt;p&gt;You can also use your own existing signing key rather than the one generated by &lt;code&gt;fdroid init&lt;/code&gt;, just edit &lt;code&gt;repo_keyalias&lt;/code&gt;, &lt;code&gt;keystore&lt;/code&gt;, &lt;code&gt;keystorepass&lt;/code&gt;, &lt;code&gt;keypass&lt;/code&gt;, and &lt;code&gt;keydname&lt;/code&gt; in &lt;code&gt;/usr/share/nginx/www/fdroid/config.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since we like Tor and its Hidden Services for providing privacy, we also want to setup an F-Droid repository that is accessible over a Tor Hidden Service aka onion address. This will be covered in a future HOWTO.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Issues when distributing software</title>
      <link>https://guardianproject.github.io/info/2013/10/31/issues-when-distributing-software/</link>
      <pubDate>Thu, 31 Oct 2013 15:51:19 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/10/31/issues-when-distributing-software/</guid>
      <description>&lt;p&gt;There is currently a &lt;a href=&#34;http://lists.debian.org/debian-security/2013/10/msg00027.html&#34; target=&#34;_blank&#34;&gt;discussion underway on the Debian-security list&lt;/a&gt; about adding TLS and Tor functionality to the official repositories (repos) of Debian packages that is highlighting how we need to update how we think about the risks when distributing software. Mostly, we are used to thinking about making sure that the software that the user is installing is the same exact software that has been posted for distribution. This is generally handled by signing the software package, then verifying that signature on the user’s machine. This is how it works on Mac OS X, Windows, Debian, etc. etc.&lt;/p&gt;

&lt;p&gt;But the authenticity of a software package is not the only issue that needs to be addressed, especially these days where many companies and governments around the world are trying to track everything that anyone is doing on the internet. In order to understand why Tor and TLS would be useful here, it good to break down the various concerns (or threats if you prefer):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;package authenticity &lt;em&gt;(software can be modified while being downloaded)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;package availability &lt;em&gt;(software security updates can be individually blocked)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;repo availability &lt;em&gt;(internet services can be blocked by governments and companies)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;who’s downloading what package &lt;em&gt;(currently visible to anyone who can see the network traffic, including open wifi, etc.)&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Most people distributing software are used to thinking about #1 verifying packages when thinking about the security of software distribution. #2, #3, and #4 are also important, and currently not well addressed. This is where TLS and Tor come in. Both can help prevent Man-In-The-Middle manipulations as well as reduce the amount of information that is leaked to the network. Tor can also help with #3. Since Tor is difficult to block, it is often uses to circumvent censorship. In this case a software repo could be blocked entirely, and Tor could help with gaining access to it. The Update Framework has &lt;a href=&#34;https://github.com/theupdateframework/tuf/blob/develop/README.md&#34; title=&#34;TUF: The Update Framework -  Security&#34; target=&#34;_blank&#34;&gt;a good overview of the possible attacks&lt;/a&gt; against software repos.&lt;/p&gt;

&lt;p&gt;So having software repos available with both TLS and Tor available as options is a very good idea. As far as I have seen, there are not any Debian repos available via a Tor Hidden Service. There are a number of official mirrors that already support TLS/HTTPS. You can find them using &lt;a href=&#34;https://gist.github.com/eighthave/7285154&#34; title=&#34;the script in a gist paste&#34; target=&#34;_blank&#34;&gt;this script:&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/python

import urllib2
import re
import ssl
import sys

# # find generic mirrors
mirrors = urllib2.urlopen(&#39;http://www.debian.org/mirror/list&#39;)
https = []
for line in mirrors.readlines():
    m = re.match(&#39;.*&amp;lt;td valign=&amp;quot;top&amp;quot;&amp;gt;&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http(.*)&amp;quot;&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            https.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

# print &#39;HTTPS apt repos:&#39;
#for url in https:
#    print url


# # find security mirrors
mirrors = urllib2.urlopen(&#39;http://www.debian.org/mirror/list-full&#39;)
securitys = []
for line in mirrors.readlines():
    m = re.match(&#39;.*&amp;lt;/tt&amp;gt;&amp;lt;br&amp;gt;Security updates over HTTP: &amp;lt;tt&amp;gt;&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http(.*)&amp;quot;&amp;gt;.*/debian-security/&amp;lt;/a&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            securitys.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

# print &#39;HTTPS security repos:&#39;
# for url in securitys:
#     print url


# now find the backports mirrors
mirrors = urllib2.urlopen(&#39;http://backports-master.debian.org/Mirrors/&#39;)
backports = []
for line in mirrors.readlines():
#&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;http://be.mirror.eurid.eu/debian-backports/&amp;quot;&amp;gt;/debian-backports/&amp;lt;/a&amp;gt;
    m = re.match(&#39;.*&amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;http(.*)&amp;quot;&amp;gt;.*/debian-backports/&amp;lt;/a&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            backports.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

#print &#39;HTTPS backports repos:&#39;
#for url in backports:
#    print url


# now find the CD image mirrors
mirrors = urllib2.urlopen(&#39;http://www.debian.org/CD/http-ftp/&#39;)
cds = []
for line in mirrors.readlines():
# &amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http://mirror.easyspeedy.com/debian-cd/&amp;quot;&amp;gt;HTTP&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    m = re.match(&#39;.*&amp;lt;a rel=&amp;quot;nofollow&amp;quot; href=&amp;quot;http(:.*)&amp;quot;&amp;gt;HTTP&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;.*&#39;, line)
    if m:
        url = &#39;https&#39; + m.group(1)
        print &#39;trying: &#39;,
        print url,
        print &#39;...&#39;,
        sys.stdout.flush()
        try:
            response=urllib2.urlopen(url, timeout=1)
            cds.append(url)
            print &#39;success!&#39;
        except urllib2.URLError as err:
            print &#39;fail!&#39;
        except ssl.SSLError as err:
            print &#39;bad SSL!&#39;

print &#39;HTTPS CD image repos:&#39;
for url in cds:
    print url


# now write everything to a file
f = open(&#39;/tmp/https-debian-archives.txt&#39;, &#39;w&#39;)

f.write(&#39;HTTPS apt repos\n&#39;)
f.write(&#39;---------------\n&#39;)
for url in https:
    f.write(url + &#39;\n&#39;)

f.write(&#39;\n\nHTTPS security repos\n&#39;)
f.write(&#39;---------------\n&#39;)
for url in securitys:
    f.write(url + &#39;\n&#39;)

f.write(&#39;\n\nHTTPS backports repos\n&#39;)
f.write(&#39;--------------------\n&#39;)
for url in backports:
    f.write(url + &#39;\n&#39;)

f.write(&#39;\n\nHTTPS CD image repos\n&#39;)
f.write(&#39;--------------------\n&#39;)
for url in cds:
    f.write(url + &#39;\n&#39;)


f.close()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Keeping data private means it must be truly deletable!</title>
      <link>https://guardianproject.github.io/info/2013/08/23/keeping-data-private-means-it-must-be-truly-deletable/</link>
      <pubDate>Fri, 23 Aug 2013 17:36:49 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/08/23/keeping-data-private-means-it-must-be-truly-deletable/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/08/erase-hard-drive.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/08/erase-hard-drive-150x150.jpg&#34; alt=&#34;deleting data&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignright size-thumbnail wp-image-11598&#34; /&gt;&lt;/a&gt;There are lots of apps these days that promise to keep your data secure, and even some that promise to wipe away private information mere seconds or minutes after it has been received. It is one thing to keep data out of view from people you don’t want seeing it, it is also important to be able to truly delete information. Unfortunately computers make it very difficult to make data truly disappear. When we tell a computer to delete a file, it only deletes the reference to the data. The data itself remains on the disk unchanged. For any UNIX geek out there, you can easily see an example of that by greping a partition (e.g. &lt;code&gt;sudo grep password /dev/sda3&lt;/code&gt;. To solve this problem, there are “secure delete” options. Secure deletion removes the reference like regular deletion, then wipes the data on the disk by overwriting it with random data. That’s much better, but not always good enough. It turns out that its possible to remove the hard disk and read magnetic residue and recover even wiped data.&lt;/p&gt;

&lt;p&gt;Mobile devices only make that problem worse because they almost always rely on flash memory for disk storage. Flash memory has wear-leveling programming built into it, so it is not possible to guarantee that a file will be wiped without overwriting the whole flash disk, then deleting it all and overwriting the whole thing again. Not only is it not practical to delete the whole disk just to remove one file, it also takes a long time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack-300x199.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;199&#34; class=&#34;alignleft size-medium wp-image-11600&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack-300x199.jpg 300w, https://guardianproject.info/wp-content/uploads/2013/08/coldbootattack.jpg 1024w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;So what can we do about this? Use encryption! [&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.225.6872&#34; title=&#34;Secure Data Deletion for USB Flash Memory (2011)&#34; target=&#34;_blank&#34;&gt;1&lt;/a&gt;] If the data is encrypted before its written to either a classic hard drive or flash memory disk, then the actual data is never on the disk itself. If the data is encrypted with a good passphrase, then just “forgetting” the key will make it basically impossible to recover the data. Additionally, encrypted data looks like random data, so it is easy to hide the deleted, encrypted data from the recovery techniques by adding random garbage to the disk. It turns out that with the right architecture, a key can be forgotten quite quickly, much quicker than even the most basic secure deletion.&lt;/p&gt;

&lt;p&gt;This logic is built into our new passphrase library &lt;a href=&#34;https://github.com/guardianproject/cacheword&#34; target=&#34;_blank&#34;&gt;Cacheword&lt;/a&gt;. Cacheword is a library for securely working with and caching passphrases. It plugs right into &lt;a href=&#34;https://guardianproject.info/code/sqlcipher&#34; target=&#34;_blank&#34;&gt;SQLCipher for Android&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.info/code/iocipher&#34; target=&#34;_blank&#34;&gt;IOCipher&lt;/a&gt;. SQLCipher and IOCipher are both ways for easily storing data using strong AES-256 encryption. Cacheword then handles getting the passphrase from the user. Instead of feeding that passphrase directly to SQLCipher or IOCipher, it creates an encrypted file for storing a strong AES-256 key and that is what is used to lock SQLCipher and IOCipher. The user’s passphrase then just unlocks that encrypted key file.&lt;/p&gt;

&lt;p&gt;The means you can get rapid deletion of data stores of any size by just deleting the key file. The user never sees the actual key so they cannot divulge it. Since the user’s passphrase is not the key for the data but instead the key to the Cacheword key file, the secure deletion can first focus on that key file. The key file is small, so that can happen very quickly. Then even if the data files are recovered, the user does not has the passphrase to the data, its only locked away in the now deleted key file. The key was stored encrypted, so a standard deletion will provide decent protection: it will look like random data on the disk.&lt;/p&gt;

&lt;p&gt;To really ensure the key and the data is gone for good, an app can implement a full wiping procedure. Normal wiping procedures can follow as a background task, making it harder and harder to recover the data, no matter who the adversary is. The full wiping procedure would go something like this (with a rough timeframe for each step):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cacheword wipes the passphrase from memory (nanoseconds to milliseconds)&lt;/li&gt;
&lt;li&gt;the Cacheword key file is deleted (milliseconds)&lt;/li&gt;
&lt;li&gt;write random garbage to disk patterned after the key file to obscure the deleted key file (milliseconds to minutes)&lt;/li&gt;
&lt;li&gt;delete the SQLCipher/IOCipher data files (seconds to minutes)&lt;/li&gt;
&lt;li&gt;fill entire memory (RAM) with random garbage (minutes to hours)&lt;/li&gt;
&lt;li&gt;fill entire disk with random garbage (hours)&lt;/li&gt;
&lt;li&gt;power off device&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s the overview of the process. But of course, there are always annoying technical details, and I’ll continue on about some of them, for those who like such things.&lt;/p&gt;

&lt;p&gt;To start with, the user’s passphrase will most likely be stored in memory by code outside of Cacheword, SQLCipher, and IOCipher. For example, the Android text entry widget will have the passphrase pass thru it, and inevitably will store that data in memory. It is up to the garbage collection to remove that from memory, and the garbage collection might not zero out the memory before deallocating it. We’re still looking into ideas for how to trigger that, and would love to hear suggestions.&lt;/p&gt;

&lt;p&gt;To truly wipe the data from the disk, there would need to be multiple passes where the entire disk is filled up then the entire disk is deleted. That is rarely practical. So hiding the existence of the encrypted data stores is difficult to do in practice. The encrypted data will remain encrypted with AES-256 using a random, full length key, so it would be basically impossible to crack using publicly known technology and techniques.&lt;/p&gt;

&lt;p&gt;The best bet for preventing the most advanced adversary from getting the deleted data would involve a few cycles of rebooting, filling up the memory and disk with random garbage after doing the procedure outlined above. A more rapid version of that would be to delay filling the disk until after a reboot. That would ensure that the key to the data is thoroughly wiped as quickly as possible before starting in on the much less important and long lasting task of wiping the entire disk to hide the deleted data files.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Orbot v12 now in beta</title>
      <link>https://guardianproject.github.io/info/2013/07/24/orbot-v12-now-in-beta/</link>
      <pubDate>Wed, 24 Jul 2013 12:32:45 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/07/24/orbot-v12-now-in-beta/</guid>
      <description>&lt;p&gt;After much too long, we’ve got a new build of Orbot out, and it is… a stable beta! Nothing radically new here, just many small changes to continue to improve the experience of our hundreds of thousands of active users out in the world. There will likely be one or two more “beta” releases to iron out small issues in v12, but for now, this one is good to go.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2013/07/mightyorbot.jpg&#34;&gt;&lt;img alt=&#34;mightyorbot&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/07/mightyorbot-225x300.jpg&#34; width=&#34;225&#34; height=&#34;300&#34; /&gt;&lt;br /&gt;
&lt;/a&gt; &lt;em&gt;a very might orbot&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The really exciting aspect of this release is that we have ironed out some integration points with other apps, like our own Gibberbot, and third-party apps like DuckDuckGo. These apps can now tell if Orbot is installed, running, and if not, request it to start up. Once Orbot is started, it will return to the calling app, and let them know they can proceed with routing their traffic over Tor. We hope that through use of our &lt;a href=&#34;https://github.com/guardianproject/OnionKit/blob/master/libonionkit/src/info/guardianproject/onionkit/ui/OrbotHelper.java&#34;&gt;OrbotHelper utility&lt;/a&gt; (part of the &lt;a href=&#34;https://github.com/guardianproject/OnionKit&#34;&gt;OnionKit/NetCipher library&lt;/a&gt;), many more apps will choose to provide their users with better anonymity and privacy of their network traffic.&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;Since we haven’t done a release in awhile, and we have some new build &lt;/span&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;tools, I mostly want to make sure I have not done something terribly &lt;/span&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;wrong in the build process. Please confirm back if you are able to &lt;/span&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;successfully use this release. You can report issues &lt;a href=&#34;https://dev.guardianproject.info/projects/orbot/issues/new&#34;&gt;on our bug tracker&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We’ve switched versioning styles to a simpler major.minor.bugfix “semantic” model, so this is now Orbot 12.0.1.&lt;/p&gt;

&lt;p&gt;Signed 12.0.1 beta release build is here:&lt;br /&gt;
&lt;a href=&#34;https://rink.hockeyapp.net/apps/92ace552aa5344d1a802decb71525897/&#34;&gt;https://rink.hockeyapp.net/apps/92ace552aa5344d1a802decb71525897/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Direct APK is here: &lt;a href=&#34;https://guardianproject.info/releases/Orbot-release-12.0.1-beta-1.apk&#34;&gt;https://guardianproject.info/releases/Orbot-release-12.0.1-beta-1.apk&lt;/a&gt; (&lt;a href=&#34;https://guardianproject.info/releases/Orbot-release-12.0.1-beta-1.apk.asc&#34;&gt;gpg sig&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;We also have automated “nightly” debug builds from the development branch:&lt;br /&gt;
&lt;a href=&#34;https://guardianproject.info/builds/Orbot/&#34;&gt;https://guardianproject.info/builds/Orbot/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Updates in 12.0.1:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;updated to Tor 0.2.4.15-RC&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;flashy screen bug fixed&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;now shows traffic stats in notification area&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;better handling of preference settings changes&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;font-size: 13px;&#34;&gt;added superuser permission for Cyanogen&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;better support for “start” Intent, integration with other apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tagged source is here:&lt;br /&gt;
&lt;a href=&#34;https://gitweb.torproject.org/n8fr8/orbot.git/log/refs/tags/12.0.1&#34;&gt;https://gitweb.torproject.org/n8fr8/orbot.git/log/refs/tags/12.0.1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Our Newest App: PixelKnot</title>
      <link>https://guardianproject.github.io/info/2013/07/18/our-newest-app-pixelknot/</link>
      <pubDate>Thu, 18 Jul 2013 13:14:49 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/07/18/our-newest-app-pixelknot/</guid>
      <description>&lt;p&gt;Have you ever hidden in plain sight? Worn camouflage in the woods or an invisibility cloak in a narrow crooked alley? It’s really hard to do properly. We’re hoping that all changes with PixelKnot.&lt;/p&gt;

&lt;p&gt;PixelKnot is an app for hiding secret messages in pictures.  Sort of like invisible ink on the back of a painting, updated to the present.  The ancient art known as steganography, now updated for the 21st century and requiring a more rigorous set of safety standards.&lt;/p&gt;

&lt;p&gt;The idea is to let anyone, anywhere share a secret with a friend. To most people, all they see is a picture. But to the right person, they know that someone has left them a message in that picture using PixelKnot. And they can find the message by opening that same picture in PixelKnot. Some people will even add a password to add another layer of protection to make sure that the message only ends up with the right person. And even if the message is detected, it’s also encrypted, making it that much harder to decode.&lt;/p&gt;

&lt;p&gt;While hiding in plain sight using the app is easy, the app itself isn’t.  To define it, we’ve established the Guardian Project steganography standard. The approach of using steganography has some known limitations, but to be secure and reliable, for us the steganographed image must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Have the original image appear, to the trained human eye, unedited.&lt;/li&gt;
&lt;li&gt;Have the bytes of the image appear, to a trained analyst, undistorted so much so as to arouse suspicion.&lt;/li&gt;
&lt;li&gt;Have the complete message be recoverable no matter how it is transmitted.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As recent media stories have shown, large scale analysis is becoming a reality with increasing speed. Our standard seeks to ensure that our pictures, and the messages inside, can’t be plucked out like a needle in a haystack.  Another issue is that a lot of social media sites shrink and distort images that users upload.  This breaks our cipher since it’s technically a different image than what the User uploaded.  We’re fixing it so that it’s not a problem.  Already it works across Flickr, Tumblr and Google+,  with Facebook in the pipeline.&lt;/p&gt;

&lt;p&gt;To build the steganography into the app, we used the &lt;a title=&#34;f5 steganography&#34; href=&#34;https://code.google.com/p/f5-steganography/&#34; target=&#34;_blank&#34;&gt;F5 algorithm&lt;/a&gt;, which is resistant to visual and statistical attacks. Yet it still offers a large steganographic capacity, by using matrix encoding to improve the efficiency of embedding. F5 uses permutative straddling to uniformly spread out the changes over the whole steganogram, which helps us maintain the standards mentioned above that keep the messages from being detected.&lt;/p&gt;

&lt;p&gt;How safe is safe, you might be wondering? We’ve been running tests on images created by PixelKnot using &lt;a title=&#34;Stegdetect&#34; href=&#34;http://www.outguess.org/detection.php&#34; target=&#34;_blank&#34;&gt;Stegdetect&lt;/a&gt;, an automated tool for detecting steganographic content in images. It’s capable of detecting several different steganographic methods to embed hidden information in JPEG images. We trimmed it down to target f5 specifically. The results have been promising, though not 100%.&lt;/p&gt;

&lt;p&gt;One goal we had while building the app was to transform the user experience of security and to see how easy and fun we could make the sharing of hidden messages.  The app starts by deciphering an image if there is text hidden inside already. If not,  it chooses enciphering, asking whether to take a photo or use one from a gallery. Why add unnecessary prompts asking users what they want to do, when there’s only one thing to do? A user can only move forward through the flow of the experience. In this way, we’re trying to increase security through a guided experience. If done properly and transparently, giving the user less options for navigation mean less ways to fail.&lt;/p&gt;

&lt;p&gt;Is hiding messages in pictures the best way to spread secrets so that only the right person hears it? We don’t know.  At times in history, it’s been the only option, like between kings. At other times, it’s merely been used for fun, like scavenger hunts. For PixelKnot, we wanted to make something that could work in both scenarios o. But it’s up to users to decide.&lt;/p&gt;

&lt;p&gt;We hope to share stories of people using PixelKnot in fun new ways.  If you have a idea or experience, please share it with us. We’d also like to add more features to PixelKnot that make strides both in security and in design, so your feedback is important– what would you most like to see? Until then, happy knotting!&lt;/p&gt;

&lt;p&gt;Learn more about the app on &lt;a href=&#34;https://guardianproject.info/apps/pixelknot/&#34; title=&#34;pixelknot&#34;&gt;our site&lt;/a&gt;, or get it directly &lt;a title=&#34;Pixelknot on Google Play&#34; href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.pixelknot&#34; target=&#34;_blank&#34;&gt;from Google Play&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Weather Report On Security</title>
      <link>https://guardianproject.github.io/info/2013/06/14/a-weather-report-on-security/</link>
      <pubDate>Fri, 14 Jun 2013 13:22:28 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/06/14/a-weather-report-on-security/</guid>
      <description>&lt;p&gt;How’s the weather outside? Sunny with a chance of IP blocking.&lt;/p&gt;

&lt;p&gt;We recently launched a new initiative we’re calling: &lt;a href=&#34;https://guardianproject.info/code/weatherrepo/&#34; title=&#34;The Weather Repo&#34;&gt;The Weather Repo&lt;/a&gt;. The goal of the project is for organizations to have a more accurate method of understanding whether the apps they’re using are “safe”. It’s hard to know whether apps that claim to be secure really are. Have they been vetted by a third party? Are there existing case studies? Has a threat analysis been performed?&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;http://weatherrepo.com&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;aligncenter size-medium wp-image-4240&#34; alt=&#34;weatherrepo1&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1-300x300.png&#34; width=&#34;300&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1-300x300.png 300w, https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1-150x150.png 150w, https://guardianproject.info/wp-content/uploads/2013/06/weatherrepo1.png 512w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;We’ve been developing an app store recommendation engine for circumvention tools. One that is backed by better, more open metadata; and interfacing with better, more open repositories. The “better, more open metadata” endeavor is now being pursued by a coalition led by the &lt;a title=&#34;open integrity initiative&#34; href=&#34;https://openintegrity.org/&#34; target=&#34;_blank&#34;&gt;Open Integrity Initiative&lt;/a&gt;. As founding members of the group supporting this initiative, we’ve been working closely to develop tools based on the research and metadata frameworks that they’re contributing. Metadata will be culled from other sources to supplement this approach and allow for a comprehensive scan of the entire app ecosystem.&lt;/p&gt;

&lt;p&gt;The success of the project mainly lays in the fact that the crucial groundwork has been laid for our goal of helping organizations make sense of whether the tools they’re using are “safe” or not. We’ve created an API allowing any organization to take our lessons as well as information and apply it. The growing number of efforts in the security and privacy space, as well as our own goal of a publicly facing “app bazaar” are not possible without groundwork such as this and we’re proud to have been able to produce it.&lt;/p&gt;

&lt;p&gt;Our finished API is now documented at &lt;a href=&#34;http://weatherrepo.com/api/&#34;&gt;http://weatherrepo.com/api&lt;/a&gt; . We put up a blog to post about the project and updates of news and events, available at &lt;a href=&#34;http://weatherrepo.com/report&#34;&gt;http://blog.weatherrepo.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’re extremely interested in the concept of human unit testing and want to make sure that our apps, and the greater set of tools that are out there helping the world, are both usable and that users have the digital literacy to understand how they’re being protected by them and how not. Now that our API is finished, we’re seeding our database with content according to our original set of research questions. And we’re asking for YOUR help. Please go to &lt;a href=&#34;http://weatherrepo.com/report&#34;&gt;http://weatherrepo.com/report&lt;/a&gt; and add details about the tools that you use and/or make. Let’s populate this database together and make the world a more obviously and honestly secure place!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Only Way to Visit Strongbox on a Phone</title>
      <link>https://guardianproject.github.io/info/2013/05/16/the-only-way-to-visit-strongbox-on-a-phone/</link>
      <pubDate>Thu, 16 May 2013 17:43:06 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/05/16/the-only-way-to-visit-strongbox-on-a-phone/</guid>
      <description>&lt;p dir=&#34;ltr&#34;&gt;
  &lt;em&gt;The New Yorker&lt;/em&gt; magazine just launched &lt;a href=&#34;http://www.newyorker.com/online/blogs/closeread/2013/05/introducing-strongbox-anonymous-document-sharing-tool.html&#34;&gt;Strongbox&lt;/a&gt;, a whistleblower submission system that’s hosted on a hidden website. There’s only one way to access the hidden site on a phone or tablet, and that’s with our &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.browser&amp;hl=en&#34;&gt;Orweb app&lt;/a&gt;. Here’s a simple breakdown of how to do securely and anonymously blow the whistle, explained in an interactive tutorial:
&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/howto/strongbox&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;size-medium wp-image-3719  aligncenter&#34; alt=&#34;galaxy19&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/05/galaxy19-199x300.png&#34; width=&#34;199&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/05/galaxy19-199x300.png 199w, https://guardianproject.info/wp-content/uploads/2013/05/galaxy19.png 400w&#34; sizes=&#34;(max-width: 199px) 100vw, 199px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;em&gt;Visit &lt;a title=&#34;strongbox tutorial&#34; href=&#34;https://guardianproject.info/howto/strongbox&#34; target=&#34;_blank&#34;&gt;guardianproject.info/howto/strongbox&lt;/a&gt; for an interactive tutorial on using Strongbox on your phone.&lt;/em&gt;
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  The website exists as a hidden site on what is widely known as the darknet, since you are going there hidden or “in the dark.” Instead of a .com, .org, or .info address (like &lt;a href=&#34;https://guardianproject.info/&#34; target=&#34;_blank&#34;&gt;guardianproject.info&lt;/a&gt;) the sites like Strongbox show up with a .onion. And like you need a web browser to go to a .com web address, you need a darknet browser to go to a .onion darknet address. On a mobile, we make the most secure and anonymous darknet &amp; web browser, Orweb. And if you want to get to strongbox on your phone, we’re the only way to do it.
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  To browse, you’ll need our &lt;a title=&#34;orweb&#34; href=&#34;https://guardianproject.info/apps/orweb&#34; target=&#34;_blank&#34;&gt;Orweb&lt;/a&gt; app. It’s currently only available for Android and you can &lt;a title=&#34;Orweb anonymous browser&#34; href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.browser &#34; target=&#34;_blank&#34;&gt;get it here&lt;/a&gt;. If you have another type of phone or tablet, unfortunately you’ll have to use a computer.
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  For Orweb to be anonymous and give you access to the darknet .onion addresses, you’ll need to enable onion routing with our &lt;a title=&#34;orbot&#34; href=&#34;https://guardianproject.info/apps/orbot&#34; target=&#34;_blank&#34;&gt;Orbot&lt;/a&gt; plugin. This plugin gives Orweb and other compatible apps (like our &lt;a href=&#34;https://play.google.com/store/apps/details?id=info.guardianproject.otr.app.im&#34;&gt;Gibberbot secure chat&lt;/a&gt;  for Facebook, Google, &amp; Jabber) the ability to send web traffic through the darknet, thus avoiding tracking as well as blocking. You can &lt;a title=&#34;Orbot on Android&#34; href=&#34;https://play.google.com/store/apps/details?id=org.torproject.android  &#34; target=&#34;_blank&#34;&gt;download Orbot here&lt;/a&gt;. It’s the official app of the &lt;a href=&#34;https://TorProject.org&#34;&gt;Tor Project&lt;/a&gt;, which develops the onion routing protocol, on Android.
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  Once both are installed, you just need to go to this hidden site: &lt;a title=&#34;Strongbox Onion Site&#34; href=&#34;http://tnysbtbxsf356hiy.onion/&#34; target=&#34;_blank&#34;&gt;http://tnysbtbxsf356hiy.onion&lt;/a&gt; . Make sure that you’re using the Orweb browser and that Orbot is running. From there, you can easily submit messages to The New Yorker. Unfortunately you can’t yet submit files to them through the phone just yet.
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  Overall, this is an exciting step in the right direction. With an increase in tracking and crackdown on political dissidents and whistleblowers around the world, there need to be safe and trusted ways of sharing information that has the potential of saving lives and making the world a better place. &lt;a title=&#34;the new yorker magazine&#34; href=&#34;http://www.newyorker.com/&#34; target=&#34;_blank&#34;&gt;The New Yorker&lt;/a&gt; is one of the most trusted journalistic outfits in the world and it will be interesting to follow how they understand and vet information that comes in from anonymous sources. It will be a lesson for the entire privacy community.
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34; style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;http://instagram.com/p/PihUXCmJzW/&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;size-medium wp-image-3730 aligncenter&#34; title=&#34;On the Internet, algorithms can infer you&#39;re a dog.&#34; alt=&#34;Dog Algorithm&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2013/05/Dog-Algorithm-300x300.jpg&#34; width=&#34;300&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2013/05/Dog-Algorithm-300x300.jpg 300w, https://guardianproject.info/wp-content/uploads/2013/05/Dog-Algorithm-150x150.jpg 150w, https://guardianproject.info/wp-content/uploads/2013/05/Dog-Algorithm.jpg 612w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  At the same time, it’s not yet a trusted technology. While the code is accessible and &lt;a href=&#34;http://deaddrop.github.io/&#34;&gt;open source&lt;/a&gt; it is unclear whether it’s a full version of the DeadDrop code that it came from or a fork of it. It also hasn’t been audited yet. Already, we’re seeing issues popping up on &lt;a href=&#34;https://github.com/deaddrop/deaddrop/issues&#34;&gt;the code&lt;/a&gt;. Hopefully it will be fully vetted as a solution and stand up to the ambitious and crucial claims that it is able “to provide you with a greater degree of anonymity and security than afforded by conventional e-mail.”
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  In the months before January, I worked a few seats down from Aaron Swartz in the ThoughtWorks offices. Since those shocking days, it’s been inspiring to continue to see his legacy. I spoke with him a bunch of times about using technology to introduce truly disruptive techniques for empowering people whose rights were otherwise being trampled. At the time, we were working on &lt;a href=&#34;http://markbelinsky.com/crowdring/&#34;&gt;Crowdring&lt;/a&gt;, an intiative from &lt;a href=&#34;http://www.therules.org/&#34;&gt;/The Rules&lt;/a&gt;. And we spoke about the power of leveraging telephony to give voice so widely, and the trade off of handing over personally identifiable information. He recognized the need for constantly evolving and shifting tactics and was expert at integrating that into both strategy and code. It’s an honor to continue to work with him now, and with the rest of the open source community as we all contribute code and ideas to make the world better.
&lt;/p&gt;

&lt;p dir=&#34;ltr&#34;&gt;
  Having just won the Knight News Challenge for our &lt;a href=&#34;https://guardianproject.info/2013/01/27/informacam-wins-knight-news-challenge/&#34;&gt;Informacam project&lt;/a&gt;, we’re excited at the growing interest from the world of journalism in making sure that sources are kept truly secure and anonymous in the digital age. We’re working to build our whole &lt;a href=&#34;https://play.google.com/store/apps/dev?id=6502754515281796553&#34;&gt;suite of tools&lt;/a&gt; to make it easier and better to do so. If you want to reach out to us, anonymously or otherwise, to &lt;a title=&#34;Guardian Contact&#34; href=&#34;https://guardianproject.info/contact/ &#34;&gt;let us know how we can help&lt;/a&gt;, you can use Orbot and Tor to do so over any of these methods. We look forward to it!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IOCipher beta: easy encrypted file storage for your Android app</title>
      <link>https://guardianproject.github.io/info/2013/02/07/iocipher-beta-easy-encrypted-file-storage-for-your-android-app/</link>
      <pubDate>Thu, 07 Feb 2013 14:45:28 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2013/02/07/iocipher-beta-easy-encrypted-file-storage-for-your-android-app/</guid>
      <description>&lt;p&gt;At long last, we are proud to announce the &lt;a href=&#34;https://guardianproject.info/code/iocipher/&#34;&gt;first beta release of IOCipher&lt;/a&gt;, an easy framework for providing virtual encrypted disks for Android apps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;does not require root or any special permissions at all&lt;/li&gt;
&lt;li&gt;the API is a drop-in replacement for the standard java.io.File API, so if you have ever worked with files in Java, you already know how to use IOCipher&lt;/li&gt;
&lt;li&gt;works easiest in an app that stores all files in IOCipher, but using standard java.io with IOCipher is possible&lt;/li&gt;
&lt;li&gt;supports android-7 v2.1 and above&lt;/li&gt;
&lt;li&gt;licensed under the LGPL v3+&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download it here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/code/iocipher/&#34;&gt;https://guardianproject.info/code/iocipher/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding IOCipher to our InformaCam and NoteCipher apps is already in the&lt;br /&gt;
works. There is already one app in the Play Store built with IOCipher: &lt;a title=&#34;Gryphn Secure Messaging in the Play Store&#34; href=&#34;https://play.google.com/store/apps/details?id=com.Gryphn.mms&amp;hl=en&#34; target=&#34;_blank&#34;&gt;Gryphn Secure Messaging&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ve recently done some heavy testing and bug fixing and this is ready for beta status. That means for many applications, it should be stable with reasonable performance. But its not done yet, and there are some known edge cases documented in our bug tracker which we aim to address in the next beta release:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dev.guardianproject.info/projects/iocipher/issues&#34;&gt;https://dev.guardianproject.info/projects/iocipher/issues&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some additional notes on usage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;single thread/sequential access is the preferred way of using IOCipher&lt;/li&gt;
&lt;li&gt;multi-threaded access possible, but potentially unstable under very high load&lt;/li&gt;
&lt;li&gt;VFS now has beginTransaction and completeTransaction to optimize performance&lt;/li&gt;
&lt;li&gt;parts of java.io not currently supported: vectored I/O, memory-mapped files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;featured photo &lt;a href=&#34;http://www.flickr.com/photos/pong/288491653/&#34;&gt;“Safe” from Pong on Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Freebird Flys High</title>
      <link>https://guardianproject.github.io/info/2012/06/28/freebird-flys-high/</link>
      <pubDate>Thu, 28 Jun 2012 11:59:38 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/06/28/freebird-flys-high/</guid>
      <description>&lt;div style=&#34;width: 620px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KmZyZWViaXJkZ3JvdXAuanBnKjk3NjQzMjVmMmJlZDAzMjliZDQ3MzhiY2Q0MzQyNjdi&#34;&gt;&lt;img src=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KmZyZWViaXJkZ3JvdXAuanBnKjk3NjQzMjVmMmJlZDAzMjliZDQ3MzhiY2Q0MzQyNjdi&#34; alt=&#34;&#34; width=&#34;610&#34; height=&#34;458&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Freebird: Rio group picture via Obscuracam for Android
  &lt;/p&gt;
&lt;/div&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;p style=&#34;text-align: left;&#34;&gt;
    What happens when you gather coders with privacy and security activists from around the world? &lt;a title=&#34;freebird&#34; href=&#34;https://guardianproject.info/freebird/&#34; target=&#34;_blank&#34;&gt;Freebird&lt;/a&gt;!
  &lt;/p&gt;
  

&lt;p&gt;&lt;p style=&#34;text-align: left;&#34;&gt;
    We held a simultaneous event in NYC and Rio, a one-day &lt;a title=&#34;barcamp&#34; href=&#34;http://barcamp.org/&#34; target=&#34;_blank&#34;&gt;barcamp&lt;/a&gt; aimed to empower users to be more informed and engaged around their use of mobile technology, while engaging with developers to promote interest in open-source tools, security and privacy. Freebird was a pre-event for &lt;a title=&#34;rightscon&#34; href=&#34;https://www.rightscon.org/&#34; target=&#34;_blank&#34;&gt;RightsCon:Rio&lt;/a&gt;, which allowed us to continue and extend conversations and ideas into the larger context of information technologies and human rights. &lt;strong&gt; &lt;/strong&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p style=&#34;text-align: left;&#34;&gt;
    The camp was roughly split into two tracks, USING and MAKING:
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;ul&gt;
    &lt;li&gt;
      USING:  involved expanding mobile users’ understanding of how their phone works, or is working against them, and enabling them to replace the built-in software with more open or secure versions.
    &lt;/li&gt;
    &lt;li&gt;
      MAKING:  focused on creating new or porting existing security software to mobile platforms, discussion of mobile threat models, and use of mobile technology to assist rights defenders, journalists, and activists.
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div style=&#34;width: 514px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
      &lt;a href=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KlAxMDMwNzUzLkpQRyo0OTQxMjMwODdjMDlhMmY2NTkwOGNkNGRlMTVjZDFjZQ&#34;&gt;&lt;img class=&#34;&#34; src=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KlAxMDMwNzUzLkpQRyo0OTQxMjMwODdjMDlhMmY2NTkwOGNkNGRlMTVjZDFjZQ&#34; alt=&#34;&#34; width=&#34;504&#34; height=&#34;360&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
    Lee of Guardian walks through the design of the Open Secure Telephony Network
  &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    It was a great event with some fantastic discussions and opportunities for new tech and collaborations. Want to re-live the magic? You can check out &lt;a title=&#34;rio&#34; href=&#34;https://guardianproject.info/events/freebird2012rio/&#34; target=&#34;_blank&#34;&gt;the pics from Rio &lt;/a&gt;and the &lt;a title=&#34;rio storify&#34; href=&#34;https://storify.com/mbelinsky/freebird-rio&#34; target=&#34;_blank&#34;&gt;Storify from the event&lt;/a&gt;, as well as the &lt;a title=&#34;nyc storify&#34; href=&#34;https://storify.com/mbelinsky/freebirdcamp&#34; target=&#34;_blank&#34;&gt;Storify from the NYC event&lt;/a&gt;. Also, be sure to check out Brendon O’Brien’s post on the event, &lt;a href=&#34;http://activized.wordpress.com/2012/06/20/making-privacy-issues-public/&#34;&gt;Making Privacy Issues Public&lt;/a&gt;. From the discussions, it seemed as if there’s still quite a bit of learning that the community has to do about how phones function and all the dangers and complications therein. At the same time, there was a lot of passion and creativity for how to combat invasive tools and better methods of disseminating this type of knowledge and conversation.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 299px&#34; class=&#34;wp-caption alignnone&#34;&gt;
    &lt;a href=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KlAxMDMwNzM3LkpQRypiOTQ4NzFlN2Q0ZTdjYTA0ODIwZmZmMjI4MTE2YTNiOQ&#34;&gt;&lt;img src=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KlAxMDMwNzM3LkpQRypiOTQ4NzFlN2Q0ZTdjYTA0ODIwZmZmMjI4MTE2YTNiOQ&#34; alt=&#34;&#34; width=&#34;289&#34; height=&#34;432&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  &amp;lt;a href=&amp;quot;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;amp;sfpg=KlAxMDMwNzMzLkpQRyphMDliZThiNDdlMjk0ZjA3ZDliNDI5MzY2MjdkMzQ2OA&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;&amp;quot; src=&amp;quot;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;amp;sfpg=KlAxMDMwNzMzLkpQRyphMDliZThiNDdlMjk0ZjA3ZDliNDI5MzY2MjdkMzQ2OA&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;432&amp;quot; height=&amp;quot;289&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt; The collaborative “mosh pit” brainstorm helped guide the discussions for the day
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    None of this would have been possible without our partners: Freebird was funded by &lt;a href=&#34;http://openitp.org/&#34;&gt;OpenITP&lt;/a&gt;, and facilitated by &lt;a title=&#34;aspiration tech&#34; href=&#34;http://aspirationtech.org/&#34; target=&#34;_blank&#34;&gt;Aspiration Tech&lt;/a&gt;, noted open-source advocates and facilitators. Special guests  included developers from &lt;a title=&#34;http://zetetic.net/&#34; href=&#34;http://zetetic.net/&#34; target=&#34;_blank&#34;&gt;Zetetic&lt;/a&gt; (SQLCipher), &lt;a title=&#34;tor anonymity&#34; href=&#34;https://www.torproject.org/&#34; target=&#34;_blank&#34;&gt;the Tor Project&lt;/a&gt;, the &lt;a href=&#34;http://oti.newamerica.net/commotion_wireless_0/&#34; target=&#34;_blank&#34;&gt;Commotion&lt;/a&gt; project, and a number of prominent human rights and activists organizations. Thanks to all these great organizations and everyone else who attended.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 442px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;a href=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KlAxMDMwNzY2LkpQRyo4ZGZkZjk5MDZkNTk0YzM1OWJjODMwMzYyOGMyMmZkMA&#34;&gt;&lt;img class=&#34;&#34; src=&#34;https://guardianproject.info/events/freebird2012rio/index.php?cmd=image&amp;sfpg=KlAxMDMwNzY2LkpQRyo4ZGZkZjk5MDZkNTk0YzM1OWJjODMwMzYyOGMyMmZkMA&#34; alt=&#34;&#34; width=&#34;432&#34; height=&#34;289&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  Harlo of Guardian walks through the InformaCam sensor capture code and metadata formats
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Some of our favorite twitter coverage from the event:
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
    &lt;p&gt;
      Encantada de conocer a desarrolladores de Thor, profesores universitarios, directivos del Free Bird project &lt;a href=&#34;https://twitter.com/search/%2523freebird2012&#34;&gt;#freebird2012&lt;/a&gt; — Elaine Díaz(@elainediaz2003) &lt;a href=&#34;https://twitter.com/elainediaz2003/status/207830610247548928&#34;&gt;May 30, 2012&lt;/a&gt; &lt;em&gt;&lt;/em&gt; &lt;em&gt;“Nice to meet Tor developers, academics, project managers ‪ Free Bird # freebird2012”&lt;/em&gt;
    &lt;/p&gt;
  &lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet tw-align-center&#34;&gt;
    &lt;p&gt;
      What’s the pyramid of mobile security?&lt;a href=&#34;https://twitter.com/search/%2523FreebirdCamp&#34;&gt;#FreebirdCamp&lt;/a&gt;@ ITP &lt;a title=&#34;http://instagr.am/p/LQyJuisGyl/&#34; href=&#34;http://t.co/iYWX49z0&#34;&gt;instagr.am/p/LQyJuisGyl/&lt;/a&gt; — noel hidalgo, frsa (@noneck) &lt;a href=&#34;https://twitter.com/noneck/status/207914569245523970&#34;&gt;May 30, 2012&lt;/a&gt;
    &lt;/p&gt;
  &lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet tw-align-center&#34;&gt;
    &lt;p&gt;
      The Guardian Project’s Freebird event was absolutely awesome! &lt;a title=&#34;https://guardianproject.info/freebird/&#34; href=&#34;https://t.co/qq5SbVsy&#34;&gt;guardianproject.info/freebird/&lt;/a&gt; — Jacob Appelbaum (@ioerror) &lt;a href=&#34;https://twitter.com/ioerror/status/207926015241093120&#34;&gt;May 30, 2012&lt;/a&gt;
    &lt;/p&gt;
  &lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Together, our growing community will help develop the tools and ideas for a tomorrow that is free as a bird.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p style=&#34;text-align: center;&#34;&gt;
    &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/04/freebirdposter1.jpg&#34;&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/04/freebirdposter1.jpg&#34; alt=&#34;&#34; width=&#34;475&#34; height=&#34;734&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Singing and Dancing for Encryption</title>
      <link>https://guardianproject.github.io/info/2012/04/19/singing-and-dancing-for-encryption/</link>
      <pubDate>Thu, 19 Apr 2012 09:30:48 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/04/19/singing-and-dancing-for-encryption/</guid>
      <description>&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;a href=&#34;https://secure.flickr.com/photos/ksd-photography/4899157618/&#34;&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://farm5.staticflickr.com/4099/4899157618_b35f53be23_z.jpg&#34; alt=&#34;【KSD Photography】 Capturing Life&#34; width=&#34;640&#34; height=&#34;343&#34; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p style=&#34;text-align: left&#34;&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;If you see me dancing or signing with my phone in my hand, I may not just be having a great time, but also creating an encryption key. Part of the issue with security is that it can often be difficult to implement or an added step in what users want to be an easy and seamless process. What if we can make secure and private communications fun and easy?&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;This past weekend, a bunch of members of the Guardian Project team found ourselves at the &lt;a title=&#34;wall-street-journal-data-transparency-weekend-day&#34; href=&#34;http://blogs.wsj.com/digits/2012/04/16/the-winners-of-wsjs-data-transparency-weekend/&#34; target=&#34;_blank&#34;&gt;Wall Street Journal Data Transparency Hackathon&lt;/a&gt;. The Journal put this together in order to “invite developers to help build free Web tools that promote data transparency and control.” The tracks were divided into:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;strong&gt;Scanning:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; Enhancing technology that scans the Web to reveal tracking&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;strong&gt;Education:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; Helping people see how much information they share&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;strong&gt;Control:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; Improving software that helps people control sensitive information&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Tracks were led by &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a title=&#34;ashkan soltani&#34; href=&#34;http://ashkansoltani.org/&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Ashkan Soltani&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;, an independent researcher and technical adviser to the Journal; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a title=&#34;brian kennish&#34; href=&#34;http://byoogle.com/&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Brian Kennish&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;, a Web developer and founder of Disconnect; and &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a title=&#34;Jacob Appelbaum&#34; href=&#34;https://twitter.com/#!/ioerror&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Jacob Appelbaum&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;, a security researcher at the Tor Project. Our teams went down the path of control, with the goal of making tools that are secure by default.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;We danced our way into winning in the control category by helping the victorious &lt;a title=&#34;cryptocat&#34; href=&#34;https://crypto.cat/about/&#34; target=&#34;_blank&#34;&gt;Cryptocat&lt;/a&gt; team that has a tool for encrypted chat service right from the browser. This fantastic project blew through a number of innovations, porting into a Firefox web app, doing desktop notifications, and improved cryptographic primitives from within the browser. We helped by creating an Android app for the tool that converts dance moves into a random number generator for creating the encryption key. Just start the program, enter the name of the chat, enter your nickname, then DANCE. Starting a secure chat from a phone is now as easy as that. You can try it in your browser via their site &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;https://crypto.cat/&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;https://crypto.cat/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; or &lt;a title=&#34;cryptocat android app&#34; href=&#34;https://guardianproject.info/apps/cryptocat/&#34; target=&#34;_blank&#34;&gt;download our new Android app&lt;/a&gt; (either with or without Tor compatibility)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;. And congrats to &lt;a title=&#34;nadim kobeissi&#34; href=&#34;http://nadim.cc/&#34; target=&#34;_blank&#34;&gt;Nadim Kobeissi&lt;/a&gt; for this well deserved win and the team Tobias Pulls, Jacob Appelbaum, &lt;a title=&#34;david huerta&#34; href=&#34;http://davidhuerta.me/&#34; target=&#34;_blank&#34;&gt;David Huerta&lt;/a&gt;, &lt;a title=&#34;joseph bonneau&#34; href=&#34;http://www.jbonneau.com/&#34; target=&#34;_blank&#34;&gt;Joseph Bonneau&lt;/a&gt;  and &lt;a title=&#34;nathan freittas&#34; href=&#34;http://openideals.com/&#34; target=&#34;_blank&#34;&gt;Nathan Freitas&lt;/a&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://secure.flickr.com/photos/aspirationtech/7077092229/sizes/m/in/photostream/&#34;&gt;&lt;img src=&#34;https://farm6.staticflickr.com/5071/7077092229_5e3f9ed867.jpg&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;333&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    The Guardian Team &amp; Friends Hacking Away
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;We sang our way into winning in a new category that the judges came up with, “soup cans and string” for &lt;a title=&#34;Open Secure Telephony Network (OSTN) ostel&#34; href=&#34;https://ostel.me&#34; target=&#34;_blank&#34;&gt;Ostel&lt;/a&gt;, our encrypted VOIP solution. Launching an alpha version of our tool in front of some of the worlds leading experts in the security field was a risky move, but thankfully we managed to work out a number of bugs and generally received great feedback and support from the community. Over the weekend, we made progress in our alpha demo, identified additional clients that can receive calls on Mac, PC, Linux, iPhone, &amp;amp; Blackberry and created a new user signup system that allows users to register and immediately be sent an email with a link to their credentials via SSL. To extend the project even further, we have started compiling information on VOIP laws in countries from every continent so that the tool can explicitly be supported on as many platforms, in as many countries and in as many languages as possible. In addition to singing praise, singing (and other voice signatures) might be used in the future for entropy as the random number generator for the encryption key exchange. &lt;a title=&#34;privategsm&#34; href=&#34;http://www.privatewave.com/products-services/private-gsm/product.html&#34; target=&#34;_blank&#34;&gt;PrivateGSM&lt;/a&gt; is already doing this and it would be great to incorporate this feature into Ostel &amp;amp; &lt;a title=&#34;CSipSimple&#34; href=&#34;https://code.google.com/p/csipsimple/&#34; target=&#34;_blank&#34;&gt;CSipSimple&lt;/a&gt; later on. Thanks to Lee Azzarello, Luke Stark, Sean McIntyre and Zach Schwartz for being great members of the Ostel team. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;https://secure.flickr.com/photos/aspirationtech/6935372190/sizes/m/in/photostream/&#34;&gt;&lt;img src=&#34;https://farm6.staticflickr.com/5327/6935372190_a576a30d16.jpg&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;333&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Lee accepts the &#34;Soupcan &amp; Strings Award&#34; for Ostel
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Dancing for encryption in Cryptocat, singing for encryption in Ostel. Let us know if you have other ideas for fun ways to generate keys. We’re always looking for inspiring ideas from the community.&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;We’re even well on our way to seeing the world through encryption tinted glasses. Progress was made on making innovations in &lt;a title=&#34;informacam&#34; href=&#34;https://guardianproject.info/2012/01/20/introducing-informacam/&#34; target=&#34;_blank&#34;&gt;our Informacam project&lt;/a&gt;. The goal is to be able to snap a picture, but protect the privacy of the people in the frame by blurring their faces and the metadata connected to the event. Whie this can be crucial in a sensitive scenario, it can also be important that a judge or trusted organization can “unblur” the image and so we’re working on a way to encrypt and send those pixels. Bugs were removed, code was written, and soon enough, hopefully we’ll be able to incorporate it into the &lt;a title=&#34;google augmented reality goggles&#34; href=&#34;https://arstechnica.com//gadgets/news/2012/04/google-unveils-project-glass-augmented-reality-glasses.ars&#34; target=&#34;_blank&#34;&gt;new Google Augmented reality goggles&lt;/a&gt;.  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table style=&#34;margin: 0px auto&#34;&gt;
  &lt;tr&gt;
    &lt;td width=&#34;201&#34;&gt;
      &lt;img class=&#34;alignnone size-full wp-image-1461&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.07-PM.png&#34; alt=&#34;InformaCam (2)&#34; width=&#34;201&#34; height=&#34;332&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.07-PM.png 201w, https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.07-PM-181x300.png 181w&#34; sizes=&#34;(max-width: 201px) 100vw, 201px&#34; /&gt;
    &lt;/td&gt;
    
    &lt;td width=&#34;197&#34;&gt;
      &lt;img class=&#34;alignnone size-full wp-image-1462&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.21-PM.png&#34; alt=&#34;InformaCam (3)&#34; width=&#34;197&#34; height=&#34;330&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.21-PM.png 197w, https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.21-PM-179x300.png 179w&#34; sizes=&#34;(max-width: 197px) 100vw, 197px&#34; /&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;em&gt;Using the InformaCam “Identify” filter.&lt;/em&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;em&gt;Select a Trusted Destination for your encrypted media.&lt;/em&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Being head down, singing and dancing encryption with our security glasses on while coding, it was easy to miss the other amazing projects in the room. I highly recommend checking out the other winners as well. They’re doing fantastic and necessary work:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;“Scanning” Track Winner:  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;http://www.hackerleague.org/hackathons/wsj-data-transparency-code-a-thon/hacks/tosback2&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;TOSBack2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; – a living archive of all privacy policies&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;“Education” Track Winner:   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;http://www.hackerleague.org/hackathons/wsj-data-transparency-code-a-thon/hacks/privacybucket&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;PrivacyBucket&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; – a Chrome extension that measures the extent to which individual third-party trackers can discover demographic information about the use&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Judges’ Choice Winner:   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;http://www.hackerleague.org/hackathons/wsj-data-transparency-code-a-thon/hacks/site-scoper&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;Site Scoper&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;“Ready for Primetime” Winner:   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;http://www.hackerleague.org/hackathons/wsj-data-transparency-code-a-thon/hacks/mobilescope&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;MobileScope&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;“Zuckerberg/Systrom Memorial Award for Opportunistic Optimism” Winner:   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;http://www.hackerleague.org/hackathons/wsj-data-transparency-code-a-thon/hacks/pestagram-its-pinterest-for-instagram&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;Pestagram&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;“Best Listener” Winner:   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&#34;http://www.hackerleague.org/hackathons/wsj-data-transparency-code-a-thon/hacks/the-price-of-free&#34;&gt;&lt;span style=&#34;color: #0025e5&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;The Price of Free&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;span style=&#34;font-family: ArialMT,sans-serif&#34;&gt;&lt;span style=&#34;font-size: small&#34;&gt;Thanks to &lt;a title=&#34;julia angwin&#34; href=&#34;http://www.juliaangwin.com/&#34; target=&#34;_blank&#34;&gt;Julia Angwin&lt;/a&gt; and the WSJ team for making this great event and the fantastic &lt;a title=&#34;what they know&#34; href=&#34;http://blogs.wsj.com/wtk/&#34; target=&#34;_blank&#34;&gt;What They Know blog&lt;/a&gt; possible, to &lt;a title=&#34;gunner aspiration&#34; href=&#34;http://aspirationtech.org/blog/gunner&#34; target=&#34;_blank&#34;&gt;Gunner&lt;/a&gt; for being such an inspiring facilitator, to judges Alessandro Acquisti, Sid Stamm, Dan Kaminsky, &lt;a title=&#34;andrew mclaughlin&#34; href=&#34;http://andrewmclaughlin.info/&#34; target=&#34;_blank&#34;&gt;Andrew McLaughlin&lt;/a&gt; and to everyone else who made this possible.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>User scenarios to guide our crypto development</title>
      <link>https://guardianproject.github.io/info/2012/04/14/user-scenarios-to-guide-our-crypto-development/</link>
      <pubDate>Sat, 14 Apr 2012 20:16:03 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/04/14/user-scenarios-to-guide-our-crypto-development/</guid>
      <description>&lt;p&gt;At Guardian Project, we find user-centered development to be essential to producing useful software that addresses real world needs. To drive this, we work with user stories and scenarios as part of the process of developing software. One particular development focus is the &lt;a href=&#34;https://guardianproject.info/wiki/PSST&#34; title=&#34;Portable Shared Security Token&#34; target=&#34;_blank&#34;&gt;Portable Shared Security Token (PSST)&lt;/a&gt; project, which aims to make it easy to use encryption across both mobile and desktop computers, as well as keep the stores of cryptographic identities (i.e. trusted keys, certificates, etc) in sync between devices.&lt;/p&gt;

&lt;p&gt;This post outlines some initial user scenarios that PSST aims to address. We believe them to be common enough so that our solutions will be readily applicable to real world people now. They are a small subset of all of the types of users that we feel can ultimately benefit from the PSST core research, so these user stories provide a starting place for honing the tools for the needs of actual working organizations. These stories also discuss how the software could be used in these situations. The software as described mostly exists, but not all details are currently implemented or even fully vetted as secure practices.&lt;/p&gt;

&lt;p&gt;We are very eager for feedback, comments, and criticism on any aspect of these scenarios, from whether they are plausible to whether the user interactions described are built upon realistic expectations of actual members of organizations like the ones described here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Small Cabal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/04/activists-meeting.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/04/activists-meeting.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;224&#34; class=&#34;alignright size-full wp-image-1799&#34; /&gt;&lt;/a&gt;There is a small group of people that needs to communicate as securely and anonymously as possible. They all meet up in person. They generate keys, and individually sign each person’s key and get that person’s signature on their own key. These are local-only unpublishable signatures. No one uploads their keys to any other server or device. They each generate a revocation certificate and hook it up to their panic button app. Once the panic button is hit, the phone broadcasts the revocation certificate to the pre-determined list of people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diffuse Activist Organization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An activist organization has members spread out all over their country, with concentrations in certain areas, and a handful abroad. They are working in a country that aggressively tracks communications, but encryption is not banned nor aggressively tracked. Since there are many members and they are widely spread, very few of the members have met the whole membership. Many members often meet up in person at various places around the country, and some people also travel to regional and national meet-ups. The central forum for the whole group is on the internet, and there are many big group discussions and announcements that happen on internet forums.&lt;/p&gt;

&lt;p&gt;Each member has a cryptographic key that represents their online identity, which they post to the public keyservers. They generate and store a revocation certificate to upload to the keyservers in case of a compromised key or computer. They do not post any signatures to the key servers so that the social graph information remains private. Whenever they meet another person that they trust, they sign each others’ keys and swap all signature data using direct peer-to-peer communication.&lt;/p&gt;

&lt;p&gt;When interacting with members who they only know on the internet, they check whether they have a cryptographic trust path to each others’ keys, and if not, they establish the first step of trust via OTR by doing key verification via question/answer, shared secret or manual fingerprint validation over a trusted channel, like the phone. When they hit there panic button the post the revocation certificate to the keyserver. Each member’s computer/phone automatically checks the public keyservers for revocations hourly, and marks any revoked key as invalid as soon as it receives a revocation certificate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multinational Organization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2012/04/orgmtg.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/04/orgmtg.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;158&#34; class=&#34;alignleft size-full wp-image-1800&#34; /&gt;&lt;/a&gt;An organization has many members in a number of different countries. Some of the governments are supportive of the organization’s goals, while some of the governments are strongly hostile and are actively seeking out local members. Many members work in countries where there is little chance of active tracking and monitoring of their use of encryption, while others work in high risk environments from time to time. Certain local contacts and members work in aggressively monitored countries where use of encryption is a flag for the secret police.&lt;/p&gt;

&lt;p&gt;The public figures of the organization in safe countries have a public trust profile that is freely downloadable. They use the public OpenPGP infrastructure and publicly share all public signatures. These members also have private, unpublishable signatures related to the members in high risk situations. Operatives in high risk situations use only unpublishable local signatures and the whole collection of signatures is stored in an encrypted form. There devices only contact keyservers via anonymized connections like Tor or VPNs.&lt;/p&gt;

&lt;p&gt;When members are signing each other’s keys, the signatures are always sent to the key owner via encrypted email. The signer can then mark the signature as private or public, or their software can be set to always mark all keys as private and unpublishable. When the key owner receives the emailed signature, she can then decide how to manage the signatures: either privately import the signature to their keyring, where it will be stored in an unpublishable format; or publicly import the signature into their keyring and sync it via the public PGP servers. If the signer emailed a private signature to the key owner, then the key management software will automatically make it a private signature.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improvised movement organized via social software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File:Tahrir_Square_during_8_February_2011.jpg&#34;&gt;&lt;img src=&#34;https://guardianproject.info/wp-content/uploads/2012/04/Tahrir_Square_during_8_February_2011-300x225.jpg&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;225&#34; class=&#34;alignright size-medium wp-image-1791&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/04/Tahrir_Square_during_8_February_2011-300x225.jpg 300w, https://guardianproject.info/wp-content/uploads/2012/04/Tahrir_Square_during_8_February_2011-1024x768.jpg 1024w, https://guardianproject.info/wp-content/uploads/2012/04/Tahrir_Square_during_8_February_2011.jpg 1600w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;People from all over a region join a popular movement to help organize protests, distribute media, spread information, etc. Many join in groups of friends or family, but overall the group is not socially well connected together. The common cause is the central binding of the group. In their communications, they want to avoid keyword filtering and communications tracking, as well as try to hinder infiltration and the injection of misinformation. They need to communicate and exchange media with some level of trust. Since the group wants as many members as possible, the infrastructure must be relatively open and public.&lt;/p&gt;

&lt;p&gt;Users who do not have any shared history will trust each other’s keys on first contact, and rely on the continued validation against the initial mark of trust (known as TOFU/POP or Trust On First Use/Persistence of Pseudonym). Once users build up some context with each other, they can deepen the cryptographic trust by using OTR question/answer or shared secret authentication. Users publicly share their TOFU/POP and OTR marks of trust on public exchanges so that people can build up public trust in their cryptographic identity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Foreign Journalist, Diplomat, Business Person, etc.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This user is working in a place with active monitoring, tracking and filtering. She has strong links to institutions outside of the country that can help in case of trouble. She has clear outsider status so is able to use encryption and anonymizing software without a large risk of persecution. She wants to keep her communications private in the face of active monitoring.&lt;/p&gt;

&lt;p&gt;Standard public cryptography tools cover most of this situation, but they must be made easier to use, and work on mobile devices. If this user needs encrypted exchanges with locals at high risk of monitoring, local unpublishable signatures can be used in those situations.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Knight News funding of SecureSmartCam = a #WIN for open-source mobile security</title>
      <link>https://guardianproject.github.io/info/2012/03/29/knight-news-funding-of-securesmartcam-a-#win-for-open-source-mobile-security/</link>
      <pubDate>Thu, 29 Mar 2012 12:07:47 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/03/29/knight-news-funding-of-securesmartcam-a-#win-for-open-source-mobile-security/</guid>
      <description>&lt;p&gt;Along with our partner &lt;a href=&#34;https://www.witness.org&#34;&gt;WITNESS&lt;/a&gt;, we’ve entered our &lt;a href=&#34;http://newschallenge.tumblr.com/post/19436756887/securesmartcam-protecting-the-privacy-and-data-of&#34;&gt;SecureSmartCam project&lt;/a&gt; into the &lt;a href=&#34;http://newschallenge.tumblr.com/&#34;&gt;Knight News Challenge&lt;/a&gt;, and we need your support to get to the next round.&lt;/p&gt;

&lt;p&gt;Here’s a bit more about the challenge:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Knight News Challenge, an international media innovation contest, is evolving – and will be offered three times, with three different topics. The first challenge will be centered on networks, and will accept applications Feb. 27 – March 17. The Networks challenge round seeks projects that use the best of existing software and platforms – those already integrated into people’s lives – to find new ways to convey news and information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Aside from the merits of SecureSmartCam itself, specifically the &lt;a href=&#34;https://guardianproject.github.io/info/apps/ObscuraCam&#34;&gt;ObscuraCam&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.github.io/info/apps/InformaCam&#34;&gt;InformaCam&lt;/a&gt; sub-projects, our research and development over the last two years on this project have extended to support an entire range of completely open-source mobile technology for Android developments, the benefits of which extend far beyond our own project itself. There are already many other organizations, projects, and apps (both commercial and non) that have incorporated our technology into their own solutions, not to mention the hundreds of thousands of users out there who depend on our core apps like &lt;a href=&#34;https://guardianproject.github.io/info/apps/orbot&#34;&gt;Orbot (Tor for Android)&lt;/a&gt; and &lt;a href=&#34;https://guardianproject.github.io/info/apps/gibber&#34;&gt;Gibberbot (Secure Chat)&lt;/a&gt; to safeguard their day to day communication.&lt;/p&gt;

&lt;p&gt;The work so far was largely funded by a generous private non-governmental donor, and if you look at the list of projects below, we have put that funding to great use. If we receive this funding from Knight (a similarly generous private donor), we will continue our work in this modular, open manner, ensuring that the money will benefit projects and causes far beyond our own personal vision and endeavors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SecureSmartCam-supported Open-Source Projects&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/gnupg-for-android&#34;&gt;GnuPG for Android&lt;/a&gt;: OpenPGP Public/Private Key Infrastructure for Encryption and Verification of Communications and Data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sqlcipher/android-database-sqlcipher&#34;&gt;SQLCipher for Android&lt;/a&gt;: AES-256 Symmetric Encryption Layer for SQLite Mobile Database. &lt;a href=&#34;https://www.zetetic.net/sqlcipher&#34;&gt;SQLCipher&lt;/a&gt; is also available for many other platforms.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/iocipher&#34;&gt;IOCipher for Android&lt;/a&gt; (or any mobile platform): Encrypted filesystem built upon SQLCipher that works for any application without requiring root or custom device modification. This is an extension of our port of &lt;a href=&#34;https://github.com/guardianproject/LUKS&#34;&gt;LUKS for Android&lt;/a&gt;, encrypted disk partition system.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG for Android&lt;/a&gt; (with Video Redaction Filter): a build system and patches for compiling FFMPEG for Android, with support for custom features to enable video privacy controls&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asenior/Jpeg-Redaction-Library&#34;&gt;Jpeg Redaction Library&lt;/a&gt;: a generic library for redacting visual and metadata information from JPEG images without needing to decode them. Very important for limited memory mobile devices!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/notepadbot&#34;&gt;NoteCipher for Android&lt;/a&gt;: Simple secure text, photo and video storage app for Android, built upon SQLCipher&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guardianproject/sscxfer/&#34;&gt;SSCXfer for Android&lt;/a&gt;: Anonymous, Proxied, Secure Video (or any file) Uploader (based on &lt;a href=&#34;http://vidiom.mobi/&#34;&gt;Vidiom&lt;/a&gt; open-source project) over Tor to YouTube, VideoBin.org and other sites. By extension, this project also supports our core work on &lt;a href=&#34;https://guardianproject.github.io/info/apps/orbot&#34;&gt;Orbot, the Tor for Android&lt;/a&gt; application with hundreds of thousands of users worldwide.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end, the approximately $300,000 of grant support we are seeking, is nothing compared to the millions of dollars in funding poured into closed-source mobile startups, who not only by a large majority fail, but also rarely share the components of their work in a way that moves everyone forward.&lt;/p&gt;

&lt;p&gt;What we need you to do is, go to our &lt;a href=&#34;http://newschallenge.tumblr.com/post/19436756887/securesmartcam-protecting-the-privacy-and-data-of&#34;&gt;SecureSmartCam Proposal on the Knight News Challenge Tumblr&lt;/a&gt;, and “like”, comment, reblog or otherwise show your support for it, in as a public and visible a manner as possible. If you have concerns or questions, please post them to the Tumblr, and our team will reply to you there. This is open-source research after all, and don’t claim to have all the answers, but we do need your support to get there.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing InformaCam</title>
      <link>https://guardianproject.github.io/info/2012/01/20/introducing-informacam/</link>
      <pubDate>Fri, 20 Jan 2012 13:58:26 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2012/01/20/introducing-informacam/</guid>
      <description>

&lt;p&gt;These are interesting times, if you go by Times Magazine as an indicator. The magazine’s person of the year for 2011 was The Protester, preceded in 2010 by Facebook founder Mark Zuckerberg. Both entities partners with equal stake in freely sharing the digital content that shows the world what’s going on in it, at any time, from behind any pair of eyes.&lt;img class=&#34;alignright size-medium wp-image-1471&#34; alt=&#34;The Protester: Person of the Year&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/01/poy_cover-225x300.jpg&#34; width=&#34;225&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/01/poy_cover-225x300.jpg 225w, https://guardianproject.info/wp-content/uploads/2012/01/poy_cover.jpg 474w&#34; sizes=&#34;(max-width: 225px) 100vw, 225px&#34; /&gt; Also casting in their lot with the others is Time Magazine’s 2006 person of the year, You: the You that puts the “you” in “user-generated content;” the You whose miasma of bits, bytes, and the powerful images they express are becoming increasingly problematic. Problematic and exciting. As governments, police forces, and other power players here and abroad crack down on voices of dissent, it is only You, The Protester, armed not with a press pass, but with a smartphone and a Twitter account, who brings the rest of the world its news. You do it mainly without either the support or permission of those in power, and this makes you a very important person in the world.&lt;/p&gt;

&lt;p&gt;The smartphone’s role in the defense of human rights has thus become ever-more clear. How can we make it clearer? Our latest project, InformaCam, tackles this issue head-on. In collaboration with &lt;a href=&#34;https://www.witness.org/&#34; target=&#34;_blank&#34;&gt;Witness.ORG&lt;/a&gt; and the &lt;a href=&#34;www.ibanet.org/&#34; target=&#34;_blank&#34;&gt;International Bar Association&lt;/a&gt;, we’re building a powerful tool to create iron-clad digital images and video that could, should the occasion arise, be used in courts of law to bring justice. This is no small feat– with this project we are helping create the first evidentiary standards for digital media in the social networking age. So, &lt;a href=&#34;http://www.economist.com/node/21542748&#34; target=&#34;_blank&#34;&gt;there’s been a lot of excitement&lt;/a&gt; these past few weeks about InformaCam, as well as a lot of mystery. It’s time to give the project a proper unveiling.&lt;/p&gt;

&lt;p&gt;InformaCam is a plugin for ObscuraCam that allows the user, without much intervention on their own part, to inflate image and video with extra points of data, or metadata. The metadata includes information like the user’s current GPS coordinates, altitude, compass bearing, light meter readings, the signatures of neighboring devices, cell towers, and wifi networks; and serves to shed light on the exact circumstances and contexts under which the digital image was taken. Some users will already be familiar with ObscuraCam, which allows for capturing and digitally manipulating media. With InformaCam included, the app starts to behave almost like Adobe Photoshop or GIMP, supporting non-destructive, layer-based edits to media. This means that a version of an image can be created with any sensitive image data and metadata preserved and encrypted to trusted entities, along with a redacted version that has its metadata stripped which can be easily shared to Facebook, Twitter, Flickr, or any public service the user wishes to use.&lt;/p&gt;

&lt;h2 id=&#34;how-informacam-works&#34;&gt;How InformaCam Works&lt;/h2&gt;

&lt;p&gt;&lt;img class=&#34;alignleft size-full wp-image-1459&#34; alt=&#34;InformaCam (1)&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.18.27-PM.png&#34; width=&#34;205&#34; height=&#34;341&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.18.27-PM.png 205w, https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.18.27-PM-180x300.png 180w&#34; sizes=&#34;(max-width: 205px) 100vw, 205px&#34; /&gt; The workflow is similar to that of ObscuraCam, but with a few key differences. Notice that on start-up, the app triggers the on-board sensors. (Notifications in the top right corner clearly indicate the GPS and Bluetooth modules have been turned on.) This allows the app to register sensory and atmospheric data throughout the session. These “bundles” of data contain the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Current timestamp&lt;/li&gt;
&lt;li&gt;Device’s identification&lt;/li&gt;
&lt;li&gt;User’s public (PGP) key&lt;/li&gt;
&lt;li&gt;Image Regions created in the image/video&lt;/li&gt;
&lt;li&gt;Current latitude &amp;amp; longitude&lt;/li&gt;
&lt;li&gt;Current cell ID (if available)&lt;/li&gt;
&lt;li&gt;Altitude&lt;/li&gt;
&lt;li&gt;Compass bearing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whether the user is taking a picture, or editing an existing piece of media, the app registers the goings-on, and signs each bundle of data with the user’s private key. This mean that all actions taken on a piece of media (from capture to editing) are attributed to the user.&lt;/p&gt;

&lt;p&gt;As with ObscuraCam, the user can perform image filtering and obfuscation on image regions. InformaCam also adds the “Identify” filter, which prompts the user for the subject’s name (or pseudonym) and to fill in whether or not the subject has given his or her consent to be filmed. This checklist of subject permissions can be further developed to match the needs of any organization to provide further protection to the people in front of the camera. Notice again the sensor notifications: the context surrounding each edit to the image is recorded and will be inserted into the media as metadata once the media is saved.&lt;/p&gt;

&lt;p&gt;When the user saves the image or video, a dialog appears prompting her to choose one or more “trusted destinations.” This could be an organization, a news outlet, or any friend whose PGP key is known to you. A copy of the unredacted, data-rich image will be created and encrypted to those parties. At the same time, a redacted and data-stripped version is made available to share with anyone, anywhere.&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;td width=&#34;201&#34;&gt;
      &lt;img class=&#34;alignnone size-full wp-image-1461&#34; alt=&#34;InformaCam (2)&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.07-PM.png&#34; width=&#34;201&#34; height=&#34;332&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.07-PM.png 201w, https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.07-PM-181x300.png 181w&#34; sizes=&#34;(max-width: 201px) 100vw, 201px&#34; /&gt;
    &lt;/td&gt;
    
    &lt;td width=&#34;197&#34;&gt;
      &lt;img class=&#34;alignnone size-full wp-image-1462&#34; alt=&#34;InformaCam (3)&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.21-PM.png&#34; width=&#34;197&#34; height=&#34;330&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.21-PM.png 197w, https://guardianproject.info/wp-content/uploads/2012/01/Screen-shot-2012-01-20-at-1.21.21-PM-179x300.png 179w&#34; sizes=&#34;(max-width: 197px) 100vw, 197px&#34; /&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;i&gt;Using the InformaCam “Identify” filter.&lt;/i&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;i&gt;Select a Trusted Destination for your encrypted media.&lt;/i&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;the-informa-metadata-schematic&#34;&gt;The Informa Metadata Schematic&lt;/h2&gt;

&lt;p&gt;The metadata is organized in four categories: intent, consent, geneaology, and data. Here’s a rundown of what these categories mean.&lt;/p&gt;

&lt;h3 id=&#34;intent&#34;&gt;Intent&lt;/h3&gt;

&lt;p&gt;This expresses information about the media’s creator, and the rules governing how this particular media object can be shared, and to whom.&lt;/p&gt;

&lt;h3 id=&#34;consent&#34;&gt;Consent&lt;/h3&gt;

&lt;p&gt;This bucket of information regards the subjects contained in the image. Each subject is identified (by a name or pseudonym selected by the user) along with their stated preferences regarding treatment of their likeness. For example, if Bobby insists that he wants his face to be fully redacted (rather than blurred) this preference should be registered in metadata.&lt;/p&gt;

&lt;h3 id=&#34;genealogy&#34;&gt;Genealogy&lt;/h3&gt;

&lt;p&gt;This information regards chain-of-custody, and represents how the media was acquired, and if a particular image or video is a duplicate of another.&lt;/p&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;p&gt;This category includes all standard metadata (timestamp, acquired sensory data, location and movement data) that have been collected during the lifetime of the image, from the moment it was opened to the instant it was saved.&lt;/p&gt;

&lt;p&gt;A sample metadata bundle for an image taken with InformaCam looks like this in JSON notation:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;br /&amp;gt;
{&amp;lt;br /&amp;gt;
&amp;quot;data&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;device&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;bluetoothInformation&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;selfOrNeighbor&amp;quot;:-1,&amp;lt;br /&amp;gt;
&amp;quot;deviceBTAddress&amp;quot;:&amp;quot;00:25:36:79:EC:6C&amp;quot;,&amp;lt;br /&amp;gt;
&amp;quot;deviceBTName&amp;quot;:&amp;quot;nexxxie&amp;quot;&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;imei&amp;quot;:&amp;quot;363289131048142&amp;quot;&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;sourceType&amp;quot;:101,&amp;lt;br /&amp;gt;
&amp;quot;imageRegions&amp;quot;:[&amp;lt;br /&amp;gt;
{&amp;lt;br /&amp;gt;
&amp;quot;regionDimensions&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;height&amp;quot;:256,&amp;lt;br /&amp;gt;
&amp;quot;width&amp;quot;:256.00006103515625&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;regionCoordinates&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;left&amp;quot;:527.705078125,&amp;lt;br /&amp;gt;
&amp;quot;top&amp;quot;:196.15255737304688&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;obfuscationType&amp;quot;:&amp;quot;Identify&amp;quot;,&amp;lt;br /&amp;gt;
&amp;quot;location&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;locationType&amp;quot;:11,&amp;lt;br /&amp;gt;
&amp;quot;locationData&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;gpsCoords&amp;quot;:&amp;quot;[40.7085011,-73.9668647]&amp;quot;,&amp;lt;br /&amp;gt;
&amp;quot;cellId&amp;quot;:&amp;quot;36789325&amp;quot;&amp;lt;br /&amp;gt;
}&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;captureTimestamp&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;timestamp&amp;quot;:1326216508313,&amp;lt;br /&amp;gt;
&amp;quot;timestampType&amp;quot;:7&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;subject&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;consentGiven&amp;quot;:&amp;quot;general_consent&amp;quot;,&amp;lt;br /&amp;gt;
&amp;quot;informedConsentGiven&amp;quot;:true,&amp;lt;br /&amp;gt;
&amp;quot;subjectName&amp;quot;:&amp;quot;Harlo!&amp;quot;&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;unredactedRegion&amp;quot;:&amp;quot;I@4070cf30&amp;quot;&amp;lt;br /&amp;gt;
}&amp;lt;br /&amp;gt;
],&amp;lt;br /&amp;gt;
&amp;quot;imageHash&amp;quot;:&amp;quot;f18e7510faaad0d942db68b5c75f219a&amp;quot;,&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;geneaology&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;dateAcquired&amp;quot;:0,&amp;lt;br /&amp;gt;
&amp;quot;localMediaPath&amp;quot;:&amp;quot;\/mnt\/sdcard\/DCIM\/Camera\/1326216520426.jpg&amp;quot;,&amp;lt;br /&amp;gt;
&amp;quot;dateCreated&amp;quot;:1326216527629&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;intent&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;owner&amp;quot;:{&amp;lt;br /&amp;gt;
&amp;quot;ownershipType&amp;quot;:25,&amp;lt;br /&amp;gt;
&amp;quot;ownerKey&amp;quot;:&amp;quot;MY-IDENTITY-IS-HERE&amp;quot;&amp;lt;br /&amp;gt;
},&amp;lt;br /&amp;gt;
&amp;quot;securityLevel&amp;quot;:1,&amp;lt;br /&amp;gt;
&amp;quot;intendedDestination&amp;quot;:&amp;quot;[\&amp;quot;&amp;amp;#x68;ar&amp;amp;#x6c;&amp;amp;#x6f;.h&amp;amp;#x6f;&amp;amp;#x6c;me&amp;amp;#x73;@g&amp;amp;#x6d;&amp;amp;#x61;il&amp;amp;#x2e;&amp;amp;#x63;om\&amp;quot;]&amp;quot;&amp;lt;br /&amp;gt;
}&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;your-help&#34;&gt;Your Help&lt;/h2&gt;

&lt;p&gt;InformaCam is a work-in-process, and we’d love help from the community in fleshing out our metadata specification, especially in adding new items to the consent checklist. Feel free to contact us with any suggestions/comments, or just leave some helpful tips in the comments below.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Progress on Mobile Video Privacy Tools</title>
      <link>https://guardianproject.github.io/info/2011/09/10/progress-on-mobile-video-privacy-tools/</link>
      <pubDate>Sat, 10 Sep 2011 04:36:11 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2011/09/10/progress-on-mobile-video-privacy-tools/</guid>
      <description>&lt;p&gt;&lt;em&gt;If you are  a developer you may just want to skip all the prose below, and just jump over to Github to find our new &lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG on Android project&lt;/a&gt;{.vt-p} and build system. You can also check out our &lt;a href=&#34;https://github.com/guardianproject/SSCVideoProto&#34;&gt;SSCVideoProto Project&lt;/a&gt;{.vt-p} to understand how we are using it to redact faces and other identifying areas of HD video right on the Android phone itself. For more context, read on…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Last October at the Open Video Conference 2010, the idea of a camera application that could be designed to understand the needs and requirements of the human rights community was born. During a &lt;a href=&#34;https://blog.witness.org/2010/10/ovc2010-opensubtitles/&#34;&gt;hackday hosted with WITNESS&lt;/a&gt;{.vt-p}, we proved that is was possible to take a feature like “Face Detection” which is built into the Android operating system, and turn it into a capability that could be used to protect people, by blurring, pixelating or removing faces that unintentionally appeared in a video filmed on a mobile phone. In the last year, through our partnership with &lt;a href=&#34;https://www.witness.org/cameras-everywhere/witness-labs&#34;&gt;WITNESS Labs&lt;/a&gt;, we have built on that concept, designing, developing and releasing apps and source code which move the state of the art in mobile video privacy and anonymity capabilities forward.&lt;/p&gt;

&lt;p&gt;Here is a short video of &lt;a href=&#34;https://blog.witness.org/2010/10/ovc2010-opensubtitles/&#34;&gt;where we were a year ago&lt;/a&gt;{.vt-p}.&lt;/p&gt;

&lt;p&gt;The idea was that using a combination of approaches, we might be able to take the human rights video workflow, and ideas of consent and intent, that &lt;a href=&#34;https://www.witness.org/training&#34;&gt;WITNESS has developed for over twenty years&lt;/a&gt;{.vt-p}, and encode that into best practices and features in a software application. This was the catalyst for the launch of our joint &lt;a href=&#34;https://github.com/guardianproject/securesmartcam/wiki&#34;&gt;Secure Smart Cam Project&lt;/a&gt;{.vt-p}, which just a three months ago resulted in the &lt;a href=&#34;https://guardianproject.info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/&#34;&gt;launch of our first public app&lt;/a&gt;{.vt-p}, &lt;a href=&#34;https://guardianproject.info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/&#34;&gt;ObscuraCam v1&lt;/a&gt;{.vt-p}. Available in the Android Market, this app allows a user to quickly process a still photo taken on an Android smartphone, empowering them to remove unwanted identifying visual elements (faces, logos, signs, places) and remove unwanted digital metadata attached to the photo (GPS data, camera make and model, timestamps, etc). The app assists the user in this process by using Android’s built-in face detection technology to automatically identify and pixelize faces found in photos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/&#34;&gt;&lt;img class=&#34;alignnone&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/02_autodetect.png&#34; width=&#34;560&#34; height=&#34;336&#34; /&gt;&lt;/a&gt;{.vt-p}&lt;/p&gt;

&lt;p&gt;We continue to develop ObscuraCam in order to add new features, filters and privacy-enhancing capabilities. In addition, we exploring the “Informa” mode of this application, which uses the same technologies developed to assist in removing information, and instead uses them to add layers of extra verification, subject consent and intent tracking, and full media encryption. The idea is that in many cases people want to use visual media as evidence, or at least as reliable sources for journalistic use, and the more data that can be securely and safely captured and associated with a mediafile, the better. This is still in the research and design phase, but we expect to have some concepts of this ready for public play in the next few months.&lt;/p&gt;

&lt;p&gt;While ObscuraCam is exciting, it only supports photos at this time. This is a fundamental issue, because WITNESS is a human-rights video organization, and the type of compelling content people are creating on their mobile phones are moving pictures not still. A year out from when the idea was first prototyped, I am happy to say that we have addresses the major challenges necessary to achieve mobile video processing of high-resolution video on the Android phone itself. The prototype last year was faking it in a sense, as it couldn’t actual record anything, and just showed the idea that you could detect faces. Our new &lt;a href=&#34;https://github.com/guardianproject/sscvideoproto&#34;&gt;SSCVideoProto project&lt;/a&gt;{.vt-p}, utilizes the open-source &lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG video processing library&lt;/a&gt;{.vt-p}, to redact regions from recorded video files. Below is a short video that demonstrates the current state of the work.&lt;/p&gt;

&lt;p&gt;In summary, this means we can now remove, pixelize or otherwise modify any identifying content in a high-resolution video recorded on a mobile phone, before that video is uploaded to YouTube, Facebook or elsewhere. Faces can be removed, screens blacked out or any other element that shouldn’t be shown, as it would increase some risk to the subjects of the video. Beyond redaction, we can now process any video, using open-source software, on an Android phone, including trimming, splitting, adjusting color, balance, brightness or any other common ffmpeg feature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to Shawn, Andrew and Hans for the collective work on getting us to this milestone&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/guardianproject/android-ffmpeg&#34;&gt;FFMPEG on Android project&lt;/a&gt;{.vt-p}&lt;br /&gt;
&lt;a href=&#34;https://github.com/guardianproject/SSCVideoProto&#34;&gt;SSCVideoProto Project&lt;/a&gt;{.vt-p}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Announcing ObscuraCam v1 – Enhance Your Visual Privacy!</title>
      <link>https://guardianproject.github.io/info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/</link>
      <pubDate>Thu, 23 Jun 2011 21:28:20 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2011/06/23/announcing-obscuracam-v1-enhance-your-visual-privacy/</guid>
      <description>

&lt;p&gt;We’re very happy to announce the beta release of &lt;a href=&#34;https://guardianproject.info/apps/securecam/&#34;&gt;ObscuraCam&lt;/a&gt; for Android. This is the first release from the SecureSmartCam project, a partnership with &lt;a href=&#34;https://www.witness.org/&#34;&gt;WITNESS&lt;/a&gt;, a leading human rights video advocacy and training organization. This is the result of an &lt;a href=&#34;https://github.com/guardianproject/SecureSmartCam/tree/obscurav1&#34;&gt;open-source development cycle&lt;/a&gt;, comprised of multiple sprints (and branches), that took place over the last five months. This “v1” release is just the first step towards the complete vision of the project.&lt;/p&gt;

&lt;p&gt;The goal of the SecureSmartCam project to to design and develop a new type of smartphone camera app that makes it simple for the user to respect the visual privacy, anonymity and consent of the subjects they photograph or record, while also enhancing their own ability to control the personally identifiable data stored inside that photo or video. Also, we think an app that allows you to pixelize your friends, disguise their faces and otherwise defend their privacy just a little bit, is a lot of fun and helps raise awareness about an important issue. In this first release we have focused on ‘obscura’ by optimizing the workflow of identity obfuscation in still images. Future releases will look at ‘informa,’ the process of properly gaining and recording informed consent from subjects, while also moving to video.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2011/06/teamdinner.jpg&#34;&gt;&lt;img class=&#34;size-full wp-image-1199 alignnone&#34; title=&#34;teamdinner&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/teamdinner.jpg&#34; width=&#34;450&#34; height=&#34;337&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2011/06/teamdinner.jpg 640w, https://guardianproject.info/wp-content/uploads/2011/06/teamdinner-300x225.jpg 300w&#34; sizes=&#34;(max-width: 450px) 100vw, 450px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;quick-download-links&#34;&gt;Quick Download Links&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://market.android.com/details?id=org.witness.sscphase1&amp;amp;feature=search_result&#34;&gt;&lt;img class=&#34;alignleft&#34; style=&#34;margin: 3px;&#34; title=&#34;obscura_market_qr&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/obscura_market_qr.jpg&#34; width=&#34;130&#34; height=&#34;130&#34; /&gt;&lt;/a&gt;For those of you who just want to get to it, head over to the &lt;a href=&#34;https://market.android.com/details?id=org.witness.sscphase1&amp;amp;feature=search_result&#34;&gt;Android Market&lt;/a&gt; to grab the latest version of the app. You can also scan the QR code to the left, and it will take you in that direction.&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2011/06/obscura_market_qr.jpg&#34;&gt;&lt;br /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For those without access to the Android Market, you can get the ObscuraCam.APK file from our &lt;a href=&#34;https://guardianproject.info/builds/Obscura/&#34;&gt;public builds folder&lt;/a&gt;. The official signed release binary is also available &lt;a href=&#34;https://guardianproject.info/downloads/ObscuraCam-1.0.4.2-20110624.apk&#34;&gt;here&lt;/a&gt;. For these options, be sure to check back for updates, because the app will not auto-update itself.&lt;/p&gt;

&lt;h4 id=&#34;the-cameras-everywhere-initiative&#34;&gt;The “Cameras Everywhere” Initiative&lt;/h4&gt;

&lt;p&gt;In January, WITNESS launched their &lt;a href=&#34;https://blog.witness.org/2011/01/cameraseverywhere/&#34;&gt;Cameras Everywhere&lt;/a&gt; initiative, in which they ask:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;As more and more people film people speaking out and taking a stand against human rights crises, how can we protect victims and witnesses and ensure informed consent as much as possible?&lt;/em&gt; &lt;em&gt;As more and more footage circulates from human rights crises around the world, how does powerful footage reach audiences in comprehensible ways that move people to action?&lt;/em&gt; &lt;em&gt;And how do we know how to trust that footage?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_Critical issues to address in this realm include safety and security in the use of video; ethical questions raised by the widespread capacity to shoot and circulate human rights video; challenges around the authenticity of video and the preservation of evidence; and the need for effective documentation around the use of video in advocacy.&lt;br /&gt;
_&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Through our collaboration, WITNESS has decided to move beyond just awareness, training and advocacy, and instead help design a next generation of Camera app software that is not just intended to share and capture more, but is meant to allow its operator to stop, think and be empowered to control the media they are capturing.&lt;/p&gt;

&lt;h4 id=&#34;a-primer-on-visual-privacy-and-anonymity&#34;&gt;A Primer on Visual Privacy and Anonymity&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Visual_privacy&#34;&gt;Visual Privacy&lt;/a&gt; is the relationship between collection and dissemination of visual information, the public expectation of privacy, and the legal issues surrounding them. It relates particularly to the increasing presence of large-scale still- and video-camera networks in everyday life. This not only includes those surveillance-oriented networks under the control of corporations and governments, but also applies to the vast new network of citizen-controlled media capture devices such as smartphones and handheld cameras that has created a peer-to-peer, social-networking based surveillance. At the same time that these networks have exploded in size, face detection and recognition technologies have also improved considerably while policy regarding the privacy and fair use of such systems and content, as well as the rights of those imaged by such networks, are topics that are not resolved. What results is a situation in which massive amounts of media are being captured every day with little to no protection of individual rights to privacy or anonymity – something that is especially detrimental to human rights efforts.&lt;/p&gt;

&lt;p&gt;As Sam Gregory of WITNESS &lt;a href=&#34;https://blog.witness.org/2011/02/human-rights-video-privacy-and-visual-anonymity-in-the-facebook-age/&#34;&gt;points out&lt;/a&gt;, most contemporary discussions around anonymous communication on the Internet focus on the data protection side – for instance options for data encryption or censorship circumvention. In the case of media content, a largely unaddressed question arises: what about the rights to anonymity and privacy for those people who appear, intentionally or not, in visual recordings? Visual privacy and anonymity may sound like a contradiction in terms, but people often wish to speak out and to ‘be seen’ while at the same time concealing their face and identifying surroundings. As human rights documentation and organizing increasingly involves media capture, how are people enabled to make purposeful choices about when they speak out and what degrees of anonymity they hold onto for themselves? Conversely, people caught in the background of a video or still may be unaware that they are even being filmed in that moment and have no option to protect themselves – particularly true in mass protest settings where the wave of group solidarity may overwhelm any sense of personal privacy. For those speaking out from marginalized positions, personal safety is a very real risk.&lt;/p&gt;

&lt;p&gt;Some examples where visual privacy and anonymity is being diluted in the name of features or security:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;http://www.timesonline.co.uk/tol/news/uk/article6913273.ece&#34;&gt;persecution&lt;/a&gt; later faced by bystanders and people who stepped in to film or assist Neda Agha-Soltan as she lay dying during the 2009 Iranian election protests.&lt;/li&gt;
&lt;li&gt;Facebook’s &lt;a href=&#34;http://blog.facebook.com/blog.php?post=467145887130&#34;&gt;opt-out feature&lt;/a&gt; for auto-detection and tagging of faces&lt;/li&gt;
&lt;li&gt;British Columbia’s privacy watchdog &lt;a href=&#34;http://www.metronews.ca/vancouver/local/article/897762--province-s-privacy-watchdog-oks-facial-recognition-to-identify-rioters&#34;&gt;OKs the use of facial recognition technology&lt;/a&gt; to identify rioters from video and still images of Vancouver’s 2011 hockey riots.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.viewdle.com/products/mobile/index.html&#34;&gt;Viewdle’s Social Camera&lt;/a&gt; automatically tags your friends in photos based on the social networking profile pictures they have published&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While some of these examples might seem harmless, or even a useful feature for law enforcement, the main issue is that the subjects of these photos and videos are never asked if they wish to participate in them, not to mention whether they want their photo published online in the first place. The permanence of media on the Web means that any uploaded content can be poured over again and again to identify individuals – either by old-fashioned investigative techniques, but crowd-sourcing, or by face detection /recognition software.&lt;/p&gt;

&lt;h4 id=&#34;how-obscuracam-helps&#34;&gt;How ObscuraCam Helps&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2011/06/01_home.png&#34;&gt;&lt;img class=&#34;alignleft&#34; style=&#34;margin: 3px;&#34; title=&#34;01_home&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/01_home-180x300.png&#34; width=&#34;180&#34; height=&#34;300&#34; /&gt;&lt;/a&gt;Part of the problem currently surrounding visual privacy and anonymity is the fact that many of the tools and applications that people use on an everyday basis do not have features built in to protect privacy. As a result, everyone with a smartphone, tablet or laptop – not to mention an actual video camera! – captures raw, unedited content that exposes the identities of participants and bystanders present at sensitive events or activities.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/apps/securecam/&#34;&gt;ObscuraCam&lt;/a&gt; is a mobile application for Android that makes it easy for anyone to protect the identity of individuals or groups represented in their photos by building obfuscation and redaction directly into the app. It can be used on photos taken directly from the app itself, or on any photo that your mobile device has access to, including local memory card images or linked Picasa albums. By moving a usually cumbersome post-production process into the daily workflow of those capturing sensitive images, it’s our hope that visual privacy will be respected when it really matters.&lt;/p&gt;

&lt;h4 id=&#34;using-obscuracam&#34;&gt;Using ObscuraCam&lt;/h4&gt;

&lt;p&gt;ObscuraCam features a simple, touch-based user interface for easy manipulation and redaction of images, as well as an automated removal of identifying metadata stored in the photo itself. The following steps walk through the process of capturing and sharing an obscured photo using ObscuraCam.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;From the application home page, choose to either capture a new image or choose an existing image from your existing collections. These options just launch your standard Camera and Gallery application. When the photo is imported, identifying EXIF metadata stored in the file itself, such as GPS location, camera make and model or timestamp, will be removed.&lt;/li&gt;
&lt;li&gt;After you capture or open an image with ObscuraCam, it is automatically scanned to detect faces. Any faces detected are marked as tagged regions in an image, and the user is able to create as many additional tagged regions as they wish – either via the menu or by long-pressing the desired region. By default, tagged regions are set to be obscured via pixelation.&lt;/li&gt;
&lt;li&gt;Once a tagged region has been created, the user can interact with that region by simply touching it to bring up a contextual menu.&lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2011/06/02_autodetect.png&#34;&gt;&lt;img class=&#34;aligncenter size-medium wp-image-1171&#34; title=&#34;02_autodetect&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/02_autodetect-300x180.png&#34; width=&#34;300&#34; height=&#34;180&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2011/06/02_autodetect-300x180.png 300w, https://guardianproject.info/wp-content/uploads/2011/06/02_autodetect.png 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Options available from the contextual tagging menu include:

&lt;ul&gt;
&lt;li&gt;Edit – select to scale and move tagged regions&lt;/li&gt;
&lt;li&gt;Redact – select to fully redact tagged region and replace with black space&lt;/li&gt;
&lt;li&gt;Pixelate – select to selectively obfuscate identities of persons or situations&lt;/li&gt;
&lt;li&gt;bgPixelate – select to easily obfuscate everything BUT the tagged region&lt;/li&gt;
&lt;li&gt;Mask – select to pin a set of ‘groucho marks’ glasses on the tagged region – not only a bit of fun, but useful for quickly defeating facial recognition schemes.&lt;/li&gt;
&lt;li&gt;Delete – delete the current tagged region&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Once you’re done selecting and obfuscating tagged regions, you can use the options from the main application menu to see a preview of the finished image, save it to your local memory, or share the picture with any application on your handset that is configured to accept images. This includes applications like Facebook, Twitter, or the default Messaging app. &lt;a href=&#34;https://guardianproject.info/wp-content/uploads/2011/06/09_processed.png&#34;&gt;&lt;img class=&#34;aligncenter size-medium wp-image-1172&#34; title=&#34;09_processed&#34; alt=&#34;&#34; src=&#34;https://guardianproject.info/wp-content/uploads/2011/06/09_processed-180x300.png&#34; width=&#34;180&#34; height=&#34;300&#34; srcset=&#34;https://guardianproject.info/wp-content/uploads/2011/06/09_processed-180x300.png 180w, https://guardianproject.info/wp-content/uploads/2011/06/09_processed.png 480w&#34; sizes=&#34;(max-width: 180px) 100vw, 180px&#34; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;share-with-us-and-save-your-face&#34;&gt;Share With Us and “Save Your Face”!&lt;/h4&gt;

&lt;p&gt;As impediments of visual privacy continue to expand, help us get the word out that we can take back control over our online identities with ObscuraCam! We’ve set up a &lt;a href=&#34;https://www.facebook.com/pages/ObscuraCam-Saving-Your-Social-Face/110765659013081&#34;&gt;Facebook Page&lt;/a&gt; where you can share your creations with us, and with eachother!&lt;/p&gt;

&lt;h4 id=&#34;source-code-issue-reporting&#34;&gt;Source Code &amp;amp; Issue Reporting&lt;/h4&gt;

&lt;p&gt;We’re big fans of open source and living in public. As consistent with all our projects, source code for the SecureSmartCam project, along with the ObscuraCam release, is available online at &lt;a href=&#34;https://github.com/guardianproject/SecureSmartCam&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We also use GitHub to manage our development milestones and active bugs / issues. If you encounter any bugs or issues when testing out this beta build, please report them directly to us in the comments below or by filing directly on the &lt;a href=&#34;https://github.com/guardianproject/SecureSmartCam/issues&#34;&gt;Issues&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Addressing a “Privacy Challenge” with Guardian</title>
      <link>https://guardianproject.github.io/info/2011/03/02/addressing-a-privacy-challenge-with-guardian/</link>
      <pubDate>Wed, 02 Mar 2011 20:39:18 -0400</pubDate>
      
      <guid>https://guardianproject.github.io/info/2011/03/02/addressing-a-privacy-challenge-with-guardian/</guid>
      <description>&lt;p&gt;Organized by the &lt;a href=&#34;http://aclunc.org/&#34;&gt;ACLU&lt;/a&gt;, &lt;a href=&#34;https://www.torproject.org/&#34;&gt;Tor Project&lt;/a&gt;, and &lt;a href=&#34;http://privacybydesign.ca/&#34;&gt;PrivacyByDesign.c&lt;/a&gt;a, the &lt;a href=&#34;http://www.develop4privacy.org/&#34;&gt;“Develop for Privacy Challenge”&lt;/a&gt; is an interesting new software development challenge that was announced last month. Developers (teams or individuals) have until May 31st to come up with apps which address this goal:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Develop apps for smartphones or other mobile devices that educate users about mobile privacy and give them the ability to claim or demand greater control of their own personal information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We don’t plan to compete in this contest ourselves, as we would rather support and encourage other developers to take a shot at it. Along those lines, we would really like to see developers use some of the &lt;a href=&#34;https://guardianproject.info/apps&#34;&gt;apps we have built&lt;/a&gt;, and &lt;a href=&#34;https://github.com/guardianproject&#34;&gt;code we have released&lt;/a&gt;, as part of their solutions. We have been putting together a large number of “lego” building blocks over the last year, just waiting for someone to come and put them together in a revolutionary way. Here is a breakdown of some of our more useful components:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.torproject.org/images/THS-4.png&#34;&gt;&lt;img class=&#34;alignleft&#34; style=&#34;margin-left: 3px; margin-right: 3px;&#34; src=&#34;https://www.torproject.org/images/THS-4.png&#34; alt=&#34;&#34; width=&#34;162&#34; height=&#34;111&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/apps/orbot&#34;&gt;ORbot -More than just Circumvention&lt;/a&gt;: beyond just being a great way to connect to Tor on Android, Orbot also supports &lt;a href=&#34;https://www.torproject.org/docs/hidden-services.html.en&#34;&gt;Tor Hidden Services&lt;/a&gt;. This means you can run local servers on your Android device, and access them via a .onion hostname from any other device or computer on the Tor network. We have been looking at building all sorts of cool anonymous peer-to-peer apps using this capability, but haven’t found the time yet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/code/orlib/&#34;&gt;ORlib – Privacy-powered HTTP and Sockets:&lt;/a&gt; This an Android Library for use by any application that wishes to route its network traffic through the Tor network. If your app uses this library, and Orbot is installed and activated on the device, it will automatically handle routing your connections, DNS requests and traffic through the Tor network. By building this into your device, it means your users do not need to have a rooted device in order to have their network traffic anonymized and otherwise protected from filtering and surveillence.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/apps/proxymob-firefox-add-on/&#34;&gt;ProxyMob&lt;/a&gt;: We have the beginnings of a Firefox for Android add-on that allows user to control the proxy settings for their browser. However, this add-on needs to fully evolve into a mobile version of &lt;a href=&#34;https://www.torproject.org/torbutton/&#34;&gt;TorButton&lt;/a&gt;. This alone would be a great project to tackle, discovering what unique challenges their are to anonymizing mobile web access, such as constant geolocation tracking!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/guardianproject/SecureSmartCam/raw/master/doc/comps/Still/11_blur.jpg&#34;&gt;&lt;img class=&#34;alignright&#34; style=&#34;margin-left: 3px; margin-right: 3px;&#34; src=&#34;https://github.com/guardianproject/SecureSmartCam/raw/master/doc/comps/Still/11_blur.jpg&#34; alt=&#34;&#34; width=&#34;173&#34; height=&#34;288&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://guardianproject.info/apps/securecam/&#34;&gt;SecureSmartCam&lt;/a&gt;: Visual privacy is an emerging area of research and development, specifically with the growing problem/benefit of cameras being everywhere, in our pockets, on our streets, at all times. We are partnering with &lt;a href=&#34;https://www.witness.org&#34;&gt;Witness.org&lt;/a&gt; to build camera software that is capable of protecting identities, securing sensitive metadata stored in photos, and empowering the documenter and subjects of photos, video and audio recordings to maintain more control of media that they have consented to be a part of. With all that in mind, we need some serious media hackers who are interested in thing liks OpenCV, GStreamer, EXIF and more to contribute to this project, and to come up with some new brilliant secure cam apps of their own.&lt;/p&gt;

&lt;p&gt;We have a number of other ongoing projects that you can find on our &lt;a href=&#34;https://github.com/guardianproject&#34;&gt;Github site&lt;/a&gt;, including encrypted SQL databases and file system tools, and our secure instant messaging app, &lt;a href=&#34;https://guardianproject.info/apps/gibber&#34;&gt;Gibberbot&lt;/a&gt;. All in all, there is a quite a bit of work on which any interest in improving mobile privacy can build upon. We would be very happy to provide support via &lt;a href=&#34;https://guardianproject.info/contact/&#34;&gt;email or IRC&lt;/a&gt; to any dev interested in working with us, as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good luck, and &lt;a href=&#34;http://www.develop4privacy.org/&#34;&gt;game on&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;**&lt;a href=&#34;http://www.develop4privacy.org/&#34;&gt;http://www.develop4privacy.org/&lt;/a&gt;&lt;br /&gt;
**&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
